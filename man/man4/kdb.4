.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)kdb.4	6.1 (Berkeley) 11/24/86
.\"
.TH KDB 4 "November 24, 1986"
.UC 7
.SH NAME
kdb \- kernel debugging facility
.SH SYNOPSIS
.B "options KDB"
.SH DESCRIPTION
.lg
.I Kdb
is a debugging facility for the kernel based on
.IR adb (1).
.I Kdb
may be used to symbolically examine and modify memory locations,
set breakpoints, and single step the system.
.PP
Several boot time options are used in conjunction
with the debugger.  To ``enable'' the debugger, the system
must be booted with the RB_KDB flag (0x40) specified in the 
.I boothowto
register.  When the debugger is
enabled the system will read
in and initialize the symbol table from the booted system.
If the RB_HALT flag (0x08) is also specified, the system will
enter the debugger at the earliest possible time to allow
breakpoints to be set before the system starts operation.
From that point on, if the RB_NOSYNC flag (0x04) is set,
typing ``^[k'', ``^[K'', or ``^[^K'' at the
console causes a trap into the debugger.
.PP
.I Kdb
supports most of the 
.I adb
command language.  The output formats `f', `F', `Y', are not
supported.  The address space maps do not exist, thus the
`/m', `?m', and `$m' commands do not exist.  Shell escapes
and command files are not supported.  The `:r' and `:k'
commands make no sense and are not recognized.  Finally, the
signal arguments to the continue and single step commands are
ignored.
.SH NOTES
.I Kdb
normally runs at a priority level below the interrupt
level of the clock and all devices; the level of the highest priority
software interrupt.  If the debugger is entered on the kernel's
per-process stack at an ipl below its normal operating level it
automatically switches to the interrupt stack to avoid potential
overflow of the kernel stack.  Should the debugger operate on
the kernel stack the message ``(on kernel stack)'' will be printed
on entry.
.PP
Note also that because
.I kdb
use input from the console to force entry to the debugger it may
not be possible to force entry if the system hangs at a priority
level higher than the console receiver interrupt.
.SH "SEE ALSO"
adb(1)
