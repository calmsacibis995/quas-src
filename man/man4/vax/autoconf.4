.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)autoconf.4	6.2 (Berkeley) 5/15/86
.\"
.TH AUTOCONF 4 "May 15, 1986"
.UC 4
.SH NAME
autoconf \- diagnostics from the autoconfiguration code
.SH DESCRIPTION
When UNIX bootstraps it probes the innards of the machine
on which it is running
and locates controllers, drives, and other devices, printing out
what it finds on the console.  This procedure is driven by a system
configuration table which is processed by
.IR config (8)
and compiled into each kernel.
.PP
On the VAX,
devices in NEXUS slots are normally noted, thus memory controllers,
UNIBUS and MASSBUS adaptors.  Devices which are not supported which
are found in NEXUS slots are noted also.
The Q-bus on the MICROVAX is configured in the same way as the UNIBUS.
.PP
MASSBUS devices are located by a very deterministic procedure since
MASSBUS space is completely probe-able.  If devices exist which
are not configured they will be silently ignored; if devices exist of
unsupported type they will be noted.
.PP
UNIBUS devices are located by probing to see if their control-status
registers respond.  If not, they are silently ignored.  If the control
status register responds but the device cannot be made to interrupt,
a diagnostic warning will be printed on the console and the device
will not be available to the system. 
.PP
Normally, the system uses the disk from which it was loaded as the root
filesystem.
If that is not possible,
a generic system will pick its root device
as the ``best'' available device (MASSBUS disks are better than
SMD UNIBUS disks are better than RK07's; the device must be drive 0
to be considered).
If such a system is booted with the RB_ASKNAME option (see
.IR reboot (2)),
then the name of the root device is read from the console terminal at boot
time, and any available device may be used.
.SH SEE ALSO
intro(4), boot(8), config(8)
.SH DIAGNOSTICS
\fBcpu type %d not configured\fR.  You tried to boot UNIX on a cpu
type which it doesn't (or at least this compiled version of UNIX doesn't)
understand.
.PP
\fBmba%d at tr%d\fR.  A MASSBUS adapter was found in tr%d (the NEXUS
slot number).  UNIX will call it mba%d.
.PP
\fB%d mba's not configured\fR.  More MASSBUS adapters were found on
the machine than were declared in the machine configuration; the excess
MASSBUS adapters will not be accessible.
.PP
\fBuba%d at tr%d\fR.  A UNIBUS adapter was found in tr%d (the NEXUS
slot number).  UNIX will call it uba%d.
.PP
\fBdr32 unsupported (at tr %d)\fR.  A DR32 interface was found in
a NEXUS, for which UNIX does not have a driver.
.PP
\fBci unsupported (at tr %d)\fR.  A CI interface was found in
a NEXUS, for which UNIX does not have a driver.
.PP
\fBmcr%d at tr%d\fR.  A memory controller was found in tr%d (the NEXUS
slot number).  UNIX will call it mcr%d.
.PP
\fB5 mcr's unsupported\fR.  UNIX supports only 4 memory controllers
per cpu.
.PP
\fBmpm unsupported (at tr%d)\fR.  Multi-port memory is unsupported
in the sense that UNIX does not know how to poll it for ECC errors.
.PP
\fB%s%d at mba%d drive %d\fR.  A tape formatter or a disk was found
on the MASSBUS; for disks %s%d will look like ``hp0'', for tape formatters
like ``ht1''.  The drive number comes from the unit plug on the drive
or in the TM formatter (\fBnot\fR on the tape drive; see below).
.PP
\fB%s%d at %s%d slave %d\fR.  (For MASSBUS devices).
Which would look like ``tu0 at ht0 slave 0'',
where \fBtu0\fR is the name for the tape device and \fBht0\fR is the name
for the formatter.  A tape slave was found on the tape formatter at the
indicated drive number (on the front of the tape drive).
UNIX will call the device, e.g., \fBtu0\fR.
.PP
\fB%s%d at uba%d csr %o vec %o ipl %x\fR.  The device %s%d, e.g. dz0
was found on uba%d at control-status register address %o and with
device vector %o.  The device interrupted at priority level %x.
.PP
\fB%s%d at uba%d csr %o zero vector\fR.  The device did not present
a valid interrupt vector, rather presented 0 (a passive release condition)
to the adapter.
.PP
\fB%s%d at uba%d csr %o didn't interrupt\fR.  The device did not interrupt,
likely because it is broken, hung, or not the kind of device it is advertised
to be.
.PP
\fB%s%d at %s%d slave %d\fR.  (For UNIBUS devices).
Which would look like ``up0 at sc0 slave 0'',
where \fBup0\fR is the name of a disk drive and \fBsc0\fR is the name
of the controller.  Analogous to MASSBUS case.
