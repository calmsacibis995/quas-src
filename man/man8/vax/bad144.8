.\" Copyright (c) 1980, 1988 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)bad144.8	6.5 (Berkeley) 7/9/88
.\"
.TH BAD144 8 "July 9, 1988"
.UC 4
.SH NAME
bad144 \- read/write dec standard 144 bad sector information
.SH SYNOPSIS
.B /etc/bad144
[
.B \-f
] [
.B \-c
] [
.B \-v
]
disk
[ sno [
bad ...
] ]
.br
.B /etc/bad144
.B \-a
[
.B \-f
] [
.B \-c
] [
.B \-v
]
disk
[
bad ...
]
.SH DESCRIPTION
.I Bad144
can be used to inspect the information stored on a disk that is used by
the disk drivers to implement bad sector forwarding.  The format of
the information is specified by DEC standard 144, as follows.
.PP
The bad sector information is located in the first 5 even numbered sectors
of the last track of the disk pack.  There are five identical copies of
the information, described by the
.I dkbad
structure.
.PP
Replacement sectors are allocated starting with the first sector before
the bad sector information and working backwards towards the beginning
of the disk.  A maximum of 126 bad sectors are supported.  The position
of the bad sector in the bad sector table determines the replacement
sector to which it corresponds.
The bad sectors must be listed in ascending order.
.PP
The bad sector information and replacement sectors are conventionally
only accessible through the ``c'' file system partition of the disk.  If
that partition is used for a file system, the user is responsible for
making sure that it does not overlap the bad sector information or any
replacement sectors.
Thus, one track plus 126 sectors must be reserved to allow use
of all of the possible bad sector replacements.
.PP
The bad sector structure is as follows:
.PP
.ta .75i 1.5i 3.5i
.nf
struct dkbad {
	long	bt_csn;	/* cartridge serial number */
	u_short	bt_mbz;	/* unused; should be 0 */
	u_short	bt_flag;	/* -1 => alignment cartridge */
	struct bt_bad {
		u_short bt_cyl;	/* cylinder number of bad sector */
		u_short bt_trksec;	/* track and sector number */
	} bt_bad[126];
};
.fi
.PP
Unused slots in the
.I bt_bad
array are filled with all bits set, a putatively
illegal value.
.PP
.I Bad144
is invoked by giving a device name (e.g. hk0, hp1, etc.).
With no optional arguments
it reads the first sector of the last track
of the corresponding disk and prints out the bad sector information.
It issues a warning if the bad sectors are out of order.
.I Bad144
may also be invoked with a serial number for the pack and a list
of bad sectors.
It will write the supplied information into all copies
of the bad-sector file, replacing any previous information.
Note, however, that 
.I bad144
does not arrange for the specified sectors to be marked bad in this case.
This procedure should only be used to restore known bad sector information which
was destroyed.
.PP
With the
.B \-a
option,
the argument list consists of new bad sectors to be added to an existing
list.
The new sectors are sorted into the list,
which must have been in order.
Replacement sectors are moved to accommodate the additions;
the new replacement sectors are cleared.
The entire process is described as it happens in gory detail if
.B \-v
(verbose) is given.
The
.B \-c
option forces an attempt to copy the old sector to the replacement,
and may be useful when replacing an unreliable sector.
.PP
If the disk is an RP06, RM03, RM05, Fujitsu Eagle,
or SMD disk on a Massbus, the
.B \-f
option may be used to mark the new bad sectors as ``bad''
by reformatting them as unusable sectors.
This option is required unless the sectors have already been marked bad,
or the system will not be notified that it should use the replacement sector.
This option may be used while running multiuser; it is no longer necessary
to perform format operations while running single-user.
.PP
It is no longer necessary to reboot to allow the kernel
to reread the bad-sector table from the drive.
.SH SEE ALSO
badsect(8),
format(8V)
.SH BUGS
It should be possible to format disks on-line under UNIX.
.PP
It should be possible to mark bad sectors on drives of all type.
.PP
On an 11/750,
the standard bootstrap drivers used to boot the system do
not understand bad sectors,
handle ECC errors, or the special SSE (skip sector) errors of RM80-type disks.
This means that none of these errors can occur when reading the file
/vmunix to boot.  Sectors 0-15 of the disk drive
must also not have any of these errors.
.PP
The drivers which write a system core image on disk after a crash do not
handle errors; thus the crash dump area must be free of errors and bad
sectors.
