AAD1	../vaxuba/lpa.c	/^#define AAD1	0170400$/
AAD2	../vaxuba/lpa.c	/^#define AAD2	1		\/* 0170440 - DOES NOT EXIST *\/$/
ACCA	../vax/kdb_opset.c	/^#define	ACCA	(8<<TYPLG)			\/* address only *\/$/
ACCB	../vax/kdb_opset.c	/^#define	ACCB	(4<<TYPLG)			\/* branch displacement /
ACCESSMASK	../vax/kdb_opset.c	/^#define ACCESSMASK	(ACCA | ACCR | ACCW | ACCB)	\/*/
ACCI	../vax/kdb_opset.c	/^#define	ACCI	(ACCB | ACCR)			\/* XFC code *\/$/
ACCM	../vax/kdb_opset.c	/^#define	ACCM	(ACCR | ACCW)			\/* modify *\/$/
ACCR	../vax/kdb_opset.c	/^#define	ACCR	(1<<TYPLG)			\/* read *\/$/
ACCS	../vax/mtpr.h	/^#define	ACCS	0x28		\/* accelerator control and sta/
ACCV	../vax/kdb_opset.c	/^#define	ACCV	(8<<TYPLG)			\/* address only *\/$/
ACCW	../vax/kdb_opset.c	/^#define	ACCW	(2<<TYPLG)			\/* write *\/$/
ACC_ERR	../vaxif/if_accreg.h	/^#define	ACC_ERR		0x8000		\/* error present *\/$/
ACC_GO	../vaxif/if_accreg.h	/^#define	ACC_GO		0x0001		\/* start operation *\/$/
ACC_IE	../vaxif/if_accreg.h	/^#define	ACC_IE		0x0040		\/* interrupt enable *\/$/
ACC_INBITS	../vaxif/if_accreg.h	/^#define ACC_INBITS \\$/
ACC_NXM	../vaxif/if_accreg.h	/^#define	ACC_NXM		0x4000		\/* non-existant memory */
ACC_OUTBITS	../vaxif/if_accreg.h	/^#define ACC_OUTBITS \\$/
ACC_RDY	../vaxif/if_accreg.h	/^#define	ACC_RDY		0x0080		\/* ready *\/$/
ACC_RESET	../vaxif/if_accreg.h	/^#define	ACC_RESET	0x0002		\/* reset interface *\/$/
ACLOCKA	../vaxuba/lpa.c	/^#define ACLOCKA	0170404		\/* LPA bus addresses *\//
ACLOCKB	../vaxuba/lpa.c	/^#define ACLOCKB	0170432$/
ACOMPAT	../h/acct.h	/^#define	ACOMPAT	0004		\/* used compatibility mode /
ACORE	../h/acct.h	/^#define	ACORE	0010		\/* dumped core *\/$/
ACR	../vaxuba/dn.c	/^#define	ACR	0x4000		\/* abandon call and retry *\//
ADA	../vaxuba/lpa.c	/^#define ADA	0170420$/
ADBUSY	../vaxuba/ad.c	/^#define ADBUSY 01$/
ADD	../vax/in_cksum.c	/^#define ADD		asm("adwc (r9)+,r8;");$/
ADDCARRY	../netinet/in_cksum.c	/^#define ADDCARRY(x)  (x > 65535 ? x -= 65535 : x)$/
ADDDOMAIN	../sys/uipc_domain.c	/^#define	ADDDOMAIN(x)	{ \\$/
ADDR0	../vaxuba/psreg.h	/^#define ADDR0		0177500$/
ADDR1	../vaxuba/psreg.h	/^#define ADDR1		0177501$/
ADDR2	../vaxuba/psreg.h	/^#define ADDR2		0177502$/
ADDR24	../vaxuba/npreg.h	/^#define ADDR24		1 \/* Used by iomalloc() to specif/
ADDR3	../vaxuba/psreg.h	/^#define ADDR3		0177503$/
ADDR4	../vaxuba/psreg.h	/^#define ADDR4		0177504$/
ADDR5	../vaxuba/psreg.h	/^#define ADDR5		0177505$/
ADDR6	../vaxuba/psreg.h	/^#define ADDR6		0177506$/
ADDR7	../vaxuba/psreg.h	/^#define ADDR7		0177507$/
ADIO1	../vaxuba/lpa.c	/^#define ADIO1	1		\/* 0167770 - DOES NOT EXIST *\/$/
ADIO2	../vaxuba/lpa.c	/^#define ADIO2	1		\/* 0167760 - DOES NOT EXIST *\/$/
ADIO3	../vaxuba/lpa.c	/^#define ADIO3	1		\/* 0167750 - DOES NOT EXIST *\/$/
ADIO4	../vaxuba/lpa.c	/^#define ADIO4	1		\/* 0167740 - DOES NOT EXIST *\/$/
ADIO5	../vaxuba/lpa.c	/^#define ADIO5	1		\/* 0167730 - DOES NOT EXIST *\/$/
ADIOGETW	../vaxuba/adreg.h	/^#define	ADIOGETW	_IOR('a', 1, int)	\/* read one wo/
ADIOSCHAN	../vaxuba/adreg.h	/^#define	ADIOSCHAN	_IOW('a', 0, int)	\/* set channe/
ADUNIT	../vaxuba/ad.c	/^#define ADUNIT(dev) (minor(dev))$/
ADWAITPRI	../vaxuba/ad.c	/^#define ADWAITPRI (PZERO+1)$/
AD_CHAN	../vaxuba/adreg.h	/^#define AD_CHAN		ADIOSCHAN$/
AD_CLOCK	../vaxuba/adreg.h	/^#define AD_CLOCK		040$/
AD_DONE	../vaxuba/adreg.h	/^#define AD_DONE 		0200$/
AD_ERROR	../vaxuba/adreg.h	/^#define AD_ERROR		0100000$/
AD_IENABLE	../vaxuba/adreg.h	/^#define AD_IENABLE		0100$/
AD_INCENABLE	../vaxuba/adreg.h	/^#define AD_INCENABLE		040000$/
AD_READ	../vaxuba/adreg.h	/^#define AD_READ		ADIOGETW$/
AD_SCHMITT	../vaxuba/adreg.h	/^#define AD_SCHMITT		020$/
AD_START	../vaxuba/adreg.h	/^#define AD_START		01$/
AEB_MAX_BP	../vax/mscpvar.h	/^#define	AEB_MAX_BP	32		\/* max pend xfers (power o/
AFINET	../net/af.c	/^#define	AFINET \\$/
AFNS	../net/af.c	/^#define	AFNS \\$/
AFNULL	../net/af.c	/^#define	AFNULL \\$/
AFORK	../h/acct.h	/^#define	AFORK	0001		\/* has executed fork, but no /
AF_APPLETALK	../h/socket.h	/^#define	AF_APPLETALK	16		\/* Apple Talk *\/$/
AF_CCITT	../h/socket.h	/^#define	AF_CCITT	10		\/* CCITT protocols, X.25 etc/
AF_CHAOS	../h/socket.h	/^#define	AF_CHAOS	5		\/* mit CHAOS protocols *\/$/
AF_DATAKIT	../h/socket.h	/^#define	AF_DATAKIT	9		\/* datakit protocols *\/$/
AF_DECnet	../h/socket.h	/^#define AF_DECnet	12		\/* DECnet *\/$/
AF_DLI	../h/socket.h	/^#define AF_DLI		13		\/* Direct data link interface/
AF_ECMA	../h/socket.h	/^#define	AF_ECMA		8		\/* european computer manufact/
AF_HYLINK	../h/socket.h	/^#define	AF_HYLINK	15		\/* NSC Hyperchannel *\/$/
AF_IMPLINK	../h/socket.h	/^#define	AF_IMPLINK	3		\/* arpanet imp addresses */
AF_INET	../h/socket.h	/^#define	AF_INET		2		\/* internetwork: UDP, TCP, et/
AF_LAT	../h/socket.h	/^#define AF_LAT		14		\/* LAT *\/$/
AF_MAX	../h/socket.h	/^#define	AF_MAX		17$/
AF_NBS	../h/socket.h	/^#define	AF_NBS		7		\/* nbs protocols *\/$/
AF_NS	../h/socket.h	/^#define	AF_NS		6		\/* XEROX NS protocols *\/$/
AF_PUP	../h/socket.h	/^#define	AF_PUP		4		\/* pup protocols: e.g. BSP *\//
AF_SNA	../h/socket.h	/^#define	AF_SNA		11		\/* IBM SNA *\/$/
AF_UNIX	../h/socket.h	/^#define	AF_UNIX		1		\/* local to host (pipes, port/
AF_UNSPEC	../h/socket.h	/^#define	AF_UNSPEC	0		\/* unspecified *\/$/
AHZ	../h/acct.h	/^#define AHZ 64$/
ALLDELAY	../h/ioctl.h	/^#define		ALLDELAY	(NLDELAY|TBDELAY|CRDELAY|VTDELAY/
ALLOC	../sys/vm_text.c	/^#define	ALLOC(xp) { \\$/
ALLSTEPS	../vaxuba/uda.c	/^#define	ALLSTEPS	(UDA_ERR|UDA_STEP4|UDA_STEP3|UDA_/
ALPHA_SELECT	../vaxuba/ikreg.h	/^#define ALPHA_SELECT	0140000$/
ANSWER	../vaxif/if_ddnvar.h	/^#define	ANSWER		0x03		\/* answer call			*\/$/
ANYP	../h/ioctl.h	/^#define		ANYP		0x000000c0	\/* get any parity\/send/
AP	../vax/reg.h	/^#define AP	(-21)$/
APPEND	../vax/mscpvar.h	/^#define	APPEND(bp, queue, link) { \\$/
ARCDENSITY	../h/gprof.h	/^#define ARCDENSITY	2$/
ARGMAPSIZE	../h/map.h	/^#define	ARGMAPSIZE	16$/
ARPHRD_ETHER	../net/if_arp.h	/^#define ARPHRD_ETHER 	1	\/* ethernet hardware addr/
ARPOP_REPLY	../net/if_arp.h	/^#define	ARPOP_REPLY	2	\/* response to previous req/
ARPOP_REQUEST	../net/if_arp.h	/^#define	ARPOP_REQUEST	1	\/* request to resolve add/
ARPTAB_BSIZ	../netinet/if_ether.c	/^#define	ARPTAB_BSIZ	16		\/* bucket size *\/$/
ARPTAB_HASH	../netinet/if_ether.c	/^#define	ARPTAB_HASH(a) \\$/
ARPTAB_LOOK	../netinet/if_ether.c	/^#define	ARPTAB_LOOK(at,addr) { \\$/
ARPTAB_NB	../netinet/if_ether.c	/^#define	ARPTAB_NB	37		\/* number of buckets *\/$/
ARPTAB_SIZE	../netinet/if_ether.c	/^#define	ARPTAB_SIZE	(ARPTAB_BSIZ * ARPTAB_NB)$/
ARPT_AGE	../netinet/if_ether.c	/^#define	ARPT_AGE	(60*1)	\/* aging timer, 1 min. */
ARPT_KILLC	../netinet/if_ether.c	/^#define	ARPT_KILLC	20	\/* kill completed entry in /
ARPT_KILLI	../netinet/if_ether.c	/^#define	ARPT_KILLI	3	\/* kill incomplete entry in /
ASLP	../vaxuba/dmf.c	/^#define ASLP 1		\/* waiting for interrupt from dmf/
ASTLVL	../vax/mtpr.h	/^#define	ASTLVL	0x13		\/* async. system trap level /
ASTLVL_NONE	../vax/pcb.h	/^#define	ASTLVL_NONE	4$/
ASTLVL_USER	../vax/pcb.h	/^#define	ASTLVL_USER	3$/
AST_CLR	../vax/pcb.h	/^#define	AST_CLR		0x07000000$/
AST_NONE	../vax/pcb.h	/^#define	AST_NONE	0x04000000	\/* ast level *\/$/
AST_USER	../vax/pcb.h	/^#define	AST_USER	0x03000000	\/* ast for user mode /
ASU	../h/acct.h	/^#define	ASU	0002		\/* used super-user privileges */
ATF_COM	../net/if_arp.h	/^#define ATF_COM		0x02	\/* completed entry (enaddr /
ATF_INUSE	../net/if_arp.h	/^#define	ATF_INUSE	0x01	\/* entry in use *\/$/
ATF_PERM	../net/if_arp.h	/^#define	ATF_PERM	0x04	\/* permanent entry *\/$/
ATF_PUBL	../net/if_arp.h	/^#define	ATF_PUBL	0x08	\/* publish entry (respond f/
ATF_USETRAILERS	../net/if_arp.h	/^#define	ATF_USETRAILERS	0x10	\/* has requested tra/
AUTOINCREMENT	../vaxuba/ikreg.h	/^#define AUTOINCREMENT	0400$/
AUTOREF	../vaxuba/psreg.h	/^#define AUTOREF		010000$/
AUTO_CLEAR	../vaxuba/ikreg.h	/^#define		AUTO_CLEAR		040$/
AVAILABLE	../vaxuba/npreg.h	/^#define AVAILABLE	0x40		\/* Board available *\/$/
AXSIG	../h/acct.h	/^#define	AXSIG	0020		\/* killed by a signal *\/$/
A_AB	../vax/kdb_opset.c	/^#define	A_AB	A_CONS(ACCA, TYPB)$/
A_ACCEXT	../vax/kdb_opset.c	/^#define	A_ACCEXT(consed)	((consed) & (TYPMASK << T/
A_AD	../vax/kdb_opset.c	/^#define	A_AD	A_CONS(ACCA, TYPD)$/
A_AF	../vax/kdb_opset.c	/^#define	A_AF	A_CONS(ACCA, TYPF)$/
A_AG	../vax/kdb_opset.c	/^#define	A_AG	A_CONS(ACCA, TYPG)$/
A_AH	../vax/kdb_opset.c	/^#define	A_AH	A_CONS(ACCA, TYPH)$/
A_AL	../vax/kdb_opset.c	/^#define	A_AL	A_CONS(ACCA, TYPL)$/
A_AO	../vax/kdb_opset.c	/^#define	A_AO	A_CONS(ACCA, TYPO)$/
A_AQ	../vax/kdb_opset.c	/^#define	A_AQ	A_CONS(ACCA, TYPQ)$/
A_AW	../vax/kdb_opset.c	/^#define	A_AW	A_CONS(ACCA, TYPW)$/
A_BB	../vax/kdb_opset.c	/^#define	A_BB	A_CONS(ACCB, TYPB)$/
A_BW	../vax/kdb_opset.c	/^#define	A_BW	A_CONS(ACCB, TYPW)$/
A_CONS	../vax/kdb_opset.c	/^#define A_CONS(access, type)	((access) | (type))$/
A_MB	../vax/kdb_opset.c	/^#define	A_MB	A_CONS(ACCM, TYPB)$/
A_MD	../vax/kdb_opset.c	/^#define	A_MD	A_CONS(ACCM, TYPD)$/
A_MF	../vax/kdb_opset.c	/^#define	A_MF	A_CONS(ACCM, TYPF)$/
A_MG	../vax/kdb_opset.c	/^#define	A_MG	A_CONS(ACCM, TYPG)$/
A_MH	../vax/kdb_opset.c	/^#define	A_MH	A_CONS(ACCM, TYPH)$/
A_ML	../vax/kdb_opset.c	/^#define	A_ML	A_CONS(ACCM, TYPL)$/
A_MW	../vax/kdb_opset.c	/^#define	A_MW	A_CONS(ACCM, TYPW)$/
A_RB	../vax/kdb_opset.c	/^#define	A_RB	A_CONS(ACCR, TYPB)$/
A_RD	../vax/kdb_opset.c	/^#define	A_RD	A_CONS(ACCR, TYPD)$/
A_RF	../vax/kdb_opset.c	/^#define	A_RF	A_CONS(ACCR, TYPF)$/
A_RG	../vax/kdb_opset.c	/^#define	A_RG	A_CONS(ACCR, TYPG)$/
A_RH	../vax/kdb_opset.c	/^#define	A_RH	A_CONS(ACCR, TYPH)$/
A_RL	../vax/kdb_opset.c	/^#define	A_RL	A_CONS(ACCR, TYPL)$/
A_RO	../vax/kdb_opset.c	/^#define	A_RO	A_CONS(ACCR, TYPO)$/
A_RQ	../vax/kdb_opset.c	/^#define	A_RQ	A_CONS(ACCR, TYPQ)$/
A_RW	../vax/kdb_opset.c	/^#define	A_RW	A_CONS(ACCR, TYPW)$/
A_TYPEXT	../vax/kdb_opset.c	/^#define	A_TYPEXT(consed)	((consed) & TYPMASK)$/
A_VB	../vax/kdb_opset.c	/^#define	A_VB	A_CONS(ACCR, TYPB)$/
A_VD	../vax/kdb_opset.c	/^#define	A_VD	A_CONS(ACCR, TYPD)$/
A_VF	../vax/kdb_opset.c	/^#define	A_VF	A_CONS(ACCR, TYPF)$/
A_VG	../vax/kdb_opset.c	/^#define	A_VG	A_CONS(ACCR, TYPG)$/
A_VH	../vax/kdb_opset.c	/^#define	A_VH	A_CONS(ACCR, TYPH)$/
A_VL	../vax/kdb_opset.c	/^#define	A_VL	A_CONS(ACCR, TYPL)$/
A_VO	../vax/kdb_opset.c	/^#define	A_VO	A_CONS(ACCR, TYPO)$/
A_VQ	../vax/kdb_opset.c	/^#define	A_VQ	A_CONS(ACCR, TYPQ)$/
A_VW	../vax/kdb_opset.c	/^#define	A_VW	A_CONS(ACCR, TYPW)$/
A_WB	../vax/kdb_opset.c	/^#define	A_WB	A_CONS(ACCW, TYPB)$/
A_WD	../vax/kdb_opset.c	/^#define	A_WD	A_CONS(ACCW, TYPD)$/
A_WF	../vax/kdb_opset.c	/^#define	A_WF	A_CONS(ACCW, TYPF)$/
A_WG	../vax/kdb_opset.c	/^#define	A_WG	A_CONS(ACCW, TYPG)$/
A_WH	../vax/kdb_opset.c	/^#define	A_WH	A_CONS(ACCW, TYPH)$/
A_WL	../vax/kdb_opset.c	/^#define	A_WL	A_CONS(ACCW, TYPL)$/
A_WO	../vax/kdb_opset.c	/^#define	A_WO	A_CONS(ACCW, TYPO)$/
A_WQ	../vax/kdb_opset.c	/^#define	A_WQ	A_CONS(ACCW, TYPQ)$/
A_WW	../vax/kdb_opset.c	/^#define	A_WW	A_CONS(ACCW, TYPW)$/
B0	../h/ttydev.h	/^#define B0	0$/
B110	../h/ttydev.h	/^#define B110	3$/
B1200	../h/ttydev.h	/^#define B1200	9$/
B134	../h/ttydev.h	/^#define B134	4$/
B150	../h/ttydev.h	/^#define B150	5$/
B1800	../h/ttydev.h	/^#define	B1800	10$/
B200	../h/ttydev.h	/^#define B200	6$/
B2400	../h/ttydev.h	/^#define B2400	11$/
B300	../h/ttydev.h	/^#define B300	7$/
B4800	../h/ttydev.h	/^#define B4800	12$/
B50	../h/ttydev.h	/^#define B50	1$/
B600	../h/ttydev.h	/^#define B600	8$/
B75	../h/ttydev.h	/^#define B75	2$/
B9600	../h/ttydev.h	/^#define B9600	13$/
BACK	../sys/vm_page.c	/^#define	BACK	2$/
BACKSPACE	../h/tty.h	/^#define	BACKSPACE	2$/
BADBOARD	../vaxuba/npreg.h	/^#define BADBOARD	0x20		\/* Board disabled *\/$/
BADCODE	../vax/mscp.c	/^#define BADCODE(h)	(codemsg[(unsigned)(h) >> 28])$/
BADLBN	../vax/mscp.c	/^#define BADLBN(h)	((h) & 0xfffffff)$/
BADSIG	../h/signal.h	/^#define	BADSIG		(int (*)())-1$/
BASEPRI	../vax/machparam.h	/^#define	BASEPRI(ps)	(((ps) & PSL_IPL) == 0)$/
BBLOCK	../h/fs.h	/^#define	BBLOCK		((daddr_t)(0))$/
BBOFF	../h/fs.h	/^#define	BBOFF		((off_t)(0))$/
BBSIZE	../h/fs.h	/^#define BBSIZE		8192$/
BDPMASK	../vaxuba/uba.c	/^#define	BDPMASK	0xf0000000	\/* see ubavar.h *\/$/
BGNCNT	../vaxuba/npreg.h	/^#define BGNCNT	2$/
BIG_ENDIAN	../netinet/tcp.h	/^#define	BIG_ENDIAN	4321	\/* most-significant byte /
BINID	../vax/mtpr.h	/^#define	BINID	0x5e		\/* VAXBI node ID register *\//
BIOGMODE	../h/tablet.h	/^#define BIOGMODE	_IOR('b', 2, int)	\/* get mode bi/
BIOGTYPE	../h/tablet.h	/^#define BIOGTYPE	_IOR('b', 4, int)	\/* get tablet /
BIOSMODE	../h/tablet.h	/^#define BIOSMODE	_IOW('b', 1, int)	\/* set mode bi/
BIOSTYPE	../h/tablet.h	/^#define BIOSTYPE	_IOW('b', 3, int)	\/* set tablet /
BISTOP	../vax/mtpr.h	/^#define	BISTOP	0x5f		\/* VAXBI stop register *\/$/
BITS6	../vaxuba/dhreg.h	/^#define	BITS6	01$/
BITS7	../vaxuba/dhreg.h	/^#define	BITS7	02$/
BITS8	../vaxuba/dhreg.h	/^#define	BITS8	03$/
BKINPUT	../h/bkmac.h	/^#define	BKINPUT(c, tp) { \\$/
BLKDEV_IOSIZE	../vax/machparam.h	/^#define BLKDEV_IOSIZE	2048$/
BLUE_SELECT	../vaxuba/ikreg.h	/^#define BLUE_SELECT	0100000$/
BOARDREQ	../vaxuba/npreg.h	/^#define BOARDREQ	0x10		\/* Any request by the boar/
BPT	../vax/kdbparam.h	/^#define BPT	03$/
BQUEUES	../h/buf.h	/^#define	BQUEUES		4		\/* number of free buffer queu/
BQ_AGE	../h/buf.h	/^#define	BQ_AGE		2		\/* rubbish *\/$/
BQ_EMPTY	../h/buf.h	/^#define	BQ_EMPTY	3		\/* buffer headers with no mem/
BQ_LOCKED	../h/buf.h	/^#define	BQ_LOCKED	0		\/* super-blocks &c *\/$/
BQ_LRU	../h/buf.h	/^#define	BQ_LRU		1		\/* lru, useful buffers *\/$/
BRDDONE	../vaxuba/npreg.h	/^#define BRDDONE 1$/
BRDRESET	../vaxuba/npreg.h	/^#define BRDRESET	0x80		\/* Board is being reset */
BREAK	../vax/tu.c	/^#define	BREAK	1		\/* send break *\/$/
BROADSLOT	../vaxif/if_exreg.h	/^#define	BROADSLOT	255	\/* broadcast slot index *\//
BS0	../h/ioctl.h	/^#define			BS0	0x00000000$/
BS1	../h/ioctl.h	/^#define			BS1	0x00008000$/
BSD	../netinet/tcp_var.h	/^#define BSD 42	\/* if we're not 4.3, pretend we're/
BSD4_3	../h/param.h	/^#define BSD4_3	1$/
BSDELAY	../h/ioctl.h	/^#define		BSDELAY		0x00008000	\/* \\b delay *\/$/
BSE	../h/dkbad.h	/^#define	BSE	2$/
BTOPKERNBASE	../vax/machparam.h	/^#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)/
BTOPUSRSTACK	../vax/vmparam.h	/^#define	BTOPUSRSTACK	(0x400000 - UPAGES)	 \/* btop/
BUA	../vaxuba/ubavar.h	/^#define	BUA(uba)	((struct dwbua_regs *)(uba))$/
BUACSR_BADBDP	../vaxuba/ubareg.h	/^#define	BUACSR_BADBDP	0x01000000	\/* bad BDP selec/
BUACSR_BIF	../vaxuba/ubareg.h	/^#define	BUACSR_BIF	0x10000000	\/* BI failure *\/$/
BUACSR_BUAEIE	../vaxuba/ubareg.h	/^#define	BUACSR_BUAEIE	0x00100000	\/* bua error int/
BUACSR_ERR	../vaxuba/ubareg.h	/^#define	BUACSR_ERR	0x80000000	\/* composite error /
BUACSR_IERRNO	../vaxuba/ubareg.h	/^#define	BUACSR_IERRNO	0x000000ff	\/* mask for inte/
BUACSR_IVMR	../vaxuba/ubareg.h	/^#define	BUACSR_IVMR	0x02000000	\/* invalid map reg/
BUACSR_SSYNTO	../vaxuba/ubareg.h	/^#define	BUACSR_SSYNTO	0x08000000	\/* slave sync ti/
BUACSR_UIE	../vaxuba/ubareg.h	/^#define	BUACSR_UIE	0x04000000	\/* unibus interlock/
BUACSR_UPI	../vaxuba/ubareg.h	/^#define	BUACSR_UPI	0x00020000	\/* unibus power ini/
BUACSR_UREGDUMP	../vaxuba/ubareg.h	/^#define	BUACSR_UREGDUMP	0x00010000	\/* microdiag r/
BUADPR_DPSEL	../vaxuba/ubareg.h	/^#define	BUADPR_DPSEL	0x00e00000	\/* data path sele/
BUADPR_PURGE	../vaxuba/ubareg.h	/^#define	BUADPR_PURGE	0x00000001	\/* purge bdp *\/$/
BUAMR_IOADR	../vaxuba/ubareg.h	/^#define	BUAMR_IOADR	0x40000000	\/* I\/O address sp/
BUAMR_LAE	../vaxuba/ubareg.h	/^#define	BUAMR_LAE	0x04000000	\/* longword access e/
BUAOFFSET_MASK	../vaxuba/ubareg.h	/^#define	BUAOFFSET_MASK	0x00003e00	\/* hence max of/
BUCKETINDX	../h/malloc.h	/^#define BUCKETINDX(size) \\$/
BUFFMAPPED	../vaxuba/npreg.h	/^#define BUFFMAPPED	0$/
BUFHASH	../h/buf.h	/^#define	BUFHASH(dev, dblkno)	\\$/
BUFHSZ	../h/buf.h	/^#define	BUFHSZ	512$/
BUFSIZ	../sys/tty_pty.c	/^#define BUFSIZ 100		\/* Chunk size iomoved to\/fro/
BUMPTIME	../sys/kern_clock.c	/^#define BUMPTIME(t, usec) { \\$/
BYTE_MODE	../vaxuba/ikreg.h	/^#define BYTE_MODE	04000$/
BYTE_ORDER	../netinet/tcp.h	/^#define	BYTE_ORDER	LITTLE_ENDIAN$/
B_ADAPTOR	../h/reboot.h	/^#define	B_ADAPTOR(val)		(((val) >> B_ADAPTORSHIFT)/
B_ADAPTORMASK	../h/reboot.h	/^#define	B_ADAPTORMASK		0x0f$/
B_ADAPTORSHIFT	../h/reboot.h	/^#define	B_ADAPTORSHIFT		24$/
B_AGE	../h/buf.h	/^#define	B_AGE		0x000080	\/* delayed write for corr/
B_ASYNC	../h/buf.h	/^#define	B_ASYNC		0x000100	\/* don't wait for I\/O /
B_BAD	../h/buf.h	/^#define	B_BAD		0x100000	\/* bad block revectoring /
B_BUSY	../h/buf.h	/^#define	B_BUSY		0x000008	\/* not on av_forw\/back /
B_CACHE	../h/buf.h	/^#define	B_CACHE		0x008000	\/* did bread find us in/
B_CALL	../h/buf.h	/^#define	B_CALL		0x200000	\/* call b_iodone from io/
B_CONTROLLER	../h/reboot.h	/^#define	B_CONTROLLER(val)	(((val)>>B_CONTROLLERSHI/
B_CONTROLLERMASK	../h/reboot.h	/^#define B_CONTROLLERMASK	0xf$/
B_CONTROLLERSHIFT	../h/reboot.h	/^#define B_CONTROLLERSHIFT	20$/
B_CTRL	../vaxuba/rx.c	/^#define	B_CTRL		0x80000000		\/* control (format) r/
B_DELWRI	../h/buf.h	/^#define	B_DELWRI	0x000200	\/* write at exit of ava/
B_DEVMAGIC	../h/reboot.h	/^#define	B_DEVMAGIC	((u_long)0xa0000000)$/
B_DIRTY	../h/buf.h	/^#define	B_DIRTY		0x002000	\/* dirty page to be pus/
B_DONE	../h/buf.h	/^#define	B_DONE		0x000002	\/* transaction finished /
B_ERROR	../h/buf.h	/^#define	B_ERROR		0x000004	\/* transaction aborted /
B_FORMAT	../vaxmba/hp.c	/^#define	B_FORMAT	B_XXX$/
B_HEAD	../h/buf.h	/^#define	B_HEAD		0x040000	\/* a buffer header, not /
B_INVAL	../h/buf.h	/^#define	B_INVAL		0x010000	\/* does not contain val/
B_LOCKED	../h/buf.h	/^#define	B_LOCKED	0x020000	\/* locked in core (not /
B_MAGICMASK	../h/reboot.h	/^#define	B_MAGICMASK	((u_long)0xf0000000)$/
B_PAGET	../h/buf.h	/^#define	B_PAGET		0x001000	\/* page in\/out of page/
B_PARTITION	../h/reboot.h	/^#define	B_PARTITION(val)	(((val) >> B_PARTITIONSHI/
B_PARTITIONMASK	../h/reboot.h	/^#define B_PARTITIONMASK		0xff$/
B_PARTITIONSHIFT	../h/reboot.h	/^#define B_PARTITIONSHIFT	8$/
B_PGIN	../h/buf.h	/^#define	B_PGIN		0x004000	\/* pagein op, so swap() /
B_PHYS	../h/buf.h	/^#define	B_PHYS		0x000010	\/* physical IO *\/$/
B_RAW	../h/buf.h	/^#define	B_RAW		0x400000	\/* set by physio for raw /
B_RDSTAT	../vaxuba/rx.c	/^#define B_RDSTAT	0x40000000		\/* read drive status/
B_READ	../h/buf.h	/^#define	B_READ		0x000001	\/* read when I\/O occurs/
B_TAPE	../h/buf.h	/^#define	B_TAPE		0x000400	\/* this is a magtape (no/
B_TYPE	../h/reboot.h	/^#define	B_TYPE(val)		(((val) >> B_TYPESHIFT) & B_T/
B_TYPEMASK	../h/reboot.h	/^#define	B_TYPEMASK		0xff$/
B_TYPESHIFT	../h/reboot.h	/^#define	B_TYPESHIFT		0$/
B_UAREA	../h/buf.h	/^#define	B_UAREA		0x000800	\/* add u-area to a swap/
B_UNIT	../h/reboot.h	/^#define	B_UNIT(val)		(((val) >> B_UNITSHIFT) & B_U/
B_UNITMASK	../h/reboot.h	/^#define B_UNITMASK		0xf$/
B_UNITSHIFT	../h/reboot.h	/^#define B_UNITSHIFT		16$/
B_WANTED	../h/buf.h	/^#define	B_WANTED	0x000040	\/* issue wakeup when BU/
B_WRITE	../h/buf.h	/^#define	B_WRITE		0x000000	\/* non-read pseudo-flag/
B_XXX	../h/buf.h	/^#define	B_XXX		0x000020	\/* was B_MAP, alloc UNIBU/
Bignum	../vax/asnumber.h	/^typedef	struct as_number	Bignum;$/
CACHEX	../vax/mtpr.h	/^#define	CACHEX	0x5d		\/* cache invalidate register/
CADR	../vax/mtpr.h	/^#define	CADR	0x25		\/* cache disable register *\/$/
CAER	../vax/mtpr.h	/^#define	CAER	0x27		\/* cache error *\/$/
CALL	../vaxif/if_ddnvar.h	/^#define CALL		0x00		\/* outgoing call		*\/$/
CANBSIZ	../h/param.h	/^#define	CANBSIZ	256		\/* max size of typewriter li/
CAP	../vaxuba/lp.c	/^#define CAP		1$/
CASEB	../vax/kdb_opset.c	/^#define	CASEB	0x8F$/
CASEL	../vax/kdb_opset.c	/^#define	CASEL	0xCF$/
CASEW	../vax/kdb_opset.c	/^#define	CASEW	0xAF$/
CATHIWAT	../vaxuba/ct.c	/^#define	CATHIWAT	100$/
CATLOWAT	../vaxuba/ct.c	/^#define	CATLOWAT	30$/
CBICNT	../vaxuba/npreg.h	/^#define CBICNT	1$/
CBLOCK	../h/param.h	/^#define	CBLOCK	64$/
CBREAK	../h/ioctl.h	/^#define		CBREAK		0x00000002	\/* half-cooked mode */
CBRK	../h/ttychars.h	/^#define	CBRK	0377$/
CBSIZE	../h/param.h	/^#define	CBSIZE	(CBLOCK - sizeof(struct cblock *))	/
CDATA	../h/cmap.h	/^#define	CDATA		2		\/* belongs to data segment *\/$/
CDSUSP	../h/ttychars.h	/^#define	CDSUSP	CTRL('y')$/
CEOF	../h/ttychars.h	/^#define	CEOF	CTRL('d')$/
CEOT	../h/ttychars.h	/^#define	CEOT	CEOF$/
CERASE	../h/ttychars.h	/^#define	CERASE	0177$/
CFLUSH	../h/ttychars.h	/^#define	CFLUSH	CTRL('o')$/
CG_MAGIC	../h/fs.h	/^#define	CG_MAGIC	0x090255$/
CHAN_SELECT	../vaxuba/ikreg.h	/^#define CHAN_SELECT	02000$/
CHAR_BIT	../vax/machparam.h	/^#define	CHAR_BIT	NBBY$/
CHAR_MAX	../vax/machparam.h	/^#define	CHAR_MAX	0x7f$/
CHAR_MIN	../vax/machparam.h	/^#define	CHAR_MIN	0x80$/
CH_BITS	../vax/asnumber.h	/^#define	CH_BITS		32		\/* number of bits per piece /
CH_FIELD	../vax/asnumber.h	/^#define	CH_FIELD(x)	((x).num_num.numIo_int.Io_ulon/
CH_N	../vax/asnumber.h	/^#define	CH_N		4		\/* number of pieces *\/$/
CINTR	../h/ttychars.h	/^#define	CINTR	CTRL('c')$/
CKILL	../h/ttychars.h	/^#define	CKILL	CTRL('u')$/
CLBYTES	../h/param.h	/^#define	CLBYTES		(CLSIZE*NBPG)$/
CLEAR	../vaxuba/ikreg.h	/^#define CLEAR		02000$/
CLEARINT	../vaxuba/npreg.h	/^#define CLEARINT(x)	{unsign16 y; y = RCSR2(x->ioba/
CLEARLC	../vaxif/if_ddnvar.h	/^#define CLEARLC		0x04		\/* clear by LCN			*\/$/
CLEARSENT	../vaxif/if_hy.h	/^#define	CLEARSENT	9	\/* clear wait for message cmd/
CLEARVC	../vaxif/if_ddnvar.h	/^#define CLEARVC		0x02		\/* clear by VCN			*\/$/
CLISTRESERVE	../net/if_sl.c	/^#define	CLISTRESERVE	1000	\/* Can't let clists get/
CLKREAD_BAD	../vax/clock.h	/^#define	CLKREAD_BAD	2	\/* clock is bad, no time av/
CLKREAD_OK	../vax/clock.h	/^#define	CLKREAD_OK	0	\/* success, time.tv_sec set /
CLKREAD_WARN	../vax/clock.h	/^#define	CLKREAD_WARN	1	\/* clock appears wrong but/
CLK_TCK	../vax/machparam.h	/^#define	CLK_TCK		60			\/* for times() *\/$/
CLNEXT	../h/ttychars.h	/^#define	CLNEXT	CTRL('v')$/
CLOCK	../vaxuba/lpa.c	/^#define CLOCK	1		\/* mode *\/$/
CLOCKA	../vaxuba/lpa.c	/^#define CLOCKA	0<<4		\/* clock A *\/$/
CLOFF	../h/param.h	/^#define	CLOFF		CLOFSET$/
CLOFSET	../h/param.h	/^#define	CLOFSET		(CLSIZE*NBPG-1)	\/* for clusters,/
CLOSED	../vaxmba/hp.c	/^#define	CLOSED		0		\/* disk is closed. *\/$/
CLSHIFT	../h/param.h	/^#define	CLSHIFT		(PGSHIFT+CLSIZELOG2)$/
CLSIZE	../vax/machparam.h	/^#define	CLSIZE		2$/
CLSIZELOG2	../vax/machparam.h	/^#define	CLSIZELOG2	1$/
CMAP0	../vaxuba/ikreg.h	/^#define CMAP0		040600000$/
CMAP1	../vaxuba/ikreg.h	/^#define CMAP1		040610000$/
CMASK	../h/param.h	/^#define	CMASK	022		\/* default mask for file creat/
CMDCNT	../vaxuba/npreg.h	/^#define CMDCNT	2$/
CMDMASK	../vaxuba/npreg.h	/^#define CMDMASK		0xFFFF	\/* Mask ioctl cmd field (/
CMD_BOOT	../vaxif/if_dereg.h	/^#define	CMD_BOOT	0x5		\/* Boot DEUNA *\/$/
CMD_GETCMD	../vaxif/if_dereg.h	/^#define	CMD_GETCMD	0x2		\/* Execute command in PCB/
CMD_GETPCBB	../vaxif/if_dereg.h	/^#define	CMD_GETPCBB	0x1		\/* Get PCB Block *\/$/
CMD_NOOP	../vaxif/if_dereg.h	/^#define	CMD_NOOP	0x0$/
CMD_PDMD	../vaxif/if_dereg.h	/^#define	CMD_PDMD	0x8		\/* Polling demand *\/$/
CMD_RSTT	../vaxif/if_dereg.h	/^#define	CMD_RSTT	0xb		\/* Reset sanity timer *\/$/
CMD_START	../vaxif/if_dereg.h	/^#define	CMD_START	0x4		\/* Reset xmit and receive /
CMD_STEST	../vaxif/if_dereg.h	/^#define	CMD_STEST	0x3		\/* Self test mode *\/$/
CMD_STOP	../vaxif/if_dereg.h	/^#define	CMD_STOP	0xf		\/* Suspend operation *\/$/
CMD_TMRF	../vaxif/if_dereg.h	/^#define	CMD_TMRF	0xa		\/* Sanity timer off *\/$/
CMD_TMRO	../vaxif/if_dereg.h	/^#define	CMD_TMRO	0x9		\/* Sanity timer on *\/$/
CMHASH	../h/cmap.h	/^#define	CMHASH(bn)	((bn)&(CMHSIZ-1))$/
CMHEAD	../h/cmap.h	/^#define	CMHEAD	0$/
CMHSIZ	../h/cmap.h	/^#define	CMHSIZ	2048		\/* SHOULD BE DYNAMIC *\/$/
CM_OFFSET	../vaxif/if_ex.c	/^#define	CM_OFFSET(unit)		RVAL_OFF(unit, xs_cm)$/
CNTLO_BITS	../vaxif/if_dmc.h	/^#define	CNTLO_BITS	\\$/
CODE	../vax/kdb_machdep.c	/^#define	CODE	PC-1$/
COLOR_MAP_PAGES	../vaxuba/ikreg.h	/^#define		COLOR_MAP_PAGES		0600$/
COMPAT_42	../vaxmba/hp.c	/^#define	COMPAT_42$/
CONT	../h/dkbad.h	/^#define	CONT	3$/
CONTROL	../h/tty.h	/^#define	CONTROL		1$/
CORE	../vax/kdb_opset.c	/^#define	CORE	0$/
CPUSTATES	../h/dkstat.h	/^#define	CPUSTATES	4$/
CP_IDLE	../h/dkstat.h	/^#define	CP_IDLE		3$/
CP_NICE	../h/dkstat.h	/^#define	CP_NICE		1$/
CP_SYS	../h/dkstat.h	/^#define	CP_SYS		2$/
CP_USER	../h/dkstat.h	/^#define	CP_USER		0$/
CQE	../vaxuba/npreg.h	/^struct CQE {$/
CQUIT	../h/ttychars.h	/^#define	CQUIT	034		\/* FS, ^\\ *\/$/
CR0	../h/ioctl.h	/^#define			CR0	0x00000000$/
CR1	../h/ioctl.h	/^#define			CR1	0x00001000	\/* tn 300 *\/$/
CR2	../h/ioctl.h	/^#define			CR2	0x00002000	\/* tty 37 *\/$/
CR3	../h/ioctl.h	/^#define			CR3	0x00003000	\/* concept 100 *\/$/
CRBT	../vax/mtpr.h	/^#define CRBT	0x48		\/* Console reboot *\/$/
CRCF	../vaxuba/tmreg.h	/^#define	CRCF		040000		\/* CRC-F Generator *\/$/
CRDELAY	../h/ioctl.h	/^#define		CRDELAY		0x00003000	\/* \\r delay *\/$/
CREATE	../h/namei.h	/^#define	CREATE		1	\/* setup for file creation *\/$/
CRLBYSEC	../vax/crl.h	/^#define	CRLBYSEC 512			\/* bytes\/sector *\/$/
CRLCS_BITS	../vax/crl.h	/^#define	CRLCS_BITS \\$/
CRLDS_BITS	../vax/crl.h	/^#define	CRLDS_BITS \\$/
CRLERRS	../vax/crl.h	/^#define	CRLERRS		5	\/* number of retries before qu/
CRL_BUSY	../vax/crl.h	/^#define	CRL_BUSY	2$/
CRL_F_ABORT	../vax/crl.h	/^#define CRL_F_ABORT	3		\/* abort transfer *\/$/
CRL_F_NOOP	../vax/crl.h	/^#define CRL_F_NOOP	0		\/* No operation *\/$/
CRL_F_READ	../vax/crl.h	/^#define CRL_F_READ	6		\/* read block data *\/$/
CRL_F_RETSTS	../vax/crl.h	/^#define CRL_F_RETSTS	4		\/* read device status *\//
CRL_F_RSTSTS	../vax/crl.h	/^#define CRL_F_RSTSTS	2		\/* reset and return devic/
CRL_F_WRITE	../vax/crl.h	/^#define CRL_F_WRITE	5		\/* write block data *\/$/
CRL_IDLE	../vax/crl.h	/^#define	CRL_IDLE	0$/
CRL_OPEN	../vax/crl.h	/^#define	CRL_OPEN	1$/
CRL_S_ABORT	../vax/crl.h	/^#define CRL_S_ABORT	3		\/* transation abort *\/$/
CRL_S_HNDSHK	../vax/crl.h	/^#define CRL_S_HNDSHK	0x80		\/* handshake err durin/
CRL_S_HWERR	../vax/crl.h	/^#define CRL_S_HWERR	0x81		\/* hardware err during /
CRL_S_RETSTS	../vax/crl.h	/^#define CRL_S_RETSTS	4		\/* return device status */
CRL_S_XCMPLT	../vax/crl.h	/^#define CRL_S_XCMPLT	1		\/* transaction complete */
CRL_S_XCONT	../vax/crl.h	/^#define CRL_S_XCONT	2		\/* continue transaction */
CRMOD	../h/ioctl.h	/^#define		CRMOD		0x00000010	\/* map \\r to \\r\\n o/
CROUND	../h/param.h	/^#define	CROUND	(CBLOCK - 1)				\/* clist rounding /
CRPRNT	../h/ttychars.h	/^#define	CRPRNT	CTRL('r')$/
CRQ	../vaxuba/dn.c	/^#define	CRQ	0x001		\/* call request *\/$/
CRTBS	../h/ioctl.h	/^#define		CRTBS		0x00010000	\/* do backspacing for /
CRTERA	../h/ioctl.h	/^#define		CRTERA		0x00040000	\/* " \\b " to wipe ou/
CRTKIL	../h/ioctl.h	/^#define		CRTKIL		0x04000000	\/* kill line with " /
CSR0	../vaxuba/ct.c	/^#define	CSR0		0x1$/
CSR1	../vaxuba/ct.c	/^#define	CSR1		0x2$/
CSRD	../vax/mtpr.h	/^#define	CSRD	0x1d		\/* console storage receive dat/
CSRPEND	../vaxuba/npreg.h	/^#define CSRPEND		0x01		\/* CSR0 command pending */
CSRS	../vax/mtpr.h	/^#define	CSRS	0x1c		\/* console storage receive sta/
CSS_ATTN	../vaxif/if_cssreg.h	/^#define	CSS_ATTN	0x2000		\/* attention *\/$/
CSS_CLR	../vaxif/if_cssreg.h	/^#define	CSS_CLR		0x0020		\/* clear status (reset) /
CSS_CYCLE	../vaxif/if_cssreg.h	/^#define	CSS_CYCLE	0x0100		\/* force bus cycle *\/$/
CSS_ERR	../vaxif/if_cssreg.h	/^#define CSS_ERR         0x8000          \/* error /
CSS_GO	../vaxif/if_cssreg.h	/^#define CSS_GO          0x0001          \/* start /
CSS_IE	../vaxif/if_cssreg.h	/^#define CSS_IE          0x0040          \/* interr/
CSS_INBITS	../vaxif/if_cssreg.h	/^#define CSS_INBITS \\$/
CSS_MAINT	../vaxif/if_cssreg.h	/^#define	CSS_MAINT	0x1000		\/* maintenance mode *\//
CSS_NXM	../vaxif/if_cssreg.h	/^#define CSS_NXM         0x4000          \/* non-ex/
CSS_OUTBITS	../vaxif/if_cssreg.h	/^#define CSS_OUTBITS \\$/
CSS_RDY	../vaxif/if_cssreg.h	/^#define CSS_RDY         0x0080          \/* ready /
CSS_XA	../vaxif/if_cssreg.h	/^#define	CSS_XA		0x0030		\/* extended address bits /
CSTACK	../h/cmap.h	/^#define	CSTACK		3		\/* belongs to stack segment */
CSTART	../h/ttychars.h	/^#define	CSTART	CTRL('q')$/
CSTD	../vax/mtpr.h	/^#define	CSTD	0x1f		\/* console storage transmit da/
CSTOP	../h/ttychars.h	/^#define	CSTOP	CTRL('s')$/
CSTS	../vax/mtpr.h	/^#define	CSTS	0x1e		\/* console storage transmit st/
CSUSP	../h/ttychars.h	/^#define	CSUSP	CTRL('z')$/
CSWP	../vax/mtpr.h	/^#define CSWP	0x42		\/* Cache sweep *\/$/
CSYS	../h/cmap.h	/^#define	CSYS		0		\/* none of below *\/$/
CTEXT	../h/cmap.h	/^#define	CTEXT		1		\/* belongs to shared text segme/
CTLECH	../h/ioctl.h	/^#define		CTLECH		0x10000000	\/* echo control chars/
CTRL	../h/ttychars.h	/^#define	CTRL(c)	(c&037)$/
CTRLNAME	../vaxuba/tmscp.c	/^#define CTRLNAME "tmscp"$/
CTUNIT	../vaxuba/ct.c	/^#define	CTUNIT(dev)	(minor(dev))$/
CT_OPEN	../vaxuba/ct.c	/^#define	CT_OPEN		0x1$/
CT_RUNNING	../vaxuba/ct.c	/^#define	CT_RUNNING	0x2$/
CUNIT	../netns/spp_var.h	/^#define	CUNIT	1024			\/* scaling for ... *\/$/
CURSOR_LOC	../vaxuba/ikreg.h	/^#define CURSOR_LOC	6$/
CURSOR_MAP	../vaxuba/ikreg.h	/^#define CURSOR_MAP	0400$/
CURSOR_ON	../vaxuba/ikreg.h	/^#define		CURSOR_ON		04$/
CURSOR_SHADE	../vaxuba/ikreg.h	/^#define CURSOR_SHADE	7$/
CWERASE	../h/ttychars.h	/^#define	CWERASE	CTRL('w')$/
CWRITE	../vaxuba/lpa.c	/^#define CWRITE	0020000		\/* cram write *\/$/
C_FREE	../h/cmap.h	/^#define	C_FREE		88$/
C_INTRANS	../h/cmap.h	/^#define	C_INTRANS	87$/
CmdQue	../vaxuba/npreg.h	/^struct CmdQue {$/
Copyin ../vax/locore.s /^JSBENTRY(Copyin, R1|R3|R5)$/
Copyout ../vax/locore.s /^JSBENTRY(Copyout, R1|R3|R5)$/
DAB	../vaxuba/tmreg.h	/^#define	DAB		010000		\/* select diagnostic aid bit/
DATA	../vaxif/if_hdh.c	/^#define	DATA	1		\/* data channel *\/$/
DATASPACE	../netinet/tcp_output.c	/^#define	DATASPACE  (MMAXOFF - (MMINOFF + MAXLINKHD/
DBERROR	../vaxuba/psreg.h	/^#define DBERROR		0100000$/
DBIE	../vaxuba/psreg.h	/^#define DBIE		0100$/
DBNAME	../vax/kdbparam.h	/^#define DBNAME "kdb\\n"$/
DBSIZE	../vaxmba/hp.c	/^#define	DBSIZE	20$/
DBUF_DMCS	../vaxif/if_dmc.c	/^#define	DBUF_DMCS	1	\/* buffer claimed by somebody/
DBUF_OURS	../vaxif/if_dmc.c	/^#define	DBUF_OURS	0	\/* buffer is available *\/$/
DBUF_RCV	../vaxif/if_dmc.c	/^#define	DBUF_RCV	8	\/* receive buffer *\/$/
DBUF_XMIT	../vaxif/if_dmc.c	/^#define	DBUF_XMIT	4	\/* transmit buffer *\/$/
DC_OBUSY	../vaxif/if_ddnvar.h	/^#define	DC_OBUSY	0x01$/
DDNABT	../vaxif/if_ddnreg.h	/^#define DDNABT		8	\/* abort flag *\/$/
DDNDONE	../vaxif/if_ddnreg.h	/^#define DDNDONE		1	\/* i\/o completion *\/$/
DDNEOS	../vaxif/if_ddnreg.h	/^#define DDNEOS		(4|DDNSTR)  \/* end of stream flag/
DDNIOCABT	../vaxif/if_ddnreg.h	/^#define DDNIOCABT 	0361	\/* i\/o aborted *\/$/
DDNIOCERR	../vaxif/if_ddnreg.h	/^#define DDNIOCERR 	0321	\/* program error *\/$/
DDNIOCOK	../vaxif/if_ddnreg.h	/^#define DDNIOCOK	0001	\/* successful completion */
DDNIOCOKP	../vaxif/if_ddnreg.h	/^#define DDNIOCOKP 	0002	\/* successful completion,/
DDNIOCOVR	../vaxif/if_ddnreg.h	/^#define DDNIOCOVR 	0363	\/* overrun error *\/$/
DDNIOCUBE	../vaxif/if_ddnreg.h	/^#define DDNIOCUBE 	0374	\/* non-existant memory or/
DDNMTU	../vaxif/if_ddnvar.h	/^#define DDNMTU		1006		\/* maximum IP msg length */
DDNNUMR	../vaxif/if_ddnreg.h	/^#define DDNNUMR		4	\/* non-UMR transfer *\/$/
DDNRDB	../vaxif/if_ddnreg.h	/^#define DDNRDB		1	\/* read from if-11 *\/$/
DDNSACK	../vaxif/if_ddnreg.h	/^#define DDNSACK		0	\/* start i\/o ack *\/$/
DDNSTR	../vaxif/if_ddnreg.h	/^#define DDNSTR		2	\/* stream flag *\/$/
DDNUMR	../vaxif/if_ddnreg.h	/^#define DDNUMR		16	\/* UMR protocol flag *\/$/
DDNWRT	../vaxif/if_ddnreg.h	/^#define DDNWRT		0	\/* write to if-11 *\/$/
DDNXABT	../vaxif/if_ddnreg.h	/^#define DDNXABT		8	\/* abort transfer *\/$/
DDNXEVN	../vaxif/if_ddnreg.h	/^#define DDNXEVN		1	\/* start with even address *\//
DDNXODD	../vaxif/if_ddnreg.h	/^#define DDNXODD		2	\/* start with odd address *\/$/
DDNXREQ	../vaxif/if_ddnreg.h	/^#define DDNXREQ		2	\/* UMR protocol transfer reque/
DDN_BITS	../vaxif/if_ddnreg.h	/^#define DDN_BITS \\$/
DDN_DMA	../vaxif/if_ddnreg.h	/^#define DDN_DMA		0000020		\/* DMA enable *\/$/
DDN_IEN	../vaxif/if_ddnreg.h	/^#define DDN_IEN		0000004		\/* interrupt enable *\//
DDN_MAIN	../vaxif/if_ddnreg.h	/^#define DDN_MAIN	0000040		\/* select UMC main memo/
DDN_MBLK	../vaxif/if_ddnreg.h	/^#define DDN_MBLK	0000200		\/* memory swap state (0/
DDN_NMI	../vaxif/if_ddnreg.h	/^#define	DDN_NMI		0000001		\/* cause NMI *\/$/
DDN_NXM	../vaxif/if_ddnreg.h	/^#define DDN_NXM		0040000		\/* non-existent memory /
DDN_OQMAX	../vaxif/if_ddnvar.h	/^#define	DDN_OQMAX	8		\/* max IP msgs on LCN output/
DDN_PER	../vaxif/if_ddnreg.h	/^#define DDN_PER		0020000		\/* UNIBUS parity error /
DDN_RST	../vaxif/if_ddnreg.h	/^#define DDN_RST		0000002		\/* reset *\/$/
DDN_SRV	../vaxif/if_ddnreg.h	/^#define	DDN_SRV		0000100		\/* select UMC service m/
DDN_TIMEOUT	../vaxif/if_ddnvar.h	/^#define DDN_TIMEOUT	10$/
DDN_UER	../vaxif/if_ddnreg.h	/^#define DDN_UER		0100000		\/* UMC error condition /
DDN_WRT	../vaxif/if_ddnreg.h	/^#define DDN_WRT		0000010		\/* DMA write enable *\//
DDN_ZGO	../vaxif/if_ddnreg.h	/^#define DDN_ZGO		0004000		\/* Z80 not in wait stat/
DDN_ZRUN	../vaxif/if_ddnreg.h	/^#define DDN_ZRUN	0010000		\/* Z80 running *\/$/
DDSTATE	../vaxuba/rx.c	/^#define	DDSTATE	(sc->sc_csbits&RX_DDEN)$/
DEBCANCEL	../vaxuba/npreg.h	/^#define DEBCANCEL       0x8000          \/* debug /
DEBCQ	../vaxuba/npreg.h	/^#define	DEBCQ		0x0010		\/* debug cq's *\/$/
DEBCQE	../vaxuba/npreg.h	/^#define	DEBCQE		0x0008		\/* debug cqe's *\/$/
DEBCSR	../vaxuba/npreg.h	/^#define	DEBCSR		0x1000		\/* debug CSR commands *\//
DEBENTRY	../vaxuba/npreg.h	/^#define	DEBENTRY	0x0001		\/* debug entry points */
DEBIFC	../vaxuba/npreg.h	/^#define	DEBIFC		0x0100		\/* debug Internal functio/
DEBINIT	../vaxuba/npreg.h	/^#define	DEBINIT		0x0080		\/* debug initialization /
DEBINTR	../vaxuba/npreg.h	/^#define	DEBINTR		0x0040		\/* debug interrupt routi/
DEBIO	../vaxuba/npreg.h	/^#define	DEBIO		0x0800		\/* debug read & write call/
DEBIOCTL	../vaxuba/npreg.h	/^#define	DEBIOCTL	0x0200		\/* debug ioctl calls *\//
DEBLOCK	../vaxuba/npreg.h	/^#define	DEBLOCK		0x2000		\/* debug lock \/ unlock /
DEBMAINT	../vaxuba/npreg.h	/^#define	DEBMAINT	0x0020		\/* debug maintainance re/
DEBMEM	../vaxuba/npreg.h	/^#define	DEBMEM		0x0002		\/* debug memory *\/$/
DEBOPEN	../vaxuba/npreg.h	/^#define	DEBOPEN		0x0400		\/* debug open calls *\/$/
DEBREQ	../vaxuba/npreg.h	/^#define	DEBREQ		0x0004		\/* debug requests *\/$/
DEBUG	../vaxif/if_ex.c	/^#define DEBUG			\/* check for "impossible" events /
DECCTQ	../h/ioctl.h	/^#define		DECCTQ		0x40000000	\/* only ^Q starts aft/
DEFAULT_BURST	../vaxuba/uda.c	/^#define	DEFAULT_BURST	4	\/* default DMA burst size/
DEFTAPE	../h/mtio.h	/^#define	DEFTAPE	"\/dev\/rmt12"$/
DELAY	../vax/machparam.h	/^#define	DELAY(n)	{ register int N = cpuspeed * (n)/
DELAYTEN	../vaxuba/tmscp.c	/^#define DELAYTEN 1000$/
DELAYTIME	../vaxuba/npreg.h	/^#define	DELAYTIME	1000000L		\/* delay count *\/$/
DELAY_CNT	../vaxif/if_ddnvar.h	/^#define DELAY_CNT	50000$/
DELETE	../h/namei.h	/^#define	DELETE		2	\/* setup for file deletion *\/$/
DEQUEUE	../vaxif/if_dmc.c	/^#define DEQUEUE(head, tail) \\$/
DESFREE	../vax/vmparam.h	/^#define	DESFREE		(200 * 1024)$/
DESFREEFRACT	../vax/vmparam.h	/^#define	DESFREEFRACT	8$/
DEVIE	../vaxuba/psreg.h	/^#define DEVIE		0177765$/
DEVREQ	../vaxuba/psreg.h	/^#define DEVREQ		0177764$/
DEV_BSHIFT	../vax/machparam.h	/^#define	DEV_BSHIFT	9		\/* log2(DEV_BSIZE) *\/$/
DEV_BSIZE	../vax/machparam.h	/^#define	DEV_BSIZE	512$/
DFI	../vax/mtpr.h	/^#define DFI	0x49		\/* Diag fault insertion registe/
DFLDSIZ	../vax/vmparam.h	/^#define	DFLDSIZ		(6*1024*1024)		\/* initial data s/
DFLSSIZ	../vax/vmparam.h	/^#define	DFLSSIZ		(512*1024)		\/* initial stack siz/
DHU_BA2_DMAGO	../vaxuba/dhureg.h	/^#define	DHU_BA2_DMAGO	0x80		\/* transmit dma start/
DHU_BA2_XBA	../vaxuba/dhureg.h	/^#define	DHU_BA2_XBA	0x03		\/* top two bits of dma /
DHU_BRK	../vaxuba/dhureg.h	/^#define DHU_BRK	DHU_LC_BREAK$/
DHU_CAR	../vaxuba/dhureg.h	/^#define	DHU_CAR	(DHU_ST_DCD << 16)$/
DHU_CSH_NXM	../vaxuba/dhureg.h	/^#define	DHU_CSH_NXM	0x10		\/* transmit dma err: no/
DHU_CSH_TI	../vaxuba/dhureg.h	/^#define	DHU_CSH_TI	0x80		\/* transmit interrupt */
DHU_CSH_TLN	../vaxuba/dhureg.h	/^#define	DHU_CSH_TLN	0x0f		\/* transmit line number/
DHU_CS_DFAIL	../vaxuba/dhureg.h	/^#define	DHU_CS_DFAIL	0x2000		\/* diagnostic fail */
DHU_CS_IAP	../vaxuba/dhureg.h	/^#define	DHU_CS_IAP	0x000f		\/* indirect address po/
DHU_CS_MCLR	../vaxuba/dhureg.h	/^#define	DHU_CS_MCLR	0x0020		\/* master clear *\/$/
DHU_CS_RI	../vaxuba/dhureg.h	/^#define	DHU_CS_RI	0x0080		\/* receiver interrupt */
DHU_CS_RIE	../vaxuba/dhureg.h	/^#define	DHU_CS_RIE	0x0040		\/* receiver interrupt /
DHU_CS_SST	../vaxuba/dhureg.h	/^#define	DHU_CS_SST	0x0010		\/* skip self test (wit/
DHU_CS_TIE	../vaxuba/dhureg.h	/^#define	DHU_CS_TIE	0x4000		\/* transmit interrupt /
DHU_CTS	../vaxuba/dhureg.h	/^#define	DHU_CTS	(DHU_ST_CTS << 16)$/
DHU_DEF_TIMO	../vaxuba/dhu.c	/^#define	DHU_DEF_TIMO	20$/
DHU_DSR	../vaxuba/dhureg.h	/^#define	DHU_DSR	(DHU_ST_DSR << 16)$/
DHU_DTR	../vaxuba/dhureg.h	/^#define	DHU_DTR	DHU_LC_DTR$/
DHU_IE	../vaxuba/dhureg.h	/^#define	DHU_IE	(DHU_CS_TIE|DHU_CS_RIE)$/
DHU_LC2_TXEN	../vaxuba/dhureg.h	/^#define	DHU_LC2_TXEN	0x80		\/* transmitter enable /
DHU_LC_BREAK	../vaxuba/dhureg.h	/^#define	DHU_LC_BREAK	0x0008		\/* break control *\//
DHU_LC_DTR	../vaxuba/dhureg.h	/^#define	DHU_LC_DTR	0x0200		\/* data terminal ready/
DHU_LC_FXOFF	../vaxuba/dhureg.h	/^#define	DHU_LC_FXOFF	0x0020		\/* force xoff *\/$/
DHU_LC_IAUTOF	../vaxuba/dhureg.h	/^#define	DHU_LC_IAUTOF	0x0002		\/* input auto flow /
DHU_LC_MAINT	../vaxuba/dhureg.h	/^#define	DHU_LC_MAINT	0x00c0		\/* maintenance mode /
DHU_LC_MODEM	../vaxuba/dhureg.h	/^#define	DHU_LC_MODEM	0x0100		\/* modem control ena/
DHU_LC_OAUTOF	../vaxuba/dhureg.h	/^#define	DHU_LC_OAUTOF	0x0010		\/* output auto flow/
DHU_LC_RTS	../vaxuba/dhureg.h	/^#define	DHU_LC_RTS	0x1000		\/* request to send *\//
DHU_LC_RXEN	../vaxuba/dhureg.h	/^#define	DHU_LC_RXEN	0x0004		\/* receiver enable */
DHU_LC_TXABORT	../vaxuba/dhureg.h	/^#define	DHU_LC_TXABORT	0x0001		\/* transmitter abo/
DHU_LE	../vaxuba/dhureg.h	/^#define DHU_LE	DHU_LC_MODEM$/
DHU_LP_BITS6	../vaxuba/dhureg.h	/^#define	DHU_LP_BITS6	0x0008$/
DHU_LP_BITS7	../vaxuba/dhureg.h	/^#define	DHU_LP_BITS7	0x0010$/
DHU_LP_BITS8	../vaxuba/dhureg.h	/^#define	DHU_LP_BITS8	0x0018$/
DHU_LP_EPAR	../vaxuba/dhureg.h	/^#define	DHU_LP_EPAR	0x0040$/
DHU_LP_PENABLE	../vaxuba/dhureg.h	/^#define	DHU_LP_PENABLE	0x0020$/
DHU_LP_RSPEED	../vaxuba/dhureg.h	/^#define	DHU_LP_RSPEED	0x0f00$/
DHU_LP_TSPEED	../vaxuba/dhureg.h	/^#define	DHU_LP_TSPEED	0xf000$/
DHU_LP_TWOSB	../vaxuba/dhureg.h	/^#define	DHU_LP_TWOSB	0x0080$/
DHU_NO_TIMO	../vaxuba/dhu.c	/^#define DHU_NO_TIMO	1$/
DHU_OFF	../vaxuba/dhureg.h	/^#define	DHU_OFF	DHU_LC_MODEM$/
DHU_ON	../vaxuba/dhureg.h	/^#define	DHU_ON	(DHU_LC_DTR|DHU_LC_RTS|DHU_LC_MODEM/
DHU_POLL_TIMO	../vaxuba/dhu.c	/^#define DHU_POLL_TIMO	0$/
DHU_RB_DIAG	../vaxuba/dhureg.h	/^#define DHU_RB_DIAG	0x0001		\/* if DHU_RB_STAT -> /
DHU_RB_DO	../vaxuba/dhureg.h	/^#define	DHU_RB_DO	0x4000		\/* data overrun *\/$/
DHU_RB_FE	../vaxuba/dhureg.h	/^#define	DHU_RB_FE	0x2000		\/* framing error *\/$/
DHU_RB_PE	../vaxuba/dhureg.h	/^#define	DHU_RB_PE	0x1000		\/* parity error *\/$/
DHU_RB_RDS	../vaxuba/dhureg.h	/^#define	DHU_RB_RDS	0x00ff		\/* receive data\/statu/
DHU_RB_RLN	../vaxuba/dhureg.h	/^#define	DHU_RB_RLN	0x0f00		\/* receive line number/
DHU_RB_STAT	../vaxuba/dhureg.h	/^#define	DHU_RB_STAT	0x7000		\/* status bits *\/$/
DHU_RB_VALID	../vaxuba/dhureg.h	/^#define	DHU_RB_VALID	0x8000		\/* data valid *\/$/
DHU_RNG	../vaxuba/dhureg.h	/^#define	DHU_RNG	(DHU_ST_RI << 16)$/
DHU_RTS	../vaxuba/dhureg.h	/^#define	DHU_RTS	DHU_LC_RTS$/
DHU_RX_LINE	../vaxuba/dhureg.h	/^#define	DHU_RX_LINE(rbuf)	(((rbuf) & DHU_RB_RLN) >/
DHU_SELECT	../vaxuba/dhureg.h	/^#define DHU_SELECT(unit)	((unit) & DHU_CS_IAP)$/
DHU_ST_CTS	../vaxuba/dhureg.h	/^#define	DHU_ST_CTS	0x04		\/* clear to send *\/$/
DHU_ST_DCD	../vaxuba/dhureg.h	/^#define	DHU_ST_DCD	0x10		\/* carrier detect *\/$/
DHU_ST_DHU	../vaxuba/dhureg.h	/^#define	DHU_ST_DHU	0x01		\/* always one on a dhu, /
DHU_ST_DSR	../vaxuba/dhureg.h	/^#define	DHU_ST_DSR	0x80		\/* data set ready *\/$/
DHU_ST_RI	../vaxuba/dhureg.h	/^#define	DHU_ST_RI	0x20		\/* ring indicator *\/$/
DHU_TX_LINE	../vaxuba/dhureg.h	/^#define	DHU_TX_LINE(csrh)	((csrh) & DHU_CSH_TLN)$/
DHU_XBA_SHIFT	../vaxuba/dhureg.h	/^#define DHU_XBA_SHIFT	16		\/* amount to shift xba /
DH_CNI	../vaxuba/dhreg.h	/^#define	DH_CNI	0000400		\/* clear non-existant mem/
DH_DO	../vaxuba/dhreg.h	/^#define	DH_DO		0040000		\/* data overrun *\/$/
DH_FE	../vaxuba/dhreg.h	/^#define	DH_FE		0020000		\/* framing error *\/$/
DH_IE	../vaxuba/dhreg.h	/^#define	DH_IE	(DH_TIE|DH_SIE|DH_RIE)$/
DH_MC	../vaxuba/dhreg.h	/^#define	DH_MC	0004000		\/* master clear *\/$/
DH_MM	../vaxuba/dhreg.h	/^#define	DH_MM	0001000		\/* maintenance mode *\/$/
DH_NXM	../vaxuba/dhreg.h	/^#define	DH_NXM	0002000		\/* non-existant memory */
DH_PE	../vaxuba/dhreg.h	/^#define	DH_PE		0010000		\/* parity error *\/$/
DH_RI	../vaxuba/dhreg.h	/^#define	DH_RI	0000200		\/* receiver interrupt *\/$/
DH_RIE	../vaxuba/dhreg.h	/^#define	DH_RIE	0000100		\/* receiver interrupt ena/
DH_SI	../vaxuba/dhreg.h	/^#define	DH_SI	0040000		\/* storage interrupt *\/$/
DH_SIE	../vaxuba/dhreg.h	/^#define	DH_SIE	0010000		\/* storage interrupt enab/
DH_TI	../vaxuba/dhreg.h	/^#define	DH_TI	0100000		\/* transmit interrupt *\/$/
DH_TIE	../vaxuba/dhreg.h	/^#define	DH_TIE	0020000		\/* transmit interrupt ena/
DIAGTIME	../vaxuba/npreg.h	/^#define DIAGTIME	1200		\/* Time for timeout \/HZ s/
DIOCGDINFO	../h/disklabel.h	/^#define DIOCGDINFO	_IOR('d', 101, struct disklabel/
DIOCGPART	../h/disklabel.h	/^#define DIOCGPART	_IOW('d', 104, struct partinfo)	/
DIOCRFORMAT	../h/disklabel.h	/^#define DIOCRFORMAT	_IOWR('d', 105, struct format_/
DIOCSBAD	../h/disklabel.h	/^#define DIOCSBAD	_IOW('d', 110, struct dkbad)	\/* /
DIOCSDINFO	../h/disklabel.h	/^#define DIOCSDINFO	_IOW('d', 102, struct disklabel/
DIOCSRETRIES	../h/disklabel.h	/^#define DIOCSRETRIES	_IOW('d', 108, int)	\/* set #/
DIOCSSTEP	../h/disklabel.h	/^#define DIOCSSTEP	_IOW('d', 107, int)	\/* set step/
DIOCWDINFO	../h/disklabel.h	/^#define DIOCWDINFO	_IOW('d', 103, struct disklabel/
DIOCWFORMAT	../h/disklabel.h	/^#define DIOCWFORMAT	_IOWR('d', 106, struct format_/
DIOCWLABEL	../h/disklabel.h	/^#define DIOCWLABEL	_IOW('d', 109, int)	\/* write e/
DIOREADY	../vaxuba/psreg.h	/^#define DIOREADY	0100000$/
DIORESET	../vaxuba/psreg.h	/^#define DIORESET	010000$/
DIR	../h/dir.h	/^} DIR;$/
DIRBLKSIZ	../h/dir.h	/^#define DIRBLKSIZ	DEV_BSIZE$/
DIRSIZ	../h/dir.h	/^#define DIRSIZ(dp) \\$/
DISKMAGIC	../h/disklabel.h	/^#define DISKMAGIC	((u_long) 0x82564557)	\/* The di/
DISKRPM	../vax/vmparam.h	/^#define	DISKRPM		60$/
DISKTAB	../h/disklabel.h	/^#define	DISKTAB		"\/etc\/disktab"$/
DISPLAY_RATE	../vaxuba/ikreg.h	/^#define DISPLAY_RATE	4$/
DKIOCHDR	../vax/dkio.h	/^#define DKIOCHDR	_IO('d', 1)	\/* next I\/O will re/
DKMAXTYPES	../h/disklabel.h	/^#define DKMAXTYPES	(sizeof(dktypenames) \/ sizeof(/
DK_NDRIVE	../h/dkstat.h	/^#define	DK_NDRIVE	8$/
DLO	../vaxuba/dn.c	/^#define	DLO	0x1000		\/* data line occupied *\/$/
DMAENABLE	../vaxuba/ikreg.h	/^#define DMAENABLE	0100$/
DMAIE	../vaxuba/psreg.h	/^#define DMAIE		0100$/
DMAIN	../vaxuba/psreg.h	/^#define DMAIN		04$/
DMAREADY	../vaxuba/psreg.h	/^#define DMAREADY	0200$/
DMARESET	../vaxuba/psreg.h	/^#define DMARESET	04000$/
DMBIC	../h/ttydev.h	/^#define	DMBIC		2$/
DMBIS	../h/ttydev.h	/^#define	DMBIS		1$/
DMC0BITS	../vaxif/if_dmc.h	/^#define	DMC0BITS	"\\10\\8RDI\\7IEI\\6RQI"$/
DMC1BITS	../vaxif/if_dmc.h	/^#define	DMC1BITS	"\\10\\8RUN\\7MCLR"$/
DMC2BITS	../vaxif/if_dmc.h	/^#define	DMC2BITS	"\\10\\8RDO\\7IEO"$/
DMCMTU	../vaxif/if_dmc.h	/^#define DMCMTU  1500$/
DMC_ACTIVE	../vaxif/if_dmc.c	/^#define DMC_ACTIVE	0x08		\/* device active *\/$/
DMC_ALLOC	../vaxif/if_dmc.c	/^#define DMC_ALLOC	0x01		\/* unibus resources alloc/
DMC_BACCI	../vaxif/if_dmc.h	/^#define	DMC_BACCI	0$/
DMC_BACCO	../vaxif/if_dmc.h	/^#define	DMC_BACCO	0$/
DMC_BASEI	../vaxif/if_dmc.h	/^#define	DMC_BASEI	3$/
DMC_BMAPPED	../vaxif/if_dmc.c	/^#define DMC_BMAPPED	0x02		\/* base table mapped */
DMC_CCOUNT	../vaxif/if_dmc.h	/^#define	DMC_CCOUNT	0037777		\/* character count ma/
DMC_CNTLI	../vaxif/if_dmc.h	/^#define	DMC_CNTLI	1$/
DMC_CNTLO	../vaxif/if_dmc.h	/^#define	DMC_CNTLO	1$/
DMC_CNTMASK	../vaxif/if_dmc.h	/^#define	DMC_CNTMASK	01777$/
DMC_DATACK	../vaxif/if_dmc.h	/^#define	DMC_DATACK	01$/
DMC_DISCONN	../vaxif/if_dmc.h	/^#define	DMC_DISCONN	0100$/
DMC_ERROR	../vaxif/if_dmc.h	/^#define	DMC_ERROR	01000$/
DMC_FATAL	../vaxif/if_dmc.h	/^#define	DMC_FATAL (DMC_ERROR|DMC_NEXMEM|DMC_START|/
DMC_HDPLX	../vaxif/if_dmc.h	/^#define	DMC_HDPLX	02000		\/* half duplex DDCMP ope/
DMC_IEI	../vaxif/if_dmc.h	/^#define	DMC_IEI		0100		\/* enable input interrupts/
DMC_IEO	../vaxif/if_dmc.h	/^#define	DMC_IEO		0100		\/* enable output interrupt/
DMC_IPTYPE	../vaxif/if_dmc.h	/^#define	DMC_IPTYPE	1$/
DMC_LOSTDATA	../vaxif/if_dmc.h	/^#define	DMC_LOSTDATA	020$/
DMC_MAINT	../vaxif/if_dmc.h	/^#define	DMC_MAINT	00400		\/* enter maintenance mod/
DMC_MAINTREC	../vaxif/if_dmc.h	/^#define	DMC_MAINTREC	010$/
DMC_MCLR	../vaxif/if_dmc.h	/^#define	DMC_MCLR	0100		\/* DMC11 Master Clear *\/$/
DMC_NEXMEM	../vaxif/if_dmc.h	/^#define	DMC_NEXMEM	0400$/
DMC_NOBUFS	../vaxif/if_dmc.h	/^#define	DMC_NOBUFS	04$/
DMC_NTRAILER	../vaxif/if_dmc.h	/^#define	DMC_NTRAILER	16$/
DMC_OUR	../vaxif/if_dmc.h	/^#define	DMC_OUR		4		\/* read block *\/$/
DMC_OUX	../vaxif/if_dmc.h	/^#define	DMC_OUX		0		\/* transmit block *\/$/
DMC_PERR	../vaxif/if_dmc.h	/^#define	DMC_PERR	2$/
DMC_RDYI	../vaxif/if_dmc.h	/^#define	DMC_RDYI	0200		\/* port ready *\/$/
DMC_RDYO	../vaxif/if_dmc.h	/^#define	DMC_RDYO	0200		\/* port available *\/$/
DMC_READ	../vaxif/if_dmc.h	/^#define	DMC_READ	4		\/* read block *\/$/
DMC_RESTART	../vaxif/if_dmc.c	/^#define DMC_RESTART	0x04		\/* software restart in /
DMC_RESUME	../vaxif/if_dmc.h	/^#define	DMC_RESUME	0002000		\/* resume (BASEI only/
DMC_RPDCK	../vaxif/if_dmc.c	/^#define DMC_RPDCK	10$/
DMC_RPDSC	../vaxif/if_dmc.c	/^#define DMC_RPDSC	1$/
DMC_RPNBFS	../vaxif/if_dmc.c	/^#define DMC_RPNBFS	50$/
DMC_RPTMO	../vaxif/if_dmc.c	/^#define DMC_RPTMO	10$/
DMC_RQI	../vaxif/if_dmc.h	/^#define	DMC_RQI		0040		\/* port request bit *\/$/
DMC_RUN	../vaxif/if_dmc.h	/^#define	DMC_RUN		0200		\/* clock running *\/$/
DMC_RUNNING	../vaxif/if_dmc.c	/^#define DMC_RUNNING	0x20		\/* device initialized */
DMC_SEC	../vaxif/if_dmc.h	/^#define	DMC_SEC		04000		\/* half duplex secondary /
DMC_START	../vaxif/if_dmc.h	/^#define	DMC_START	0200$/
DMC_TIMEOUT	../vaxif/if_dmc.h	/^#define	DMC_TIMEOUT	02$/
DMC_TRAILER	../vaxif/if_dmc.h	/^#define	DMC_TRAILER	2$/
DMC_WRITE	../vaxif/if_dmc.h	/^#define	DMC_WRITE	0		\/* transmit block *\/$/
DMC_XMEM	../vaxif/if_dmc.h	/^#define	DMC_XMEM	0140000		\/* xmem bit position */
DMDT	../vaxuba/lpa.c	/^#define DMDT	04		\/* dedicated mode dispatch table/
DMFC_ASYNC	../vaxuba/dmfreg.h	/^#define DMFC_ASYNC	0x8000		\/* 8 Serial ports *\/$/
DMFC_CONFMASK	../vaxuba/dmfreg.h	/^#define DMFC_CONFMASK	0xf000		\/* picks off the co/
DMFC_DR	../vaxuba/dmfreg.h	/^#define	DMFC_DR		0x1000		\/* DR11 parallel interfa/
DMFC_LP	../vaxuba/dmfreg.h	/^#define DMFC_LP		0x2000		\/* LP dma parallel linep/
DMFC_SYNC	../vaxuba/dmfreg.h	/^#define DMFC_SYNC	0x4000		\/* Synchronous serial i/
DMFIR_LCR	../vaxuba/dmxreg.h	/^#define	DMFIR_LCR	010	\/* select lcr indirect regi/
DMFIR_RMSTSC	../vaxuba/dmxreg.h	/^#define	DMFIR_RMSTSC	000	\/* select rmstsc indirec/
DMFIR_TBA	../vaxuba/dmxreg.h	/^#define	DMFIR_TBA	020	\/* select tba indirect regi/
DMFIR_TBUF	../vaxuba/dmxreg.h	/^#define	DMFIR_TBUF	000	\/* select tbuf indirect re/
DMFIR_TCC	../vaxuba/dmxreg.h	/^#define	DMFIR_TCC	030	\/* select tcc indirect regi/
DMFL_BUFSIZ	../vaxuba/dmfreg.h	/^#define DMFL_BUFSIZ	512		\/* max chars per dma *\//
DMFL_CONV	../vaxuba/dmfreg.h	/^#define DMFL_CONV	(1<<12)		\/* connect verify *\/$/
DMFL_DAVRDY	../vaxuba/dmfreg.h	/^#define	DMFL_DAVRDY	(1<<13)		\/* davfu ready *\/$/
DMFL_DEFCOLS	../vaxuba/dmfreg.h	/^#define DMFL_DEFCOLS	132		\/* default # of cols\/l/
DMFL_DEFLINES	../vaxuba/dmfreg.h	/^#define DMFL_DEFLINES	66		\/* default # of lines\//
DMFL_DMAERR	../vaxuba/dmfreg.h	/^#define DMFL_DMAERR	(1<<15)		\/* dma error bit *\//
DMFL_FORMAT	../vaxuba/dmfreg.h	/^#define DMFL_FORMAT	(1<<2)		\/* format control *\//
DMFL_IE	../vaxuba/dmfreg.h	/^#define DMFL_IE		(1<<6)		\/* intr enable *\/$/
DMFL_INDIR	../vaxuba/dmfreg.h	/^#define DMFL_INDIR	(7<<8)		\/* indirect reg *\/$/
DMFL_MAINT	../vaxuba/dmfreg.h	/^#define DMFL_MAINT	(1<<5)		\/* maintenance mode on/
DMFL_OFFLINE	../vaxuba/dmfreg.h	/^#define DMFL_OFFLINE	(1<<14)		\/* printer offline /
DMFL_OPTIONS	../vaxuba/dmfreg.h	/^#define DMFL_OPTIONS	((1 << 8) | (1 << 9) | (1 << /
DMFL_PDONE	../vaxuba/dmfreg.h	/^#define DMFL_PDONE	(1<<7)		\/* print done bit *\/$/
DMFL_PEN	../vaxuba/dmfreg.h	/^#define DMFL_PEN	(1<<0)		\/* print enable *\/$/
DMFL_RESET	../vaxuba/dmfreg.h	/^#define DMFL_RESET	(1<<1)		\/* master reset *\/$/
DMFL_UNIT	../vaxuba/dmf.c	/^#define	DMFL_UNIT(d)	(minor(d) & 0xf)	\/* up to 16/
DMFL_UNUSED	../vaxuba/dmfreg.h	/^#define DMFL_UNUSED	(3<<3)$/
DMFL_UNUSED2	../vaxuba/dmfreg.h	/^#define DMFL_UNUSED2	(1<<11)$/
DMF_AUTOX	../vaxuba/dmxreg.h	/^#define	DMF_AUTOX	0002		\/* auto XON\/XOFF *\/$/
DMF_BRK	../vaxuba/dmxreg.h	/^#define	DMF_BRK		0010		\/* send break bit *\/$/
DMF_CAR	../vaxuba/dmxreg.h	/^#define	DMF_CAR		0x2000		\/* carrier detect *\/$/
DMF_CLR	../vaxuba/dmxreg.h	/^#define	DMF_CLR	0000040		\/* master reset *\/$/
DMF_CTS	../vaxuba/dmxreg.h	/^#define	DMF_CTS		0x1000		\/* clear to send *\/$/
DMF_DO	../vaxuba/dmxreg.h	/^#define	DMF_DO		0040000		\/* data overrun *\/$/
DMF_DSC	../vaxuba/dmxreg.h	/^#define	DMF_DSC		0004000		\/* data set change *\/$/
DMF_DSR	../vaxuba/dmxreg.h	/^#define	DMF_DSR		0x8000		\/* data set ready *\/$/
DMF_DTR	../vaxuba/dmxreg.h	/^#define	DMF_DTR		0x0200		\/* data terminal ready */
DMF_ENA	../vaxuba/dmxreg.h	/^#define	DMF_ENA		(DMF_MIE|DMF_RE|DMF_TE)$/
DMF_FE	../vaxuba/dmxreg.h	/^#define	DMF_FE		0020000		\/* framing error *\/$/
DMF_FLUSH	../vaxuba/dmxreg.h	/^#define	DMF_FLUSH	0020		\/* flush transmit silo */
DMF_IAD	../vaxuba/dmxreg.h	/^#define	DMF_IAD	0000037		\/* indirect address regi/
DMF_IE	../vaxuba/dmxreg.h	/^#define	DMF_IE	(DMF_TIE|DMF_RIE)$/
DMF_LIN	../vaxuba/dmxreg.h	/^#define	DMF_LIN	0003400		\/* transmit line number /
DMF_MIE	../vaxuba/dmxreg.h	/^#define	DMF_MIE		0040		\/* modem interrupt enable /
DMF_NXM	../vaxuba/dmxreg.h	/^#define	DMF_NXM	0030000		\/* non-existent memory (/
DMF_OFF	../vaxuba/dmxreg.h	/^#define	DMF_OFF		0$/
DMF_ON	../vaxuba/dmxreg.h	/^#define	DMF_ON		(DMF_DTR|DMF_RTS|DMF_ENA)$/
DMF_PE	../vaxuba/dmxreg.h	/^#define	DMF_PE		0010000		\/* parity error *\/$/
DMF_PREEMPT	../vaxuba/dmxreg.h	/^#define	DMF_PREEMPT	0x8000		\/* preempt output *\//
DMF_RATE	../vaxuba/dmxreg.h	/^#define	DMF_RATE	0x0400		\/* data signal rate sele/
DMF_RE	../vaxuba/dmxreg.h	/^#define	DMF_RE		0004		\/* receive enable *\/$/
DMF_RI	../vaxuba/dmxreg.h	/^#define	DMF_RI	0000200		\/* receiver interrupt *\//
DMF_RIE	../vaxuba/dmxreg.h	/^#define	DMF_RIE	0000100		\/* receiver interrupt en/
DMF_RNG	../vaxuba/dmxreg.h	/^#define	DMF_RNG		0x4000		\/* ring *\/$/
DMF_RTS	../vaxuba/dmxreg.h	/^#define	DMF_RTS		0x1000		\/* request to send *\/$/
DMF_SILOCNT	../vaxuba/dmxreg.h	/^#define	DMF_SILOCNT	32		\/* size of DMF output sil/
DMF_SR	../vaxuba/dmxreg.h	/^#define	DMF_SR		0x0800		\/* secondary receive *\/$/
DMF_SRTS	../vaxuba/dmxreg.h	/^#define	DMF_SRTS	0x0800		\/* secondary request to /
DMF_TE	../vaxuba/dmxreg.h	/^#define	DMF_TE		0001		\/* transmit enable *\/$/
DMF_TI	../vaxuba/dmxreg.h	/^#define	DMF_TI	0100000		\/* transmit interrupt *\//
DMF_TIE	../vaxuba/dmxreg.h	/^#define	DMF_TIE	0040000		\/* transmit interrupt en/
DMF_TSC	../vaxuba/dmxreg.h	/^#define	DMF_TSC		0x00ff		\/* transmit silo count */
DMF_USRR	../vaxuba/dmxreg.h	/^#define	DMF_USRR	0x0400		\/* user modem signal (pi/
DMF_USRW	../vaxuba/dmxreg.h	/^#define	DMF_USRW	0x0100		\/* user modem signal (pi/
DMGET	../h/ttydev.h	/^#define	DMGET		3$/
DML_CAR	../vaxuba/dhureg.h	/^#define	DML_CAR		0000100		\/* carrier detect *\/$/
DML_CTS	../vaxuba/dhureg.h	/^#define	DML_CTS		0000040		\/* clear to send *\/$/
DML_DSR	../vaxuba/dhureg.h	/^#define	DML_DSR		0000400		\/* data set ready, not /
DML_DTR	../vaxuba/dhureg.h	/^#define	DML_DTR		0000002		\/* data terminal ready /
DML_LE	../vaxuba/dhureg.h	/^#define	DML_LE		0000001		\/* line enable *\/$/
DML_OFF	../vaxuba/dmreg.h	/^#define	DML_OFF		(DML_LE)$/
DML_ON	../vaxuba/dmreg.h	/^#define	DML_ON		(DML_DTR|DML_RTS|DML_LE)$/
DML_RNG	../vaxuba/dhureg.h	/^#define	DML_RNG		0000200		\/* ring *\/$/
DML_RTS	../vaxuba/dhureg.h	/^#define	DML_RTS		0000004		\/* request to send *\/$/
DML_SR	../vaxuba/dhureg.h	/^#define	DML_SR		0000020		\/* secondary receive *\//
DML_ST	../vaxuba/dhureg.h	/^#define	DML_ST		0000010		\/* secondary transmit */
DML_USR	../vaxuba/dmxreg.h	/^#define	DML_USR		0001000		\/* usr modem sig, not a/
DMMAX	../vax/vmparam.h	/^#define	DMMAX	4096			\/* largest potential swap al/
DMMIN	../vax/vmparam.h	/^#define	DMMIN	32			\/* smallest swap allocation */
DMPCNT	../vaxuba/npreg.h	/^#define DMPCNT	5$/
DMSET	../h/ttydev.h	/^#define	DMSET		0$/
DMTEXT	../vax/vmparam.h	/^#define	DMTEXT	1024			\/* swap allocation for text/
DMX_ACTIVE	../vaxuba/dmx.h	/^#define	DMX_ACTIVE	0x01		\/* has been opened *\/$/
DMX_TIMEOUT	../vaxuba/dmx.c	/^#define DMX_TIMEOUT	10$/
DMZ	../vaxuba/dmzreg.h	/^#define	DMZ(a)		(a\/24)$/
DMZ_INTERFACE	../vaxuba/dmzreg.h	/^#define	DMZ_INTERFACE	000$/
DMZ_NOC_MASK	../vaxuba/dmzreg.h	/^#define	DMZ_NOC_MASK	03$/
DM_BUSY	../vaxuba/dmreg.h	/^#define	DM_BUSY		0000020		\/* scan busy *\/$/
DM_CF	../vaxuba/dmreg.h	/^#define	DM_CF		0040000		\/* carrier flag *\/$/
DM_CM	../vaxuba/dmreg.h	/^#define	DM_CM		0002000		\/* clear multiplexor *\/$/
DM_CS	../vaxuba/dmreg.h	/^#define	DM_CS		0004000		\/* clear scan *\/$/
DM_CTS	../vaxuba/dmreg.h	/^#define	DM_CTS		0020000		\/* clear to send *\/$/
DM_DONE	../vaxuba/dmreg.h	/^#define	DM_DONE		0000200		\/* scanner is done *\/$/
DM_IE	../vaxuba/dmreg.h	/^#define	DM_IE		0000100		\/* interrupt enable *\/$/
DM_MM	../vaxuba/dmreg.h	/^#define	DM_MM		0001000		\/* maintenance mode *\/$/
DM_RF	../vaxuba/dmreg.h	/^#define	DM_RF		0100000		\/* ring flag *\/$/
DM_SE	../vaxuba/dmreg.h	/^#define	DM_SE		0000040		\/* scan enable *\/$/
DM_SRF	../vaxuba/dmreg.h	/^#define	DM_SRF		0010000		\/* secondary receive fla/
DM_STP	../vaxuba/dmreg.h	/^#define	DM_STP		0000400		\/* step *\/$/
DNPRI	../vaxuba/dn.c	/^#define	DNPRI	(PZERO+5)$/
DNREG	../vaxuba/dn.c	/^#define DNREG(dev)	((dev)&03)$/
DNUM	../vax/tu.c	/^#define DNUM    01		\/* mask for drive number (sho/
DNUNIT	../vaxuba/dn.c	/^#define DNUNIT(dev)	(minor(dev)>>2)$/
DONE	../vaxuba/dn.c	/^#define	DONE	0x080		\/* operation complete *\/$/
DOSWAP	../vax/autoconf.c	/^#define	DOSWAP			\/* Change swdevt, argdev, and du/
DOUBLE	../sys/ufs_inode.c	/^#define	DOUBLE	1	\/* index of double indirect bloc/
DPR	../vaxuba/dn.c	/^#define	DPR	0x002		\/* digit present *\/$/
DQHASH	../sys/quota_kern.c	/^#define	DQHASH(uid, dev) \\$/
DQ_BLKS	../h/quota.h	/^#define	DQ_BLKS		0x10		\/* has been warned about b/
DQ_FAKE	../h/quota.h	/^#define	DQ_FAKE		0x08		\/* no limits here, just us/
DQ_INODS	../h/quota.h	/^#define	DQ_INODS	0x20		\/* has been warned about i/
DQ_LOCK	../h/quota.h	/^#define	DQ_LOCK		0x01		\/* this quota locked (no M/
DQ_MOD	../h/quota.h	/^#define	DQ_MOD		0x04		\/* this quota modified sinc/
DQ_WANT	../h/quota.h	/^#define	DQ_WANT		0x02		\/* wakeup on unlock *\/$/
DQptr	../sys/quota_kern.c	/^typedef	struct dquot *DQptr;$/
DRES	../h/vmmeter.h	/^#define	DRES	20$/
DRSENSE	../vaxuba/tmreg.h	/^#define	DRSENSE		030000		\/* select drive sense */
DRVNAME	../vaxuba/tmscp.c	/^#define DRVNAME "tms"$/
DSF_LOCK	../vaxif/if_de.c	/^#define	DSF_LOCK	1		\/* lock out destart *\/$/
DSF_RUNNING	../vaxif/if_de.c	/^#define	DSF_RUNNING	2		\/* board is enabled *\/$/
DSF_SETADDR	../vaxif/if_de.c	/^#define	DSF_SETADDR	4		\/* physical address is cha/
DSS	../vaxuba/dn.c	/^#define	DSS	0x020		\/* data set status *\/$/
DST_AUST	../h/time.h	/^#define	DST_AUST	2	\/* Australian style dst *\/$/
DST_CAN	../h/time.h	/^#define	DST_CAN		6	\/* Canada *\/$/
DST_EET	../h/time.h	/^#define	DST_EET		5	\/* Eastern European dst *\/$/
DST_MET	../h/time.h	/^#define	DST_MET		4	\/* Middle European dst *\/$/
DST_NONE	../h/time.h	/^#define	DST_NONE	0	\/* not on dst *\/$/
DST_USA	../h/time.h	/^#define	DST_USA		1	\/* USA style dst *\/$/
DST_WET	../h/time.h	/^#define	DST_WET		3	\/* Western European dst *\/$/
DTS	../vaxuba/lpa.c	/^#define DTS	2		\/* mode *\/$/
DTYPE_DEC	../h/disklabel.h	/^#define	DTYPE_DEC		3		\/* other DEC (rk, rl) *\/$/
DTYPE_ESDI	../h/disklabel.h	/^#define	DTYPE_ESDI		5		\/* ESDI interface *\/$/
DTYPE_FLOPPY	../h/disklabel.h	/^#define	DTYPE_FLOPPY		10		\/* floppy *\/$/
DTYPE_INODE	../h/file.h	/^#define	DTYPE_INODE	1	\/* file *\/$/
DTYPE_MSCP	../h/disklabel.h	/^#define	DTYPE_MSCP		2		\/* MSCP *\/$/
DTYPE_SCSI	../h/disklabel.h	/^#define	DTYPE_SCSI		4		\/* SCSI *\/$/
DTYPE_SMD	../h/disklabel.h	/^#define	DTYPE_SMD		1		\/* SMD, XSMD; VAX hp\/up */
DTYPE_SOCKET	../h/file.h	/^#define	DTYPE_SOCKET	2	\/* communications endpoint/
DTYPE_ST506	../h/disklabel.h	/^#define	DTYPE_ST506		6		\/* ST506 etc. *\/$/
DUMPREQ	../vaxuba/npreg.h	/^#define DUMPREQ		0x04		\/* Dump request *\/$/
DW730	../vaxuba/ubareg.h	/^#define	DW730	3		\/* has adaptor regs, no sr: 750,/
DW750	../vaxuba/ubareg.h	/^#define	DW750	2		\/* has adaptor regs, no sr: 750,/
DW780	../vaxuba/ubareg.h	/^#define	DW780	1		\/* has adaptor regs, sr: 780\/78/
DWBUA	../vaxuba/ubareg.h	/^#define	DWBUA	5		\/* BI UNIBUS adaptor: 8200\/8500/
DZ_32	../vaxuba/dzreg.h	/^#define	DZ_32	000001		\/* DZ32 mode *\/$/
DZ_ACK	../vaxuba/dzreg.h	/^#define DZ_ACK	0100000		\/* ACK bit in dzlcs *\/$/
DZ_BRK	../vaxuba/dzreg.h	/^#define	DZ_BRK	0002000		\/* Break *\/$/
DZ_CD	../vaxuba/dzreg.h	/^#define DZ_CD	0000040		\/* Carrier Detect *\/$/
DZ_CLR	../vaxuba/dzreg.h	/^#define	DZ_CLR	000020		\/* Reset dz *\/$/
DZ_CTS	../vaxuba/dzreg.h	/^#define	DZ_CTS	0000020		\/* Clear To Send *\/$/
DZ_DO	../vaxuba/dzreg.h	/^#define	DZ_DO	040000$/
DZ_DSR	../vaxuba/dzreg.h	/^#define	DZ_DSR	0000200		\/* Data Set Ready *\/$/
DZ_DTR	../vaxuba/dzreg.h	/^#define DZ_DTR	0001000		\/* Data Terminal Ready */
DZ_FE	../vaxuba/dzreg.h	/^#define	DZ_FE	020000$/
DZ_IEN	../vaxuba/dzreg.h	/^#define	DZ_IEN	(DZ_32|DZ_MIE|DZ_MSE|DZ_RIE|DZ_TIE)/
DZ_LE	../vaxuba/dzreg.h	/^#define	DZ_LE	0000400		\/* Line Enable *\/$/
DZ_MIE	../vaxuba/dzreg.h	/^#define	DZ_MIE	000002		\/* Modem Interrupt Enable /
DZ_MSC	../vaxuba/dzreg.h	/^#define DZ_MSC	004000		\/* Modem Status Change *\//
DZ_MSE	../vaxuba/dzreg.h	/^#define	DZ_MSE	000040		\/* Master Scan Enable *\/$/
DZ_OFF	../vaxuba/dzreg.h	/^#define	DZ_OFF	0$/
DZ_ON	../vaxuba/dzreg.h	/^#define	DZ_ON	DZ_DTR$/
DZ_PE	../vaxuba/dzreg.h	/^#define	DZ_PE	010000$/
DZ_RI	../vaxuba/dzreg.h	/^#define	DZ_RI	0000100		\/* Ring Indicate *\/$/
DZ_RIE	../vaxuba/dzreg.h	/^#define	DZ_RIE	000100		\/* Receiver Interrupt Enab/
DZ_RTS	../vaxuba/dzreg.h	/^#define DZ_RTS	0010000		\/* Request To Send *\/$/
DZ_SAE	../vaxuba/dzreg.h	/^#define	DZ_SAE	010000		\/* Silo Alarm Enable *\/$/
DZ_SR	../vaxuba/dzreg.h	/^#define	DZ_SR	0000010		\/* Secondary Receive *\/$/
DZ_ST	../vaxuba/dzreg.h	/^#define	DZ_ST	0004000		\/* Secondary Transmit *\/$/
DZ_TIE	../vaxuba/dzreg.h	/^#define	DZ_TIE	040000		\/* Transmit Interrupt Enab/
D_BADSECT	../h/disklabel.h	/^#define		D_BADSECT	0x04		\/* supports bad sector f/
D_CHAIN	../h/disklabel.h	/^#define		D_CHAIN		0x10		\/* can do back-back trans/
D_ECC	../h/disklabel.h	/^#define		D_ECC		0x02		\/* supports ECC *\/$/
D_RAMDISK	../h/disklabel.h	/^#define		D_RAMDISK	0x08		\/* disk emulator *\/$/
D_REMOVABLE	../h/disklabel.h	/^#define		D_REMOVABLE	0x01		\/* removable media *\//
D_SSE	../h/disklabel.h	/^#define		D_SSE		0x1		\/* supports skip sectoring */
E2BIG	../h/errno.h	/^#define	E2BIG		7		\/* Arg list too long *\/$/
EA	../vaxuba/lpa.c	/^#define EA	0004000		\/* enable arbitration *\/$/
EACCES	../h/errno.h	/^#define	EACCES		13		\/* Permission denied *\/$/
EADDRINUSE	../h/errno.h	/^#define	EADDRINUSE	48		\/* Address already in use /
EADDRNOTAVAIL	../h/errno.h	/^#define	EADDRNOTAVAIL	49		\/* Can't assign request/
EAFNOSUPPORT	../h/errno.h	/^#define	EAFNOSUPPORT	47		\/* Address family not su/
EAGAIN	../h/errno.h	/^#define	EAGAIN		11		\/* No more processes *\/$/
EALREADY	../h/errno.h	/^#define	EALREADY	37		\/* Operation already in prog/
EBADF	../h/errno.h	/^#define	EBADF		9		\/* Bad file number *\/$/
EBOX_ERR	../vax/ka860.c	/^#define	EBOX_ERR	0x1e00		\/* Ebox error *\/$/
EBUSY	../h/errno.h	/^#define	EBUSY		16		\/* Mount device busy *\/$/
ECBUFSIZE	../vaxif/if_ec.c	/^#define ECBUFSIZE	32		\/* on-board memory, cluster/
ECC	../h/dkbad.h	/^#define	ECC	0$/
ECHILD	../h/errno.h	/^#define	ECHILD		10		\/* No children *\/$/
ECHO	../h/ioctl.h	/^#define		ECHO		0x00000008	\/* echo input *\/$/
ECODE	../vaxuba/lpa.c	/^#define ECODE	0077400		\/* error status + error su/
ECONNABORTED	../h/errno.h	/^#define	ECONNABORTED	53		\/* Software caused conne/
ECONNREFUSED	../h/errno.h	/^#define	ECONNREFUSED	61		\/* Connection refused */
ECONNRESET	../h/errno.h	/^#define	ECONNRESET	54		\/* Connection reset by pee/
ECRDOFF	../vaxif/if_ecreg.h	/^#define	ECRDOFF		528		\/* Packet offset in read bu/
ECRHBF	../vaxif/if_ecreg.h	/^#define	ECRHBF		15		\/* Last buffer for receive */
ECRLBF	../vaxif/if_ecreg.h	/^#define	ECRLBF		1		\/* First buffer for receive */
ECTBF	../vaxif/if_ecreg.h	/^#define	ECTBF		0		\/* Buffer for transmit *\/$/
EC_ADATA	../vaxif/if_ecreg.h	/^#define	EC_ADATA	0x0f00		\/* address\/filtering */
EC_AROM	../vaxif/if_ecreg.h	/^#define	EC_AROM		0x2000		\/* 1: Use address ROM, 0/
EC_ASTEP	../vaxif/if_ecreg.h	/^#define	EC_ASTEP	0x4000		\/* increment address cou/
EC_AWCLK	../vaxif/if_ecreg.h	/^#define	EC_AWCLK	0x1000		\/* address write clock b/
EC_CLEAR	../vaxif/if_ecreg.h	/^#define	EC_CLEAR	(EC_JINTEN|EC_XINTEN|EC_JCLR)$/
EC_JAM	../vaxif/if_ecreg.h	/^#define	EC_JAM		0x8000		\/* collision dectected */
EC_JCLR	../vaxif/if_ecreg.h	/^#define	EC_JCLR		0x2000		\/* clear collision detec/
EC_JINTEN	../vaxif/if_ecreg.h	/^#define	EC_JINTEN	0x4000		\/* collision interrupt /
EC_MDISAB	../vaxif/if_ecreg.h	/^#define	EC_MDISAB	0x0080		\/* memory disable *\/$/
EC_PE	../vaxif/if_ecreg.h	/^#define	EC_PE		0x2000		\/* Parity error *\/$/
EC_PIE	../vaxif/if_ecreg.h	/^#define	EC_PIE		0x1000		\/* Parity interrupt enabl/
EC_RBITS	../vaxif/if_ecreg.h	/^#define	EC_RBITS	"\\10\\16PE\\15PIE\\10RDONE\\7RIN/
EC_RBN	../vaxif/if_ecreg.h	/^#define	EC_RBN		0x000f		\/* buffer number *\/$/
EC_RCLR	../vaxif/if_ecreg.h	/^#define	EC_RCLR		0x0020		\/* clear RDONE bit *\/$/
EC_RDONE	../vaxif/if_ecreg.h	/^#define	EC_RDONE	0x0080		\/* receive done *\/$/
EC_READ	../vaxif/if_ecreg.h	/^#define	EC_READ		(0x600|EC_RINTEN|EC_RWBN)$/
EC_RINTEN	../vaxif/if_ecreg.h	/^#define	EC_RINTEN	0x0040		\/* receive interrupt en/
EC_RWBN	../vaxif/if_ecreg.h	/^#define	EC_RWBN		0x0010		\/* submit buffer for rec/
EC_SPIE	../vaxif/if_ecreg.h	/^#define	EC_SPIE		0x8000		\/* set parity interrupt /
EC_UECLR	../vaxif/if_ecreg.h	/^#define	EC_UECLR	0x0100		\/* reset controller *\/$/
EC_WRITE	../vaxif/if_ecreg.h	/^#define	EC_WRITE	(EC_JINTEN|EC_XINTEN|EC_XWBN)$/
EC_XBITS	../vaxif/if_ecreg.h	/^#define	EC_XBITS	"\\10\\20JAM\\17JINTEN\\10XDONE\\/
EC_XBN	../vaxif/if_ecreg.h	/^#define	EC_XBN		0x000f		\/* buffer number *\/$/
EC_XCLR	../vaxif/if_ecreg.h	/^#define	EC_XCLR		0x0020		\/* clear XDONE bit *\/$/
EC_XDONE	../vaxif/if_ecreg.h	/^#define	EC_XDONE	0x0080		\/* transmit done *\/$/
EC_XINTEN	../vaxif/if_ecreg.h	/^#define	EC_XINTEN	0x0040		\/* transmit interrupt e/
EC_XWBN	../vaxif/if_ecreg.h	/^#define	EC_XWBN		0x0010		\/* submit buffer for tra/
EDEADLK	../h/errno.h	/^#define	EDEADLK		EWOULDBLOCK	\/* ditto *\/$/
EDESTADDRREQ	../h/errno.h	/^#define	EDESTADDRREQ	39		\/* Destination address r/
EDOM	../h/errno.h	/^#define	EDOM		33		\/* Argument too large *\/$/
EDP_PE	../vax/ka860.c	/^#define EDP_PE		0x200$/
EDQUOT	../h/errno.h	/^#define	EDQUOT		69		\/* Disc quota exceeded *\/$/
EEXIST	../h/errno.h	/^#define	EEXIST		17		\/* File exists *\/$/
EFAULT	../h/errno.h	/^#define	EFAULT		14		\/* Bad address *\/$/
EFBIG	../h/errno.h	/^#define	EFBIG		27		\/* File too large *\/$/
EHOSTDOWN	../h/errno.h	/^#define	EHOSTDOWN	64		\/* Host is down *\/$/
EHOSTUNREACH	../h/errno.h	/^#define	EHOSTUNREACH	65		\/* No route to host *\/$/
EHSR	../vax/mtpr.h	/^#define EHSR	0x4a		\/* Error handling status regis/
EINPROGRESS	../h/errno.h	/^#define	EINPROGRESS	36		\/* Operation now in progr/
EINTR	../h/errno.h	/^#define	EINTR		4		\/* Interrupted system call *\/$/
EINVAL	../h/errno.h	/^#define	EINVAL		22		\/* Invalid argument *\/$/
EIO	../h/errno.h	/^#define	EIO		5		\/* I\/O error *\/$/
EISCONN	../h/errno.h	/^#define	EISCONN		56		\/* Socket is already connect/
EISDIR	../h/errno.h	/^#define	EISDIR		21		\/* Is a directory *\/$/
ELOOP	../h/errno.h	/^#define	ELOOP		62		\/* Too many levels of symbolic/
EMFILE	../h/errno.h	/^#define	EMFILE		24		\/* Too many open files *\/$/
EMLINK	../h/errno.h	/^#define	EMLINK		31		\/* Too many links *\/$/
EMSGSIZE	../h/errno.h	/^#define	EMSGSIZE	40		\/* Message too long *\/$/
ENABLE_RCV	../vaxif/if_exreg.h	/^#define	ENABLE_RCV	4	\/* enable reception on desig/
ENACTR	../vaxuba/lpa.c	/^#define ENACTR	1		\/* enable counter *\/$/
ENAMETOOLONG	../h/errno.h	/^#define	ENAMETOOLONG	63		\/* File name too long */
ENDOPSENT	../vaxif/if_hy.h	/^#define	ENDOPSENT	3	\/* end operation cmd sent *\//
ENETDOWN	../h/errno.h	/^#define	ENETDOWN	50		\/* Network is down *\/$/
ENETRESET	../h/errno.h	/^#define	ENETRESET	52		\/* Network dropped connecti/
ENETUNREACH	../h/errno.h	/^#define	ENETUNREACH	51		\/* Network is unreachable/
ENFILE	../h/errno.h	/^#define	ENFILE		23		\/* File table overflow *\/$/
ENF_SWABIPS	../vaxif/if_en.c	/^#define	ENF_SWABIPS	0x1000$/
ENMRU	../vaxif/if_en.c	/^#define	ENMRU	(1024+512+16)		\/* 16 is enough to r/
ENMTU	../vaxif/if_en.c	/^#define	ENMTU	(1024+512)$/
ENOBUFS	../h/errno.h	/^#define	ENOBUFS		55		\/* No buffer space available/
ENODEV	../h/errno.h	/^#define	ENODEV		19		\/* No such device *\/$/
ENOENT	../h/errno.h	/^#define	ENOENT		2		\/* No such file or directory */
ENOEXEC	../h/errno.h	/^#define	ENOEXEC		8		\/* Exec format error *\/$/
ENOMEM	../h/errno.h	/^#define	ENOMEM		12		\/* Not enough core *\/$/
ENOPROTOOPT	../h/errno.h	/^#define	ENOPROTOOPT	42		\/* Protocol not available/
ENOSPC	../h/errno.h	/^#define	ENOSPC		28		\/* No space left on device */
ENOTBLK	../h/errno.h	/^#define	ENOTBLK		15		\/* Block device required *\//
ENOTCONN	../h/errno.h	/^#define	ENOTCONN	57		\/* Socket is not connected */
ENOTDIR	../h/errno.h	/^#define	ENOTDIR		20		\/* Not a directory*\/$/
ENOTEMPTY	../h/errno.h	/^#define	ENOTEMPTY	66		\/* Directory not empty *\/$/
ENOTSOCK	../h/errno.h	/^#define	ENOTSOCK	38		\/* Socket operation on non-s/
ENOTTY	../h/errno.h	/^#define	ENOTTY		25		\/* Not a typewriter *\/$/
ENTRYMASK	../vax/kdbparam.h	/^#define	ENTRYMASK	1			\/* check for entry masks */
ENTYPE_IP	../vaxif/if_en.h	/^#define	ENTYPE_IP	0x0201		\/* IP protocol *\/$/
ENTYPE_NTRAILER	../vaxif/if_en.h	/^#define	ENTYPE_NTRAILER	16$/
ENTYPE_PUP	../vaxif/if_en.h	/^#define	ENTYPE_PUP	0x0200		\/* PUP protocol *\/$/
ENTYPE_TRAIL	../vaxif/if_en.h	/^#define	ENTYPE_TRAIL	0x1000		\/* Trailer type *\/$/
ENUNIT	../vaxif/if_en.c	/^#define	ENUNIT(x)	minor(x)$/
ENXIO	../h/errno.h	/^#define	ENXIO		6		\/* No such device or address */
EN_BITS	../vaxif/if_enreg.h	/^#define	EN_BITS	"\\10\\20ERR\\10OPDONE\\7IEN\\2PRO/
EN_BROADCAST	../vaxif/if_en.h	/^#define EN_BROADCAST	0		\/* Hardware broadcast add/
EN_GO	../vaxif/if_enreg.h	/^#define EN_GO		0x0001		\/* start op bit *\/$/
EN_IEN	../vaxif/if_enreg.h	/^#define EN_IEN		0x0040		\/* enable interrupt when /
EN_IERROR	../vaxif/if_enreg.h	/^#define EN_IERROR	0x8000		\/* CRC error, buf ovflo/
EN_OERROR	../vaxif/if_enreg.h	/^#define	EN_OERROR	0x8000		\/* collision or output /
EN_OPDONE	../vaxif/if_enreg.h	/^#define EN_OPDONE	0x0080		\/* previous operation c/
EN_PROMISCUOUS	../vaxif/if_enreg.h	/^#define	EN_PROMISCUOUS	0x0002		\/* promiscuous, in/
EOPNOTSUPP	../h/errno.h	/^#define	EOPNOTSUPP	45		\/* Operation not supported/
EPAR	../vaxuba/dmxreg.h	/^#define	EPAR		0100	\/* even parity *\/$/
EPERM	../h/errno.h	/^#define	EPERM		1		\/* Not owner *\/$/
EPFNOSUPPORT	../h/errno.h	/^#define	EPFNOSUPPORT	46		\/* Protocol family not s/
EPIPE	../h/errno.h	/^#define	EPIPE		32		\/* Broken pipe *\/$/
EPROCLIM	../h/errno.h	/^#define	EPROCLIM	67		\/* Too many processes *\/$/
EPROTONOSUPPORT	../h/errno.h	/^#define	EPROTONOSUPPORT	43		\/* Protocol not suppo/
EPROTOTYPE	../h/errno.h	/^#define	EPROTOTYPE	41		\/* Protocol wrong type for/
ERANGE	../h/errno.h	/^#define	ERANGE		34		\/* Result too large *\/$/
EROFS	../h/errno.h	/^#define	EROFS		30		\/* Read-only file system *\/$/
ERROR	../vaxuba/dmf.c	/^#define ERROR 4		\/* error while printing, driver$/
ESC	../vax/kdb_machdep.c	/^#define	ESC	'\\033'$/
ESCD	../vax/kdb_opset.c	/^#define	ESCD	0xfd$/
ESCF	../vax/kdb_opset.c	/^#define	ESCF	0xff$/
ESCODE	../vaxuba/lpa.c	/^#define ESCODE	0017400		\/* error sub code *\/$/
ESHUTDOWN	../h/errno.h	/^#define	ESHUTDOWN	58		\/* Can't send after socket /
ESOCKTNOSUPPORT	../h/errno.h	/^#define	ESOCKTNOSUPPORT	44		\/* Socket type not su/
ESP	../vax/mtpr.h	/^#define	ESP	0x1		\/* exec stack pointer *\/$/
ESPA	../vax/mtpr.h	/^#define ESPA	0x4e		\/* EBOX scratchpad address *\//
ESPD	../vax/mtpr.h	/^#define ESPD	0x4f		\/* EBOX sratchpad data *\/$/
ESPIPE	../h/errno.h	/^#define	ESPIPE		29		\/* Illegal seek *\/$/
ESRCH	../h/errno.h	/^#define	ESRCH		3		\/* No such process *\/$/
ESTAT	../vaxuba/lpa.c	/^#define ESTAT	0060000		\/* error status *\/$/
ETHERMIN	../netinet/if_ether.h	/^#define	ETHERMIN	(60-14)$/
ETHERMTU	../netinet/if_ether.h	/^#define	ETHERMTU	1500$/
ETHERTYPE_ARP	../netinet/if_ether.h	/^#define ETHERTYPE_ARP	0x0806		\/* Addr. resolution/
ETHERTYPE_IP	../netinet/if_ether.h	/^#define	ETHERTYPE_IP	0x0800		\/* IP protocol *\/$/
ETHERTYPE_IPTRAILERS	../netinet/if_ether.c	/^#define ETHERTYPE_IPTRAILERS ETHERTYPE_TRAIL$/
ETHERTYPE_NS	../netns/ns_if.h	/^#define	ETHERTYPE_NS	0x0600$/
ETHERTYPE_NTRAILER	../netinet/if_ether.h	/^#define	ETHERTYPE_NTRAILER	16$/
ETHERTYPE_PUP	../netinet/if_ether.h	/^#define	ETHERTYPE_PUP	0x0200		\/* PUP protocol *\//
ETHERTYPE_TRAIL	../netinet/if_ether.h	/^#define	ETHERTYPE_TRAIL		0x1000		\/* Trailer packe/
ETIMEDOUT	../h/errno.h	/^#define	ETIMEDOUT	60		\/* Connection timed out *\//
ETOOMANYREFS	../h/errno.h	/^#define	ETOOMANYREFS	59		\/* Too many references: /
ETXTBSY	../h/errno.h	/^#define	ETXTBSY		26		\/* Text file busy *\/$/
EUSERS	../h/errno.h	/^#define	EUSERS		68		\/* Too many users *\/$/
EVENP	../h/ioctl.h	/^#define		EVENP		0x00000080	\/* get\/send even pari/
EVROUND	../vaxuba/vs.c	/^#define EVROUND(x)	((x) & (VSMAXEVQ - 1))$/
EWOULDBLOCK	../h/errno.h	/^#define	EWOULDBLOCK	35		\/* Operation would block /
EXDEV	../h/errno.h	/^#define	EXDEV		18		\/* Cross-device link *\/$/
EXMAXRBUF	../vaxif/if_exreg.h	/^#define	EXMAXRBUF 1520	\/* per EXOS 101 manual 5.3/
EXMMR_DIO	../vaxuba/psreg.h	/^#define EXMMR_DIO	0177404$/
EXMMR_DMA	../vaxuba/psreg.h	/^#define EXMMR_DMA	0177400$/
EXMMR_MAPIN	../vaxuba/psreg.h	/^#define EXMMR_MAPIN	0177407$/
EXMMR_MAPOUT	../vaxuba/psreg.h	/^#define EXMMR_MAPOUT	0177406$/
EXMMR_RC	../vaxuba/psreg.h	/^#define EXMMR_RC	0177405$/
EXMSR	../vaxuba/psreg.h	/^#define EXMSR		0177410$/
EXT	../vaxuba/psreg.h	/^#define EXT		020$/
EXTA	../h/ttydev.h	/^#define EXTA	14$/
EXTB	../h/ttydev.h	/^#define EXTB	15$/
EXTERNAL_SYNC	../vaxuba/ps.c	/^#define EXTERNAL_SYNC$/
EXTSEL1	../vaxuba/psreg.h	/^#define EXTSEL1		02$/
EXTSEL2	../vaxuba/psreg.h	/^#define EXTSEL2		04$/
EXT_SYNC	../vaxuba/ikreg.h	/^#define		EXT_SYNC		0100$/
EXWATCHINTVL	../vaxif/if_ex.c	/^#define	EXWATCHINTVL 10		\/* call exwatch() every /
EX_NTRUPT	../vaxif/if_exreg.h	/^#define	EX_NTRUPT	0$/
EX_RESET	../vaxif/if_exreg.h	/^#define	EX_RESET	0	\/* value doesn't really matter/
EX_RUNNING	../vaxif/if_ex.c	/^#define	EX_RUNNING	(1<<2)		\/* board is running */
EX_SETADDR	../vaxif/if_ex.c	/^#define EX_SETADDR	(1<<3)		\/* physaddr has been c/
EX_STATPENDING	../vaxif/if_ex.c	/^#define	EX_STATPENDING	(1<<1)		\/* stats rqst pend/
EX_TESTOK	../vaxif/if_exreg.h	/^#define	EX_TESTOK	1	\/* set when self-diagnostics /
EX_UNREADY	../vaxif/if_exreg.h	/^#define	EX_UNREADY	(1<<3)	\/* set until EXOS ready/
EX_XPENDING	../vaxif/if_ex.c	/^#define	EX_XPENDING	1		\/* xmit rqst pending on EX/
FAC_DDNSTD	../vaxif/if_ddnvar.h	/^#define FAC_DDNSTD	0x01		\/*   DDN standard mode		/
FALSE	../vaxuba/npreg.h	/^#define FALSE		0$/
FAPPEND	../h/file.h	/^#define	FAPPEND		00010		\/* append on each write */
FASTTIMER	../vaxuba/dh.c	/^#define	FASTTIMER	(hz\/30)		\/* scan rate with sil/
FASYNC	../h/file.h	/^#define	FASYNC		00100		\/* signal pgrp when data r/
FBC0	../vaxuba/ikreg.h	/^#define FBC0		060000000$/
FBC1	../vaxuba/ikreg.h	/^#define FBC1		062000000$/
FBOX_SERV	../vax/ka860.c	/^#define	FBOX_SERV	0x10000000	\/* Fbox service erro/
FCNTLCANT	../h/file.h	/^#define	FCNTLCANT	(FREAD|FWRITE|FMARK|FDEFER|FSHLO/
FCREAT	../h/file.h	/^#define	FCREAT		01000		\/* create if nonexistant */
FC_DUMPMEM	../vaxif/if_dereg.h	/^#define	FC_DUMPMEM	0x10		\/* Dump internal memory /
FC_LOADMEM	../vaxif/if_dereg.h	/^#define	FC_LOADMEM	0x11		\/* Load internal memory /
FC_LSUADDR	../vaxif/if_dereg.h	/^#define	FC_LSUADDR	0x01		\/* Load and start microa/
FC_NOOP	../vaxif/if_dereg.h	/^#define	FC_NOOP		0x00		\/* NO-OP *\/$/
FC_RCCNTS	../vaxif/if_dereg.h	/^#define	FC_RCCNTS	0x0b		\/* Read and clear counter/
FC_RCSTATUS	../vaxif/if_dereg.h	/^#define	FC_RCSTATUS	0x0f		\/* Read and clear port /
FC_RDCNTS	../vaxif/if_dereg.h	/^#define	FC_RDCNTS	0x0a		\/* Read counters *\/$/
FC_RDDEFAULT	../vaxif/if_dereg.h	/^#define	FC_RDDEFAULT	0x02		\/* Read default physic/
FC_RDMODE	../vaxif/if_dereg.h	/^#define	FC_RDMODE	0x0c		\/* Read mode *\/$/
FC_RDMULTI	../vaxif/if_dereg.h	/^#define	FC_RDMULTI	0x06		\/* Read multicast addres/
FC_RDPHYAD	../vaxif/if_dereg.h	/^#define	FC_RDPHYAD	0x04		\/* Read physical address/
FC_RDRING	../vaxif/if_dereg.h	/^#define	FC_RDRING	0x08		\/* Read ring format *\/$/
FC_RDSERAD	../vaxif/if_dereg.h	/^#define	FC_RDSERAD	0x14		\/* Read load server addr/
FC_RDSTATUS	../vaxif/if_dereg.h	/^#define	FC_RDSTATUS	0x0e		\/* Read port status *\//
FC_RDSYSID	../vaxif/if_dereg.h	/^#define	FC_RDSYSID	0x12		\/* Read system ID parame/
FC_WTMODE	../vaxif/if_dereg.h	/^#define	FC_WTMODE	0x0d		\/* Write mode *\/$/
FC_WTMULTI	../vaxif/if_dereg.h	/^#define	FC_WTMULTI	0x07		\/* Read multicast addres/
FC_WTPHYAD	../vaxif/if_dereg.h	/^#define	FC_WTPHYAD	0x05		\/* Write physical addres/
FC_WTRING	../vaxif/if_dereg.h	/^#define	FC_WTRING	0x09		\/* Write ring format *\/$/
FC_WTSERAD	../vaxif/if_dereg.h	/^#define	FC_WTSERAD	0x15		\/* Write load server add/
FC_WTSYSID	../vaxif/if_dereg.h	/^#define	FC_WTSYSID	0x13		\/* Write system ID param/
FDEFER	../h/file.h	/^#define	FDEFER		00040		\/* defer for next gc pass /
FD_CLR	../h/types.h	/^#define	FD_CLR(n, p)	((p)->fds_bits[(n)\/NFDBITS] /
FD_ISSET	../h/types.h	/^#define	FD_ISSET(n, p)	((p)->fds_bits[(n)\/NFDBITS/
FD_SET	../h/types.h	/^#define	FD_SET(n, p)	((p)->fds_bits[(n)\/NFDBITS] /
FD_SETSIZE	../h/types.h	/^#define	FD_SETSIZE	256$/
FD_ZERO	../h/types.h	/^#define FD_ZERO(p)	bzero((char *)(p), sizeof(*(p))/
FEXCL	../h/file.h	/^#define	FEXCL		04000		\/* error if already created/
FEXLOCK	../h/file.h	/^#define	FEXLOCK		00400		\/* exclusive lock present/
FF0	../h/ioctl.h	/^#define			FF0	0x00000000$/
FF1	../h/ioctl.h	/^#define			FF1	0x00004000	\/* tty 37 *\/$/
FIFOEMPTY	../vaxuba/psreg.h	/^#define FIFOEMPTY	020000$/
FIFOFULL	../vaxuba/psreg.h	/^#define FIFOFULL	040000$/
FIOASYNC	../h/ioctl.h	/^#define	FIOASYNC	_IOW('f', 125, int)	\/* set\/clea/
FIOCLEX	../h/ioctl.h	/^#define	FIOCLEX		_IO('f', 1)		\/* set close on exe/
FIOGETOWN	../h/ioctl.h	/^#define	FIOGETOWN	_IOR('f', 123, int)	\/* get owne/
FIONBIO	../h/ioctl.h	/^#define	FIONBIO		_IOW('f', 126, int)	\/* set\/clea/
FIONCLEX	../h/ioctl.h	/^#define	FIONCLEX	_IO('f', 2)		\/* remove close on /
FIONREAD	../h/ioctl.h	/^#define	FIONREAD	_IOR('f', 127, int)	\/* get # byt/
FIOSETOWN	../h/ioctl.h	/^#define	FIOSETOWN	_IOW('f', 124, int)	\/* set owne/
FLERRS	../vax/flp.h	/^#define	FLERRS		5	\/* number of retries before qui/
FLUSHO	../h/ioctl.h	/^#define		FLUSHO		0x00800000	\/* flush output to te/
FL_BUSY	../vax/flp.h	/^#define	FL_BUSY		2$/
FL_CAN	../vax/flp.h	/^#define	FL_CAN		7	\/* give cancel order - we had a/
FL_CANCEL	../vax/flp.h	/^#define	FL_CANCEL	0x904		\/* cancel floppy functio/
FL_COM	../vax/flp.h	/^#define	FL_COM		6	\/* completing transmission *\/$/
FL_DAR	../vax/flp.h	/^#define	FL_DAR		5	\/* receiving data *\/$/
FL_DATA	../vax/flp.h	/^#define	FL_DATA		0x100		\/* floppy data select cod/
FL_DAX	../vax/flp.h	/^#define	FL_DAX		4	\/* transmitting data *\/$/
FL_ERR	../vax/flp.h	/^#define	FL_ERR		0x80		\/* error bit in floppy stat/
FL_FFC	../vax/flp.h	/^#define	FL_FFC		0x200		\/* floppy function complet/
FL_IDLE	../vax/flp.h	/^#define	FL_IDLE		0	\/* floppy idle *\/$/
FL_MAND	../vax/flp.h	/^#define	FL_MAND		1	\/* about to send read\/write c/
FL_OPEN	../vax/flp.h	/^#define	FL_OPEN		1$/
FL_PERR	../vax/flp.h	/^#define	FL_PERR		0x905		\/* floppy protocol error /
FL_RS	../vax/flp.h	/^#define	FL_RS		0x900		\/* floppy read sector comma/
FL_SEC	../vax/flp.h	/^#define	FL_SEC		2	\/* about to send sector # to LS/
FL_STAT	../vax/flp.h	/^#define	FL_STAT		0x902		\/* floppy get status comm/
FL_TRACK	../vax/flp.h	/^#define	FL_TRACK	3	\/* about to send track # to LS/
FL_WS	../vax/flp.h	/^#define	FL_WS		0x901		\/* floppy write sector comm/
FMARK	../h/file.h	/^#define	FMARK		00020		\/* mark during gc() *\/$/
FMASK	../h/file.h	/^#define	FMASK		00113$/
FMG0	../vaxuba/ikreg.h	/^#define FMG0		060200000$/
FNDELAY	../h/file.h	/^#define	FNDELAY		00004		\/* no delay *\/$/
FOLD	../vax/ns_cksum.c	/^#define FOLD { asm("ashl $-16,r8,r0")asm(" addw2 r/
FOLLOW	../h/namei.h	/^#define FOLLOW		0x40	\/* follow symbolic links *\//
FOPEN	../h/file.h	/^#define	FOPEN		(-1)$/
FORMAT_CONTROL_MASK	../vaxuba/ikreg.h	/^#define		FORMAT_CONTROL_MASK	03$/
FP	../vax/reg.h	/^#define	FP	(-20)$/
FPE_DECOVF_TRAP	../vax/trap.h	/^#define	    FPE_DECOVF_TRAP	0x6	\/* decimal overfl/
FPE_FLTDIV_FAULT	../vax/trap.h	/^#define	    FPE_FLTDIV_FAULT	0x9	\/* divide by zer/
FPE_FLTDIV_TRAP	../vax/trap.h	/^#define	    FPE_FLTDIV_TRAP	0x4	\/* floating\/deci/
FPE_FLTOVF_FAULT	../vax/trap.h	/^#define	    FPE_FLTOVF_FAULT	0x8	\/* floating over/
FPE_FLTOVF_TRAP	../vax/trap.h	/^#define	    FPE_FLTOVF_TRAP	0x3	\/* floating overf/
FPE_FLTUND_FAULT	../vax/trap.h	/^#define	    FPE_FLTUND_FAULT	0xa	\/* floating unde/
FPE_FLTUND_TRAP	../vax/trap.h	/^#define	    FPE_FLTUND_TRAP	0x5	\/* floating under/
FPE_INTDIV_TRAP	../vax/trap.h	/^#define	    FPE_INTDIV_TRAP	0x2	\/* integer divide/
FPE_INTOVF_TRAP	../vax/trap.h	/^#define	    FPE_INTOVF_TRAP	0x1	\/* integer overfl/
FPE_SUBRNG_TRAP	../vax/trap.h	/^#define	    FPE_SUBRNG_TRAP	0x7	\/* subscript out /
FRAME_ENABLE	../vaxuba/ikreg.h	/^#define FRAME_ENABLE	010000$/
FRAME_END	../net/if_sl.c	/^#define FRAME_END	 	0300		\/* Frame End *\/$/
FRAME_ESCAPE	../net/if_sl.c	/^#define FRAME_ESCAPE		0333		\/* Frame Esc *\/$/
FREAD	../h/file.h	/^#define	FREAD		00001		\/* descriptor read\/receive/
FREE	../h/malloc.h	/^#define FREE(addr, type) free(addr, type)$/
FREE_AT_HEAD	../sys/vm_text.c	/^#define FREE_AT_HEAD(xp) { \\$/
FREE_AT_TAIL	../sys/vm_text.c	/^#define FREE_AT_TAIL(xp) { \\$/
FRONT	../sys/vm_page.c	/^#define	FRONT	1$/
FSHLOCK	../h/file.h	/^#define	FSHLOCK		00200		\/* shared lock present */
FSLR	../vaxuba/psreg.h	/^#define FSLR		0177627$/
FSMAXTYPES	../h/disklabel.h	/^#define FSMAXTYPES	(sizeof(fstypenames) \/ sizeof(/
FSR_BITS	../vaxuba/tmreg.h	/^#define	FSR_BITS \\$/
FSWR	../vaxuba/psreg.h	/^#define FSWR		0177626$/
FS_42POSTBLFMT	../h/fs.h	/^#define FS_42POSTBLFMT		-1	\/* 4.2BSD rotational t/
FS_BSDFFS	../h/disklabel.h	/^#define	FS_BSDFFS	7		\/* 4.2BSD fast file system */
FS_DYNAMICPOSTBLFMT	../h/fs.h	/^#define FS_DYNAMICPOSTBLFMT	1	\/* dynamic rotation/
FS_MAGIC	../h/fs.h	/^#define	FS_MAGIC	0x011954$/
FS_OPTSPACE	../h/fs.h	/^#define FS_OPTSPACE	1	\/* minimize disk fragmentat/
FS_OPTTIME	../h/fs.h	/^#define FS_OPTTIME	0	\/* minimize allocation time /
FS_SWAP	../h/disklabel.h	/^#define	FS_SWAP		1		\/* swap *\/$/
FS_SYSV	../h/disklabel.h	/^#define	FS_SYSV		4		\/* System V *\/$/
FS_UNUSED	../h/disklabel.h	/^#define	FS_UNUSED	0		\/* unused *\/$/
FS_V6	../h/disklabel.h	/^#define	FS_V6		2		\/* Sixth Edition *\/$/
FS_V7	../h/disklabel.h	/^#define	FS_V7		3		\/* Seventh Edition *\/$/
FS_V71K	../h/disklabel.h	/^#define	FS_V71K		5		\/* V7 with 1K blocks (4.1, 2./
FS_V8	../h/disklabel.h	/^#define	FS_V8		6		\/* Eighth Edition, 4K blocks */
FTRUNC	../h/file.h	/^#define	FTRUNC		02000		\/* truncate to zero length/
FUNCTMAP	../vaxuba/npreg.h	/^#define FUNCTMAP(x)	(((x) << 6) | 077) \/* Maps us/
FWRITE	../h/file.h	/^#define	FWRITE		00002		\/* descriptor write\/send'/
F_DUPFD	../h/file.h	/^#define	F_DUPFD	0	\/* Duplicate fildes *\/$/
F_GETFD	../h/file.h	/^#define	F_GETFD	1	\/* Get fildes flags *\/$/
F_GETFL	../h/file.h	/^#define	F_GETFL	3	\/* Get file flags *\/$/
F_GETOWN	../h/file.h	/^#define	F_GETOWN 5	\/* Get owner *\/$/
F_OK	../h/file.h	/^#define	F_OK		0	\/* does file exist *\/$/
F_SETFD	../h/file.h	/^#define	F_SETFD	2	\/* Set fildes flags *\/$/
F_SETFL	../h/file.h	/^#define	F_SETFL	4	\/* Set file flags *\/$/
F_SETOWN	../h/file.h	/^#define F_SETOWN 6	\/* Set owner *\/$/
Fd_floa	../vax/asnumber.h	/^union Fd_float{$/
Ff_floa	../vax/asnumber.h	/^union Ff_float{$/
Fg_floa	../vax/asnumber.h	/^union Fg_float{$/
Fh_floa	../vax/asnumber.h	/^union Fh_float{$/
Fubyte ../vax/locore.s /^JSBENTRY(Fubyte, R0)$/
Fuword ../vax/locore.s /^JSBENTRY(Fuword, R0)$/
GETF	../h/file.h	/^#define	GETF(fp, fd) { \\$/
GO	../vaxuba/lpa.c	/^#define GO	0000001		\/* go *\/$/
GREEN_SELECT	../vaxuba/ikreg.h	/^#define GREEN_SELECT	040000$/
H	../h/vmmac.h	/^#define	H(pte)	((struct hpte *)(pte))$/
H2XENT_OFFSET	../vaxif/if_ex.c	/^#define	H2XENT_OFFSET(unit)	LVAL_OFF(unit, xs_h2xe/
H2XHDR_OFFSET	../vaxif/if_ex.c	/^#define	H2XHDR_OFFSET(unit)	RVAL_OFF(unit, xs_h2xh/
HALFWORD	../vaxuba/ikreg.h	/^#define HALFWORD	040$/
HALT_REQ	../vaxuba/psreg.h	/^#define HALT_REQ	01$/
HANDSPREAD	../vax/vmparam.h	/^#define	HANDSPREAD	(2 * 1024 * 1024)$/
HASH	../sys/kern_synch.c	/^#define HASH(x)	(( (int) x >> 5) & (SQSIZE-1))$/
HASHFRACTION	../h/gprof.h	/^#define	HASHFRACTION	2$/
HCBUSY	../vaxif/if_hdh.c	/^#define HCBUSY	1		\/* HDH HDX channel busy flag */
HDHABT	../vaxif/if_hdhreg.h	/^#define HDHABT		8	\/* abort flag *\/$/
HDHDATR	../vaxif/if_hdh.c	/^#define HDHDATR	2		\/* data read *\/$/
HDHDATW	../vaxif/if_hdh.c	/^#define HDHDATW	3		\/* data write *\/$/
HDHDONE	../vaxif/if_hdhreg.h	/^#define HDHDONE		1	\/* i\/o completion *\/$/
HDHDTERR	../vaxif/if_hdhreg.h	/^#define HDHDTERR	(HDHSUP+0x0600)	\/* host data err/
HDHEOS	../vaxif/if_hdhreg.h	/^#define HDHEOS		6	\/* end of stream flag *\/$/
HDHEXLP	../vaxif/if_hdhreg.h	/^#define HDHEXLP		0x2000	\/* external loopback modi/
HDHIACK	../vaxif/if_hdhreg.h	/^#define HDHIACK		(HDHSUP+0x4200)	\/* line init ack/
HDHIMP	../vaxif/if_hdhreg.h	/^#define HDHIMP		0x400	\/* IMP line up modifier *\//
HDHINIT	../vaxif/if_hdhreg.h	/^#define HDHINIT		0x42	\/* SYSINIT opcode *\/$/
HDHINLB	../vaxif/if_hdhreg.h	/^#define HDHINLB		0x1000	\/* internal loopback modi/
HDHIOCABT	../vaxif/if_hdhreg.h	/^#define HDHIOCABT 	0361	\/* i\/o aborted *\/$/
HDHIOCERR	../vaxif/if_hdhreg.h	/^#define HDHIOCERR 	0321	\/* program error *\/$/
HDHIOCOK	../vaxif/if_hdhreg.h	/^#define HDHIOCOK	0001	\/* successful completion */
HDHIOCOKP	../vaxif/if_hdhreg.h	/^#define HDHIOCOKP 	0002	\/* successful completion,/
HDHIOCOVR	../vaxif/if_hdhreg.h	/^#define HDHIOCOVR 	0363	\/* overrun error *\/$/
HDHIOCUBE	../vaxif/if_hdhreg.h	/^#define HDHIOCUBE 	0374	\/* non-existant memory or/
HDHLNACK	../vaxif/if_hdhreg.h	/^#define HDHLNACK	(HDHSUP+0x0300)	\/* ack line up r/
HDHLNDN	../vaxif/if_hdhreg.h	/^#define HDHLNDN		(HDHSUP+0x0200)	\/* line down rep/
HDHLNUP	../vaxif/if_hdhreg.h	/^#define HDHLNUP		(HDHSUP+0x0100)	\/* line up reply/
HDHLOOP	../vaxif/if_hdhreg.h	/^#define HDHLOOP		(HDHSUP+0x0500)	\/* loopback mess/
HDHNUMR	../vaxif/if_hdhreg.h	/^#define HDHNUMR		4	\/* non-UMR transfer *\/$/
HDHRDB	../vaxif/if_hdhreg.h	/^#define HDHRDB		1	\/* read from if-11 *\/$/
HDHREFL	../vaxif/if_hdhreg.h	/^#define HDHREFL		0x800	\/* reflect mode modifier */
HDHRQDN	../vaxif/if_hdhreg.h	/^#define HDHRQDN		(HDHSUP+0x0200)	\/* line down req/
HDHRQST	../vaxif/if_hdhreg.h	/^#define HDHRQST		(HDHSUP+0x0000)	\/* line status r/
HDHRQUP	../vaxif/if_hdhreg.h	/^#define HDHRQUP		(HDHSUP+0x0100)	\/* line up reque/
HDHSACK	../vaxif/if_hdhreg.h	/^#define HDHSACK		0	\/* start i\/o ack *\/$/
HDHSQERR	../vaxif/if_hdhreg.h	/^#define HDHSQERR	(HDHSUP+0x0800)	\/* HDLC sequence/
HDHSQRCV	../vaxif/if_hdhreg.h	/^#define HDHSQRCV	(HDHSUP+0x0700)	\/* HDLC sequence/
HDHSTR	../vaxif/if_hdhreg.h	/^#define HDHSTR		2	\/* stream flag *\/$/
HDHSUP	../vaxif/if_hdhreg.h	/^#define HDHSUP		0xf0	\/* supervisor HDH status\/li/
HDHSUPR	../vaxif/if_hdh.c	/^#define HDHSUPR	0		\/* supervisor read *\/$/
HDHSUPW	../vaxif/if_hdh.c	/^#define HDHSUPW	1		\/* supervisor write *\/$/
HDHTIMO	../vaxif/if_hdhreg.h	/^#define HDHTIMO		(HDHSUP+0x0400)	\/* line timeout /
HDHUMR	../vaxif/if_hdhreg.h	/^#define HDHUMR		16	\/* UMR protocol flag *\/$/
HDHUNIT	../vaxif/if_hdh.c	/^#define	HDHUNIT(x)	minor(x)$/
HDHWRT	../vaxif/if_hdhreg.h	/^#define HDHWRT		0	\/* write to if-11 *\/$/
HDHXABT	../vaxif/if_hdhreg.h	/^#define HDHXABT		8	\/* abort transfer *\/$/
HDHXEVN	../vaxif/if_hdhreg.h	/^#define HDHXEVN		1	\/* start with even address *\//
HDHXODD	../vaxif/if_hdhreg.h	/^#define HDHXODD		2	\/* start with odd address *\/$/
HDHXREQ	../vaxif/if_hdhreg.h	/^#define HDHXREQ		2	\/* UMR protocol transfer reque/
HDH_BITS	../vaxif/if_hdhreg.h	/^#define HDH_BITS \\$/
HDH_DMA	../vaxif/if_hdhreg.h	/^#define HDH_DMA		0000020		\/* DMA enable *\/$/
HDH_IEN	../vaxif/if_hdhreg.h	/^#define HDH_IEN		0000004		\/* interrupt enable *\//
HDH_MAIN	../vaxif/if_hdhreg.h	/^#define HDH_MAIN	0000040		\/* select UMC main memo/
HDH_MBLK	../vaxif/if_hdhreg.h	/^#define HDH_MBLK	0000200		\/* memory swap state (0/
HDH_NMI	../vaxif/if_hdhreg.h	/^#define	HDH_NMI		0000001		\/* cause NMI *\/$/
HDH_NXM	../vaxif/if_hdhreg.h	/^#define HDH_NXM		0040000		\/* non-existent memory /
HDH_PER	../vaxif/if_hdhreg.h	/^#define HDH_PER		0020000		\/* UNIBUS parity error /
HDH_RST	../vaxif/if_hdhreg.h	/^#define HDH_RST		0000002		\/* reset *\/$/
HDH_SRV	../vaxif/if_hdhreg.h	/^#define	HDH_SRV		0000100		\/* select UMC service m/
HDH_STARTED	../vaxif/if_hdh.c	/^#define HDH_STARTED	1	\/* HDH has been initialized/
HDH_UER	../vaxif/if_hdhreg.h	/^#define HDH_UER		0100000		\/* UMC error condition /
HDH_UP	../vaxif/if_hdh.c	/^#define HDH_UP		2	\/* HDH protocol is up *\/$/
HDH_WRT	../vaxif/if_hdhreg.h	/^#define HDH_WRT		0000010		\/* DMA write enable *\//
HDH_ZGO	../vaxif/if_hdhreg.h	/^#define HDH_ZGO		0004000		\/* Z80 not in wait stat/
HDH_ZRUN	../vaxif/if_hdhreg.h	/^#define HDH_ZRUN	0010000		\/* Z80 running *\/$/
HDUPLX	../vaxuba/dhreg.h	/^#define	HDUPLX	040000$/
HF_DEAD	../netimp/if_imphost.h	/^#define	HF_DEAD		(1<<IMPTYPE_HOSTDEAD)$/
HF_INUSE	../netimp/if_imphost.h	/^#define	HF_INUSE	0x1$/
HF_UNREACH	../netimp/if_imphost.h	/^#define	HF_UNREACH	(1<<IMPTYPE_HOSTUNREACH)$/
HIGHBYTE	../vaxuba/npreg.h	/^#define	HIGHBYTE	0$/
HIGHPAGES	../vax/vmparam.h	/^#define	HIGHPAGES	UPAGES$/
HIGH_RESOL	../vaxuba/ikreg.h	/^#define		HIGH_RESOL		010$/
HIGH_RESOL_SYNC	../vaxuba/ikreg.h	/^#define		HIGH_RESOL_SYNC		01000$/
HISTCOUNTER	../h/gprof.h	/^#define	HISTCOUNTER	unsigned short$/
HISTFRACTION	../h/gprof.h	/^#define	HISTFRACTION	2$/
HIT	../vaxuba/psreg.h	/^#define HIT		010000$/
HIT_HOLD	../vaxuba/psreg.h	/^#define HIT_HOLD	010$/
HIT_REQ	../vaxuba/psreg.h	/^#define HIT_REQ		02$/
HIWORD	../vaxuba/npreg.h	/^#define HIWORD(X)	(((ushort *)&(X))[1])$/
HOC	../vax/asnumber.h	/^#define	HOC		(CH_N - 1)	\/* high order chunk *\/$/
HOSTCONF	../vaxuba/npreg.h	/^#define	HOSTCONF	0x0109	\/* See above *\/$/
HOSTDEADTIMER	../netimp/if_imp.c	/^#define HOSTDEADTIMER	(30 * PR_SLOWHZ)	\/* How lon/
HOSTHASH	../netimp/if_imphost.h	/^#define	HOSTHASH(imp, host)	((unsigned)(ntohs(imp)/
HOSTTIMER	../netimp/if_imphost.h	/^#define	HOSTTIMER	128		\/* keep structure around a/
HOST_DEQUE	../netimp/if_imphost.h	/^#define	HOST_DEQUE(hp, m) { \\$/
HOST_ENQUE	../netimp/if_imphost.h	/^#define	HOST_ENQUE(hp, m) { \\$/
HPDS_ATA	../vaxmba/hpreg.h	/^#define	HPDS_ATA	0100000		\/* attention active *\//
HPDS_BITS	../vaxmba/hpreg.h	/^#define	HPDS_BITS \\$/
HPDS_DPR	../vaxmba/hpreg.h	/^#define	HPDS_DPR	0000400		\/* drive present *\/$/
HPDS_DREADY	../vaxmba/hpreg.h	/^#define	HPDS_DREADY	(HPDS_DPR|HPDS_DRY|HPDS_MOL|HP/
HPDS_DRY	../vaxmba/hpreg.h	/^#define	HPDS_DRY	0000200		\/* drive ready *\/$/
HPDS_ERR	../vaxmba/hpreg.h	/^#define	HPDS_ERR	0040000		\/* composite drive erro/
HPDS_LST	../vaxmba/hpreg.h	/^#define	HPDS_LST	0002000		\/* last sector transfer/
HPDS_MOL	../vaxmba/hpreg.h	/^#define	HPDS_MOL	0010000		\/* medium on line *\/$/
HPDS_OM	../vaxmba/hpreg.h	/^#define	HPDS_OM		0000001		\/* offset mode *\/$/
HPDS_PGM	../vaxmba/hpreg.h	/^#define	HPDS_PGM	0001000		\/* programmable *\/$/
HPDS_PIP	../vaxmba/hpreg.h	/^#define	HPDS_PIP	0020000		\/* positioning in progr/
HPDS_VV	../vaxmba/hpreg.h	/^#define	HPDS_VV		0000100		\/* volume valid *\/$/
HPDS_WRL	../vaxmba/hpreg.h	/^#define	HPDS_WRL	0004000		\/* write locked *\/$/
HPDT_2361	../vaxmba/hp.c	/^#define HPDT_2361	15$/
HPDT_9300	../vaxmba/hp.c	/^#define	HPDT_9300	13$/
HPDT_9730	../vaxmba/hp.c	/^#define	HPDT_9730	10$/
HPDT_9775	../vaxmba/hp.c	/^#define	HPDT_9775	9$/
HPDT_CAPRICORN	../vaxmba/hp.c	/^#define	HPDT_CAPRICORN	11$/
HPDT_EAGLE	../vaxmba/hp.c	/^#define HPDT_EAGLE	12$/
HPDT_ML11A	../vaxmba/hp.c	/^#define	HPDT_ML11A	7$/
HPDT_ML11B	../vaxmba/hp.c	/^#define	HPDT_ML11B	8$/
HPDT_RM02	../vaxmba/hp.c	/^#define HPDT_RM02	14$/
HPDT_RM03	../vaxmba/hp.c	/^#define	HPDT_RM03	0$/
HPDT_RM05	../vaxmba/hp.c	/^#define	HPDT_RM05	1$/
HPDT_RM80	../vaxmba/hp.c	/^#define	HPDT_RM80	3$/
HPDT_RP04	../vaxmba/hp.c	/^#define	HPDT_RP04	4$/
HPDT_RP05	../vaxmba/hp.c	/^#define	HPDT_RP05	5$/
HPDT_RP06	../vaxmba/hp.c	/^#define	HPDT_RP06	2$/
HPDT_RP07	../vaxmba/hp.c	/^#define	HPDT_RP07	6$/
HPER1_AOE	../vaxmba/hpreg.h	/^#define	HPER1_AOE	0001000		\/* address overflow er/
HPER1_BITS	../vaxmba/hpreg.h	/^#define	HPER1_BITS \\$/
HPER1_DCK	../vaxmba/hpreg.h	/^#define	HPER1_DCK	0100000		\/* data check *\/$/
HPER1_DTE	../vaxmba/hpreg.h	/^#define	HPER1_DTE	0010000		\/* drive timing error /
HPER1_ECH	../vaxmba/hpreg.h	/^#define	HPER1_ECH	0000100		\/* ecc hard error *\/$/
HPER1_FER	../vaxmba/hpreg.h	/^#define	HPER1_FER	0000020		\/* format error *\/$/
HPER1_HARD	../vaxmba/hpreg.h	/^#define	HPER1_HARD    \\$/
HPER1_HCE	../vaxmba/hpreg.h	/^#define	HPER1_HCE	0000200		\/* header compare erro/
HPER1_HCRC	../vaxmba/hpreg.h	/^#define	HPER1_HCRC	0000400		\/* header crc error */
HPER1_IAE	../vaxmba/hpreg.h	/^#define	HPER1_IAE	0002000		\/* invalid address err/
HPER1_ILF	../vaxmba/hpreg.h	/^#define	HPER1_ILF	0000001		\/* illegal function */
HPER1_ILR	../vaxmba/hpreg.h	/^#define	HPER1_ILR	0000002		\/* illegal register */
HPER1_OPI	../vaxmba/hpreg.h	/^#define	HPER1_OPI	0020000		\/* operation incomplet/
HPER1_PAR	../vaxmba/hpreg.h	/^#define	HPER1_PAR	0000010		\/* parity error *\/$/
HPER1_RMR	../vaxmba/hpreg.h	/^#define	HPER1_RMR	0000004		\/* register modificati/
HPER1_UNS	../vaxmba/hpreg.h	/^#define	HPER1_UNS	0040000		\/* drive unsafe *\/$/
HPER1_WCF	../vaxmba/hpreg.h	/^#define HPER1_WCF	0000040		\/* write clock fail */
HPER1_WLE	../vaxmba/hpreg.h	/^#define	HPER1_WLE	0004000		\/* write lock error */
HPER2_BITS	../vaxmba/hpreg.h	/^#define	HPER2_BITS \\$/
HPER2_BSE	../vaxmba/hpreg.h	/^#define	HPER2_BSE	0100000		\/* bad sector error */
HPER2_DPE	../vaxmba/hpreg.h	/^#define	HPER2_DPE	0000010		\/* data parity error */
HPER2_DVC	../vaxmba/hpreg.h	/^#define	HPER2_DVC	0000200		\/* device check *\/$/
HPER2_HARD	../vaxmba/hpreg.h	/^#define	HPER2_HARD    (HPER2_OPE)$/
HPER2_IVC	../vaxmba/hpreg.h	/^#define	HPER2_IVC	0010000		\/* invalid command *\//
HPER2_LBC	../vaxmba/hpreg.h	/^#define	HPER2_LBC	0002000		\/* loss of bit check */
HPER2_LSC	../vaxmba/hpreg.h	/^#define	HPER2_LSC	0004000		\/* loss of system cloc/
HPER2_OPE	../vaxmba/hpreg.h	/^#define	HPER2_OPE	0020000		\/* operator plug error/
HPER2_SKI	../vaxmba/hpreg.h	/^#define	HPER2_SKI	0040000		\/* seek incomplete *\//
HPER2_SSE	../vaxmba/hpreg.h	/^#define	HPER2_SSE	0000040		\/* skip sector error (/
HPHR_FMTENABLE	../vaxmba/hpreg.h	/^#define	HPHR_FMTENABLE	0xffff		\/* enable format c/
HPHR_MAXCYL	../vaxmba/hpreg.h	/^#define	HPHR_MAXCYL	0x8017		\/* maximum cylinder a/
HPHR_MAXSECT	../vaxmba/hpreg.h	/^#define	HPHR_MAXSECT	0x8019		\/* maximum sector ad/
HPHR_MAXTRAK	../vaxmba/hpreg.h	/^#define	HPHR_MAXTRAK	0x8018		\/* maximum track add/
HPMBUF	../netimp/if_imphost.h	/^#define	HPMBUF	((MLEN - sizeof(int)) \/ sizeof(str/
HPMR_ARRTYP	../vaxmba/hpreg.h	/^#define	HPMR_ARRTYP	0002000		\/* ML11 array type */
HPMR_SZ	../vaxmba/hpreg.h	/^#define	HPMR_SZ		0174000		\/* ML11 system size *\//
HPMR_TRT	../vaxmba/hpreg.h	/^#define	HPMR_TRT	0001400		\/* ML11 transfer rate */
HPOF_CMO	../vaxmba/hpreg.h	/^#define	HPOF_CMO	0100000		\/* command modifier *\//
HPOF_ECI	../vaxmba/hpreg.h	/^#define	HPOF_ECI	0004000		\/* ecc inhibit *\/$/
HPOF_FMT22	../vaxmba/hpreg.h	/^#define	HPOF_FMT22	0010000		\/* 16 bit format *\/$/
HPOF_HCI	../vaxmba/hpreg.h	/^#define	HPOF_HCI	0002000		\/* header compare inhib/
HPOF_M1200	../vaxmba/hpreg.h	/^#define	HPOF_M1200	0260		\/* -1200 uinches *\/$/
HPOF_M400	../vaxmba/hpreg.h	/^#define	HPOF_M400	0220		\/*  -400 uinches *\/$/
HPOF_M800	../vaxmba/hpreg.h	/^#define	HPOF_M800	0240		\/*  -800 uinches *\/$/
HPOF_MTD	../vaxmba/hpreg.h	/^#define	HPOF_MTD	0040000		\/* move track descripto/
HPOF_P1200	../vaxmba/hpreg.h	/^#define	HPOF_P1200	060		\/* +1200 uinches *\/$/
HPOF_P400	../vaxmba/hpreg.h	/^#define	HPOF_P400	020		\/*  +400 uinches *\/$/
HPOF_P800	../vaxmba/hpreg.h	/^#define	HPOF_P800	040		\/*  +800 uinches *\/$/
HPOF_SSEI	../vaxmba/hpreg.h	/^#define	HPOF_SSEI	0001000		\/* skip sector inhibit/
HPWAIT	../vaxmba/hp.c	/^#define HPWAIT(mi, addr) (hpwait(mi))$/
HP_DCLR	../vaxmba/hpreg.h	/^#define	HP_DCLR		010		\/* drive clear *\/$/
HP_DIAGNOSE	../vaxmba/hpreg.h	/^#define	HP_DIAGNOSE	034		\/* diagnose drive *\/$/
HP_DVA	../vaxmba/hpreg.h	/^#define	HP_DVA	0004000		\/* drive available *\/$/
HP_GO	../vaxmba/hpreg.h	/^#define	HP_GO	0000001$/
HP_IE	../vaxmba/hpreg.h	/^#define	HP_IE	0000100		\/* interrupt enable *\/$/
HP_NOP	../vaxmba/hpreg.h	/^#define	HP_NOP		000		\/* no operation *\/$/
HP_OFFSET	../vaxmba/hpreg.h	/^#define	HP_OFFSET	014		\/* offset *\/$/
HP_PACK	../vaxmba/hpreg.h	/^#define	HP_PACK		022		\/* pack acknowledge *\/$/
HP_PRESET	../vaxmba/hpreg.h	/^#define	HP_PRESET	020		\/* read-in preset *\/$/
HP_RCOM	../vaxmba/hpreg.h	/^#define	HP_RCOM		070		\/* read data *\/$/
HP_RDY	../vaxmba/hpreg.h	/^#define	HP_RDY	0000200		\/* controller ready *\/$/
HP_RECAL	../vaxmba/hpreg.h	/^#define	HP_RECAL	006		\/* recalibrate *\/$/
HP_RELEASE	../vaxmba/hpreg.h	/^#define	HP_RELEASE	012		\/* release *\/$/
HP_RHDR	../vaxmba/hpreg.h	/^#define	HP_RHDR		072		\/* read header and data *\//
HP_RTC	../vaxmba/hpreg.h	/^#define	HP_RTC		016		\/* return to centerline *\/$/
HP_RTRACKD	../vaxmba/hpreg.h	/^#define	HP_RTRACKD	074		\/* read track descriptor /
HP_SC	../vaxmba/hpreg.h	/^#define	HP_SC	0100000		\/* special condition *\/$/
HP_SEARCH	../vaxmba/hpreg.h	/^#define	HP_SEARCH	030		\/* search *\/$/
HP_SEEK	../vaxmba/hpreg.h	/^#define	HP_SEEK		004		\/* seek *\/$/
HP_TRE	../vaxmba/hpreg.h	/^#define	HP_TRE	0040000		\/* transfer error *\/$/
HP_UNLOAD	../vaxmba/hpreg.h	/^#define	HP_UNLOAD	002		\/* offline drive *\/$/
HP_WCDATA	../vaxmba/hpreg.h	/^#define	HP_WCDATA	050		\/* write check data *\/$/
HP_WCHDR	../vaxmba/hpreg.h	/^#define	HP_WCHDR	052		\/* write check header and d/
HP_WCOM	../vaxmba/hpreg.h	/^#define	HP_WCOM		060		\/* write data *\/$/
HP_WHDR	../vaxmba/hpreg.h	/^#define	HP_WHDR		062		\/* write header *\/$/
HP_WTRACKD	../vaxmba/hpreg.h	/^#define	HP_WTRACKD	064		\/* write track descriptor/
HRSEC	../vax/ka630.h	/^#define	HRSEC	3600$/
HTDS_ATA	../vaxmba/htreg.h	/^#define	HTDS_ATA	0100000		\/* attention active *\//
HTDS_BITS	../vaxmba/htreg.h	/^#define	HTDS_BITS \\$/
HTDS_BOT	../vaxmba/htreg.h	/^#define	HTDS_BOT	0000002		\/* beginning of tape */
HTDS_DPR	../vaxmba/htreg.h	/^#define	HTDS_DPR	0000400		\/* drive present (alway/
HTDS_DRY	../vaxmba/htreg.h	/^#define	HTDS_DRY	0000200		\/* drive ready *\/$/
HTDS_EOT	../vaxmba/htreg.h	/^#define	HTDS_EOT	0002000		\/* end of tape *\/$/
HTDS_ERR	../vaxmba/htreg.h	/^#define	HTDS_ERR	0040000		\/* composite error *\/$/
HTDS_IDB	../vaxmba/htreg.h	/^#define	HTDS_IDB	0000010		\/* identification burst/
HTDS_MOL	../vaxmba/htreg.h	/^#define	HTDS_MOL	0010000		\/* medium on line *\/$/
HTDS_PES	../vaxmba/htreg.h	/^#define	HTDS_PES	0000040		\/* phase-encoded status/
HTDS_PIP	../vaxmba/htreg.h	/^#define	HTDS_PIP	0020000		\/* positioning in progr/
HTDS_SDWN	../vaxmba/htreg.h	/^#define	HTDS_SDWN	0000020		\/* settle down *\/$/
HTDS_SLA	../vaxmba/htreg.h	/^#define	HTDS_SLA	0000001		\/* slave attention *\/$/
HTDS_SSC	../vaxmba/htreg.h	/^#define	HTDS_SSC	0000100		\/* slave status change /
HTDS_TM	../vaxmba/htreg.h	/^#define	HTDS_TM		0000004		\/* tape mark *\/$/
HTDS_WRL	../vaxmba/htreg.h	/^#define	HTDS_WRL	0004000		\/* write lock *\/$/
HTDT_7CH	../vaxmba/htreg.h	/^#define	HTDT_7CH	0010000		\/* 7 channel; always 0 /
HTDT_DRQ	../vaxmba/htreg.h	/^#define	HTDT_DRQ	0004000		\/* drive requested; alw/
HTDT_MOH	../vaxmba/htreg.h	/^#define	HTDT_MOH	0020000		\/* moving head; always /
HTDT_NSA	../vaxmba/htreg.h	/^#define	HTDT_NSA	0100000		\/* not sector addressed/
HTDT_SPR	../vaxmba/htreg.h	/^#define	HTDT_SPR	0002000		\/* slave present *\/$/
HTDT_TAP	../vaxmba/htreg.h	/^#define	HTDT_TAP	0040000		\/* tape; always 1 *\/$/
HTER_BITS	../vaxmba/htreg.h	/^#define	HTER_BITS \\$/
HTER_CORCRC	../vaxmba/htreg.h	/^#define	HTER_CORCRC	0100000		\/* correctible data /
HTER_CPAR	../vaxmba/htreg.h	/^#define	HTER_CPAR	0000010		\/* control bus parity /
HTER_CSITM	../vaxmba/htreg.h	/^#define	HTER_CSITM	0002000		\/* correctable skew\//
HTER_DPAR	../vaxmba/htreg.h	/^#define	HTER_DPAR	0000040		\/* data parity error */
HTER_DTE	../vaxmba/htreg.h	/^#define	HTER_DTE	0010000		\/* drive timing error */
HTER_FCE	../vaxmba/htreg.h	/^#define	HTER_FCE	0001000		\/* frame count error */
HTER_FMT	../vaxmba/htreg.h	/^#define	HTER_FMT	0000020		\/* format error *\/$/
HTER_HARD	../vaxmba/htreg.h	/^#define	HTER_HARD \\$/
HTER_ILF	../vaxmba/htreg.h	/^#define	HTER_ILF	0000001		\/* illegal function *\//
HTER_ILR	../vaxmba/htreg.h	/^#define	HTER_ILR	0000002		\/* illegal register *\//
HTER_INCVPE	../vaxmba/htreg.h	/^#define	HTER_INCVPE	0000100		\/* incorrectable dat/
HTER_NEF	../vaxmba/htreg.h	/^#define	HTER_NEF	0004000		\/* non-executable funct/
HTER_NSG	../vaxmba/htreg.h	/^#define	HTER_NSG	0000400		\/* non-standard gap *\//
HTER_OPI	../vaxmba/htreg.h	/^#define	HTER_OPI	0020000		\/* operation incomplete/
HTER_PEFLRC	../vaxmba/htreg.h	/^#define	HTER_PEFLRC	0000200		\/* format error or l/
HTER_RMR	../vaxmba/htreg.h	/^#define	HTER_RMR	0000004		\/* register modificatio/
HTER_UNS	../vaxmba/htreg.h	/^#define	HTER_UNS	0040000		\/* unsafe *\/$/
HTTC_1600BPI	../vaxmba/htreg.h	/^#define	HTTC_1600BPI	0002000		\/* in bits 8-10, de/
HTTC_6250BPI	../vaxmba/htreg.h	/^#define	HTTC_6250BPI	0003400		\/* in bits 8-10, de/
HTTC_800BPI	../vaxmba/htreg.h	/^#define	HTTC_800BPI	0001400		\/* in bits 8-10, den/
HTTC_ACCL	../vaxmba/htreg.h	/^#define	HTTC_ACCL	0100000		\/* transport is not re/
HTTC_EAODTE	../vaxmba/htreg.h	/^#define	HTTC_EAODTE	0010000		\/* enable abort on d/
HTTC_EVEN	../vaxmba/htreg.h	/^#define	HTTC_EVEN	0000010		\/* select even parity /
HTTC_FCS	../vaxmba/htreg.h	/^#define	HTTC_FCS	0040000		\/* frame count status */
HTTC_PDP11	../vaxmba/htreg.h	/^#define	HTTC_PDP11	0000300		\/* in bits 4-7, pdp11/
HTTC_SAC	../vaxmba/htreg.h	/^#define	HTTC_SAC	0020000		\/* slave address change/
HTUNIT	../vaxmba/ht.c	/^#define HTUNIT(dev)	(tuinfo[TUUNIT(dev)]->ms_ctlr)/
HT_DCLR	../vaxmba/htreg.h	/^#define	HT_DCLR		000010		\/* drive clear *\/$/
HT_ERASE	../vaxmba/htreg.h	/^#define	HT_ERASE	000024		\/* erase *\/$/
HT_GO	../vaxmba/htreg.h	/^#define	HT_GO		000001		\/* go bit *\/$/
HT_RCOM	../vaxmba/htreg.h	/^#define	HT_RCOM		000070		\/* read forward *\/$/
HT_REW	../vaxmba/htreg.h	/^#define	HT_REW		000006		\/* rewind *\/$/
HT_REWOFFL	../vaxmba/htreg.h	/^#define	HT_REWOFFL	000002		\/* rewind offline *\/$/
HT_RIP	../vaxmba/htreg.h	/^#define	HT_RIP		000020		\/* read in preset *\/$/
HT_RREV	../vaxmba/htreg.h	/^#define	HT_RREV		000076		\/* read reverse *\/$/
HT_SENSE	../vaxmba/htreg.h	/^#define	HT_SENSE	000000		\/* no operations (sense)/
HT_SFORW	../vaxmba/htreg.h	/^#define	HT_SFORW	000030		\/* space forward *\/$/
HT_SREV	../vaxmba/htreg.h	/^#define	HT_SREV		000032		\/* space reverse *\/$/
HT_WCHFWD	../vaxmba/htreg.h	/^#define	HT_WCHFWD	000050		\/* write check forward /
HT_WCHREV	../vaxmba/htreg.h	/^#define	HT_WCHREV	000056		\/* write check reverse /
HT_WCOM	../vaxmba/htreg.h	/^#define	HT_WCOM		000060		\/* write forward *\/$/
HT_WEOF	../vaxmba/htreg.h	/^#define	HT_WEOF		000026		\/* write tape mark *\/$/
HYELOG	../vaxif/if_hy.c	/^#define	HYELOG$/
HYE_BINS	../vaxif/if_hy.h	/^#define	HYE_BINS	4		\/* number of command bins *\//
HYE_MAX	../vaxif/if_hy.h	/^#define	HYE_MAX		0x18		\/* maximum adapter error c/
HYE_SIZE	../vaxif/if_hy.h	/^#define	HYE_SIZE  (HYE_MAX+1)*HYE_BINS	\/* size of/
HYF_CLRADAPTER	../vaxif/if_hyreg.h	/^#define HYF_CLRADAPTER	0xE0	\/* clear adapter *\/$/
HYF_CLRWFMSG	../vaxif/if_hyreg.h	/^#define	HYF_CLRWFMSG	0xE6	\/* clear wait for mwssa/
HYF_DUMPREGS	../vaxif/if_hyreg.h	/^#define	HYF_DUMPREGS	0x50	\/* dump extention regis/
HYF_END_OP	../vaxif/if_hyreg.h	/^#define	HYF_END_OP	0xE4	\/* end operation *\/$/
HYF_INPUTDATA	../vaxif/if_hyreg.h	/^#define	HYF_INPUTDATA	0x28	\/* input assiciated da/
HYF_INPUTMSG	../vaxif/if_hyreg.h	/^#define	HYF_INPUTMSG	0x24	\/* input message proper/
HYF_MARKP0	../vaxif/if_hyreg.h	/^#define	HYF_MARKP0	0x60	\/* mark down port 0 *\/$/
HYF_MARKP1	../vaxif/if_hyreg.h	/^#define	HYF_MARKP1	0x64	\/* mark down port 1 *\/$/
HYF_MARKP2	../vaxif/if_hyreg.h	/^#define	HYF_MARKP2	0x68	\/* mark down port 2 *\/$/
HYF_MARKP3	../vaxif/if_hyreg.h	/^#define	HYF_MARKP3	0x6C	\/* mark down port 3 *\/$/
HYF_MP0RR	../vaxif/if_hyreg.h	/^#define	HYF_MP0RR	0x70	\/* mark down port 0 and re/
HYF_MP1RR	../vaxif/if_hyreg.h	/^#define	HYF_MP1RR	0x74	\/* mark down port 1 and re/
HYF_MP2RR	../vaxif/if_hyreg.h	/^#define	HYF_MP2RR	0x78	\/* mark down port 2 and re/
HYF_MP3RR	../vaxif/if_hyreg.h	/^#define	HYF_MP3RR	0x7C	\/* mark down port 3 and re/
HYF_RBUFF	../vaxif/if_hyreg.h	/^#define	HYF_RBUFF	0xCC	\/* test mode: read buffer /
HYF_RCSTATS	../vaxif/if_hyreg.h	/^#define	HYF_RCSTATS	0xA4	\/* read and clear statis/
HYF_RSTATS	../vaxif/if_hyreg.h	/^#define	HYF_RSTATS	0xA0	\/* read statistics *\/$/
HYF_SADDR_LEN	../vaxif/if_hyreg.h	/^#define	HYF_SADDR_LEN	0xC4	\/* test mode: set addr/
HYF_SETTEST	../vaxif/if_hyreg.h	/^#define	HYF_SETTEST	0xC0	\/* enable test operation/
HYF_STATUS	../vaxif/if_hyreg.h	/^#define	HYF_STATUS	0x40	\/* request status *\/$/
HYF_WAITFORMSG	../vaxif/if_hyreg.h	/^#define	HYF_WAITFORMSG	0xE8	\/* wait for message */
HYF_WBUFF	../vaxif/if_hyreg.h	/^#define	HYF_WBUFF	0xC8	\/* test mode: write buffer/
HYF_XMITDATA	../vaxif/if_hyreg.h	/^#define	HYF_XMITDATA	0x08	\/* transmit associated /
HYF_XMITLOCMSG	../vaxif/if_hyreg.h	/^#define	HYF_XMITLOCMSG	0x10	\/* transmit local mes/
HYF_XMITLSTDATA	../vaxif/if_hyreg.h	/^#define	HYF_XMITLSTDATA	0x0C	\/* transmit last ass/
HYF_XMITMSG	../vaxif/if_hyreg.h	/^#define	HYF_XMITMSG	0x04	\/* transmit message *\/$/
HYGETELOG	../vaxif/if_hy.h	/^#define HYGETELOG	_IOW('i', 0x84, struct hylsetget/
HYGETLOG	../vaxif/if_hy.h	/^#define HYGETLOG	_IOW('i', 0x83, struct hylsetget)/
HYGETROUTE	../vaxif/if_hy.h	/^#define HYGETROUTE	_IOW('i', 0x81, struct hyrsetge/
HYLINK_IP	../vaxif/if_hy.h	/^#define HYLINK_IP	0	\/* Internet Protocol Packet */
HYLOG	../vaxif/if_hy.c	/^#define	HYLOG$/
HYL_CANCEL	../vaxif/if_hy.h	/^#define	HYL_CANCEL	8	\/* cancel transmit attempt */
HYL_CATCHN	../vaxif/if_hy.h	/^#define HYL_CATCHN	2	\/* hyl_count transactions be/
HYL_CMD	../vaxif/if_hy.h	/^#define HYL_CMD		6	\/* cmd issued (uchar cmd, stat/
HYL_CONTINUOUS	../vaxif/if_hy.h	/^#define HYL_CONTINUOUS	1	\/* continuous logging */
HYL_DISABLED	../vaxif/if_hy.h	/^#define HYL_DISABLED	0	\/* logging disabled *\/$/
HYL_INT	../vaxif/if_hy.h	/^#define HYL_INT		7	\/* interrupt (short csr, wcr) /
HYL_IOCTL	../vaxif/if_hy.h	/^#define	HYL_IOCTL	10	\/* hyioctl *\/$/
HYL_NOP	../vaxif/if_hy.h	/^#define HYL_NOP		0$/
HYL_RECV	../vaxif/if_hy.h	/^#define HYL_RECV	5	\/* recieved pkt (short len; st/
HYL_RESET	../vaxif/if_hy.h	/^#define	HYL_RESET	9	\/* hyinit or unibus reset *\//
HYL_SIZE	../vaxif/if_hy.h	/^#define HYL_SIZE 16*1024$/
HYL_STATISTICS	../vaxif/if_hy.h	/^#define HYL_STATISTICS	3	\/* statistics (struct hy/
HYL_STATUS	../vaxif/if_hy.h	/^#define HYL_STATUS	2	\/* status results (struct hy/
HYL_UP	../vaxif/if_hy.h	/^#define HYL_UP		1	\/* markup *\/$/
HYL_XMIT	../vaxif/if_hy.h	/^#define HYL_XMIT	4	\/* packed being send (struct h/
HYMTU	../vaxif/if_hy.c	/^#define	HYMTU	1100$/
HYM_SWLEN	../vaxif/if_hy.h	/^#define HYM_SWLEN (sizeof(struct hym_hdr) - sizeof/
HYRHASH	../vaxif/if_hy.h	/^#define HYRHASH(x) (((x) ^ ((x) >> 16)) % HYRSIZE)/
HYROUTE	../vaxif/if_hy.c	/^#define	HYROUTE$/
HYRSIZE	../vaxif/if_hy.h	/^#define HYRSIZE  37	\/* max number of adapters in /
HYR_DIR	../vaxif/if_hy.h	/^#define HYR_DIR		0x02	\/* direct entry *\/$/
HYR_GATE	../vaxif/if_hy.h	/^#define HYR_GATE	0x04	\/* gateway entry *\/$/
HYR_INUSE	../vaxif/if_hy.h	/^#define HYR_INUSE	0x01	\/* entry in use *\/$/
HYR_LOOP	../vaxif/if_hy.h	/^#define HYR_LOOP	0x08	\/* hardware loopback entry /
HYR_RLOOP	../vaxif/if_hy.h	/^#define HYR_RLOOP	0x10	\/* remote adapter hardware/
HYSETLOG	../vaxif/if_hy.h	/^#define HYSETLOG	_IOW('i', 0x82, struct hylsetget)/
HYSETROUTE	../vaxif/if_hy.h	/^#define HYSETROUTE	_IOW('i', 0x80, struct hyrsetge/
HYS_ABNORMAL	../vaxif/if_hyreg.h	/^#define	HYS_ABNORMAL(x)	(((x)->hyd_csr & S_C) != 0/
HYS_DONE	../vaxif/if_hyreg.h	/^#define	HYS_DONE(x)	(((x)->hyd_csr & (S_ERROR|S_B|/
HYS_ERROR	../vaxif/if_hyreg.h	/^#define	HYS_ERROR(x)	(((x)->hyd_csr & S_ERROR) != /
HYS_NORMAL	../vaxif/if_hyreg.h	/^#define	HYS_NORMAL(x)	(((x)->hyd_csr & S_B) != 0)	/
HYS_RECVDATA	../vaxif/if_hyreg.h	/^#define	HYS_RECVDATA(x)	(((x)->hyd_csr & S_A) != 0/
HY_CSR_BITS	../vaxif/if_hyreg.h	/^#define HY_CSR_BITS "\\20\\$/
HZ120	../vaxuba/psreg.h	/^#define HZ120		040$/
H_6250BPI	../vaxmba/mt.c	/^#define	H_6250BPI	010$/
H_ASSOC	../vaxif/if_hy.h	/^#define H_ASSOC		0x0100	\/* has associated data */
H_DENS	../vaxmba/ht.c	/^#define	H_DENS(dev)	((minor(dev) >> 3) & 03)$/
H_EOT	../vaxmba/mt.c	/^#define H_EOT		02		\/* end of tape encountered *\//
H_ERASED	../vaxmba/ht.c	/^#define H_ERASED  2	\/* last write retry was an er/
H_IEOT	../vaxmba/mt.c	/^#define H_IEOT		04		\/* ignore EOT condition *\/$/
H_LOOPBK	../vaxif/if_hy.h	/^#define H_LOOPBK	0x00FF	\/* loopback command *\/$/
H_NOREWIND	../vaxmba/ht.c	/^#define	H_NOREWIND	04$/
H_REWIND	../vaxmba/ht.c	/^#define H_REWIND  4	\/* last unit start was a rewi/
H_RLOOPBK	../vaxif/if_hy.h	/^#define H_RLOOPBK	0x008F	\/* A710 remote loopback /
H_RTRUNKS	../vaxif/if_hy.h	/^#define H_RTRUNKS	0x000F	\/* remote trunks to tran/
H_WRITTEN	../vaxmba/ht.c	/^#define	H_WRITTEN 1	\/* last operation was a write/
H_XTRUNKS	../vaxif/if_hy.h	/^#define H_XTRUNKS	0x00F0	\/* transmit trunks *\/$/
IACC	../h/inode.h	/^#define	IACC		0x4		\/* inode access time to be upd/
IA_SIN	../netinet/in_var.h	/^#define	IA_SIN(ia) ((struct sockaddr_in *)(&((stru/
IA_SNS	../netns/ns_if.h	/^#define	IA_SNS(ia) ((struct sockaddr_ns *)(&((stru/
IB	../vaxuba/psreg.h	/^#define IB		04000$/
IBOOTADDR	../vaxuba/npreg.h	/^#define IBOOTADDR	0xF8000l	\/* Addr of 80186 Boot /
IBOX_ERR	../vax/ka860.c	/^#define	IBOX_ERR	0x2000		\/* Ibox error *\/$/
ICCS	../vax/mtpr.h	/^#define	ICCS	0x18		\/* interval clock control *\/$/
ICCS_ERR	../vax/clock.h	/^#define	ICCS_ERR	0x80000000$/
ICCS_IE	../vax/clock.h	/^#define	ICCS_IE		0x00000040$/
ICCS_INT	../vax/clock.h	/^#define	ICCS_INT	0x00000080$/
ICCS_RUN	../vax/clock.h	/^#define	ICCS_RUN	0x00000001$/
ICCS_SS	../vax/clock.h	/^#define	ICCS_SS		0x00000020$/
ICCS_TRANS	../vax/clock.h	/^#define	ICCS_TRANS	0x00000010$/
ICHG	../h/inode.h	/^#define	ICHG		0x40		\/* inode has been changed *\//
ICMP_ADVLEN	../netinet/ip_icmp.h	/^#define	ICMP_ADVLEN(p)	(8 + ((p)->icmp_ip.ip_hl <</
ICMP_ADVLENMIN	../netinet/ip_icmp.h	/^#define	ICMP_ADVLENMIN	(8 + sizeof (struct ip) + 8/
ICMP_ECHO	../netinet/ip_icmp.h	/^#define	ICMP_ECHO		8		\/* echo service *\/$/
ICMP_ECHOREPLY	../netinet/ip_icmp.h	/^#define	ICMP_ECHOREPLY		0		\/* echo reply *\/$/
ICMP_INFOTYPE	../netinet/ip_icmp.h	/^#define	ICMP_INFOTYPE(type) \\$/
ICMP_IREQ	../netinet/ip_icmp.h	/^#define	ICMP_IREQ		15		\/* information request *\//
ICMP_IREQREPLY	../netinet/ip_icmp.h	/^#define	ICMP_IREQREPLY		16		\/* information reply /
ICMP_MASKLEN	../netinet/ip_icmp.h	/^#define	ICMP_MASKLEN	12				\/* address mask *\/$/
ICMP_MASKREPLY	../netinet/ip_icmp.h	/^#define	ICMP_MASKREPLY		18		\/* address mask reply/
ICMP_MASKREQ	../netinet/ip_icmp.h	/^#define	ICMP_MASKREQ		17		\/* address mask request/
ICMP_MAXTYPE	../netinet/ip_icmp.h	/^#define	ICMP_MAXTYPE		18$/
ICMP_MINLEN	../netinet/ip_icmp.h	/^#define	ICMP_MINLEN	8				\/* abs minimum *\/$/
ICMP_PARAMPROB	../netinet/ip_icmp.h	/^#define	ICMP_PARAMPROB		12		\/* ip header bad *\/$/
ICMP_REDIRECT	../netinet/ip_icmp.h	/^#define	ICMP_REDIRECT		5		\/* shorter route, codes/
ICMP_REDIRECT_HOST	../netinet/ip_icmp.h	/^#define		ICMP_REDIRECT_HOST	1		\/* for host *\/$/
ICMP_REDIRECT_NET	../netinet/ip_icmp.h	/^#define		ICMP_REDIRECT_NET	0		\/* for network *\/$/
ICMP_REDIRECT_TOSHOST	../netinet/ip_icmp.h	/^#define		ICMP_REDIRECT_TOSHOST	3		\/* for tos and /
ICMP_REDIRECT_TOSNET	../netinet/ip_icmp.h	/^#define		ICMP_REDIRECT_TOSNET	2		\/* for tos and n/
ICMP_SOURCEQUENCH	../netinet/ip_icmp.h	/^#define	ICMP_SOURCEQUENCH	4		\/* packet lost, slow/
ICMP_TIMXCEED	../netinet/ip_icmp.h	/^#define	ICMP_TIMXCEED		11		\/* time exceeded, code/
ICMP_TIMXCEED_INTRANS	../netinet/ip_icmp.h	/^#define		ICMP_TIMXCEED_INTRANS	0		\/* ttl==0 in tr/
ICMP_TIMXCEED_REASS	../netinet/ip_icmp.h	/^#define		ICMP_TIMXCEED_REASS	1		\/* ttl==0 in reas/
ICMP_TSLEN	../netinet/ip_icmp.h	/^#define	ICMP_TSLEN	(8 + 3 * sizeof (n_time))	\/* t/
ICMP_TSTAMP	../netinet/ip_icmp.h	/^#define	ICMP_TSTAMP		13		\/* timestamp request *\//
ICMP_TSTAMPREPLY	../netinet/ip_icmp.h	/^#define	ICMP_TSTAMPREPLY	14		\/* timestamp reply */
ICMP_UNREACH	../netinet/ip_icmp.h	/^#define	ICMP_UNREACH		3		\/* dest unreachable, cod/
ICMP_UNREACH_HOST	../netinet/ip_icmp.h	/^#define		ICMP_UNREACH_HOST	1		\/* bad host *\/$/
ICMP_UNREACH_NEEDFRAG	../netinet/ip_icmp.h	/^#define		ICMP_UNREACH_NEEDFRAG	4		\/* IP_DF caused/
ICMP_UNREACH_NET	../netinet/ip_icmp.h	/^#define		ICMP_UNREACH_NET	0		\/* bad net *\/$/
ICMP_UNREACH_PORT	../netinet/ip_icmp.h	/^#define		ICMP_UNREACH_PORT	3		\/* bad port *\/$/
ICMP_UNREACH_PROTOCOL	../netinet/ip_icmp.h	/^#define		ICMP_UNREACH_PROTOCOL	2		\/* bad protocol/
ICMP_UNREACH_SRCFAIL	../netinet/ip_icmp.h	/^#define		ICMP_UNREACH_SRCFAIL	5		\/* src route fai/
ICPAVAIL	../vaxuba/npreg.h	/^#define ICPAVAIL	0x01 	\/* ICP is waiting for a re/
ICPDUMP	../vaxuba/npreg.h	/^#define ICPDUMP  0x03$/
ICPLOAD	../vaxuba/npreg.h	/^#define ICPLOAD  0x02$/
ICPPANIC	../vaxuba/npreg.h	/^#define ICPPANIC 0x05$/
ICPPOLL	../vaxuba/npreg.h	/^#define ICPPOLL  0x10$/
ICR	../vax/mtpr.h	/^#define	ICR	0x1a		\/* interval count *\/$/
IDCCSR_BITS	../vaxuba/idcreg.h	/^#define	IDCCSR_BITS \\$/
IDCDS_BH	../vaxuba/idcreg.h	/^#define	IDCDS_BH	0000010		\/* brush home *\/$/
IDCDS_CO	../vaxuba/idcreg.h	/^#define	IDCDS_CO	0000040		\/* cover open *\/$/
IDCDS_DRDY	../vaxuba/idcreg.h	/^#define	IDCDS_DRDY	0010000		\/* driver ready *\/$/
IDCDS_DSE	../vaxuba/idcreg.h	/^#define	IDCDS_DSE	0000400		\/* drive select error /
IDCDS_FLT	../vaxuba/idcreg.h	/^#define	IDCDS_FLT	0000400		\/* fault *\/$/
IDCDS_HCE	../vaxuba/idcreg.h	/^#define	IDCDS_HCE	0040000		\/* head current error /
IDCDS_HO	../vaxuba/idcreg.h	/^#define	IDCDS_HO	0000020		\/* heads out *\/$/
IDCDS_HS	../vaxuba/idcreg.h	/^#define	IDCDS_HS	0000100		\/* head select *\/$/
IDCDS_ONCY	../vaxuba/idcreg.h	/^#define	IDCDS_ONCY	0004000		\/* on cylinder *\/$/
IDCDS_PLGV	../vaxuba/idcreg.h	/^#define	IDCDS_PLGV	0001000		\/* plug valid *\/$/
IDCDS_SKE	../vaxuba/idcreg.h	/^#define	IDCDS_SKE	0002000		\/* seek error *\/$/
IDCDS_SKTO	../vaxuba/idcreg.h	/^#define	IDCDS_SKTO	0010000		\/* seek timeout *\/$/
IDCDS_SPD	../vaxuba/idcreg.h	/^#define	IDCDS_SPD	0004000		\/* spindle error *\/$/
IDCDS_STATE	../vaxuba/idcreg.h	/^#define	IDCDS_STATE	0000007		\/* drive state *\/$/
IDCDS_VC	../vaxuba/idcreg.h	/^#define	IDCDS_VC	0001000		\/* volume check *\/$/
IDCDS_WDE	../vaxuba/idcreg.h	/^#define	IDCDS_WDE	0100000		\/* write data error */
IDCDS_WGE	../vaxuba/idcreg.h	/^#define	IDCDS_WGE	0002000		\/* write gate error */
IDCDS_WL	../vaxuba/idcreg.h	/^#define	IDCDS_WL	0020000		\/* write lock *\/$/
IDCDS_WTP	../vaxuba/idcreg.h	/^#define	IDCDS_WTP	0020000		\/* write protect *\/$/
IDCGS_GETSTAT	../vaxuba/idcreg.h	/^#define	IDCGS_GETSTAT	(IDCGS_RST|IDCGS_GS|IDCGS_M)/
IDCGS_GS	../vaxuba/idcreg.h	/^#define	IDCGS_GS	002		\/* get status, must be 1 */
IDCGS_M	../vaxuba/idcreg.h	/^#define	IDCGS_M		001		\/* mark, must be 1 *\/$/
IDCGS_RST	../vaxuba/idcreg.h	/^#define	IDCGS_RST	010		\/* reset *\/$/
IDCRB02DS_BITS	../vaxuba/idcreg.h	/^#define	IDCRB02DS_BITS \\$/
IDCRB80DS_BITS	../vaxuba/idcreg.h	/^#define	IDCRB80DS_BITS \\$/
IDC_ASSI	../vaxuba/idcreg.h	/^#define	IDC_ASSI	0x08000000	\/* automatic skip sec/
IDC_ATTN	../vaxuba/idcreg.h	/^#define	IDC_ATTN	0x000f0000	\/* attention bits *\//
IDC_CRDY	../vaxuba/idcreg.h	/^#define	IDC_CRDY	0x00000080	\/* controller ready */
IDC_DCK	../vaxuba/idcreg.h	/^#define	IDC_DCK		0x00000800	\/* data check *\/$/
IDC_DE	../vaxuba/idcreg.h	/^#define	IDC_DE		0x00004000	\/* drive error *\/$/
IDC_DLT	../vaxuba/idcreg.h	/^#define	IDC_DLT		0x00001000	\/* data late *\/$/
IDC_DRDY	../vaxuba/idcreg.h	/^#define	IDC_DRDY	0x00000001	\/* drive ready *\/$/
IDC_DS	../vaxuba/idcreg.h	/^#define	IDC_DS		0x00000300	\/* drive select bits */
IDC_ECS	../vaxuba/idcreg.h	/^#define	IDC_ECS		0x00300000	\/* R80 ecc status *\//
IDC_ECS_HARD	../vaxuba/idcreg.h	/^#define	IDC_ECS_HARD	0x00200000	\/*   hard ecc err/
IDC_ECS_NONE	../vaxuba/idcreg.h	/^#define	IDC_ECS_NONE	0x00000000	\/*   no data erro/
IDC_ECS_SOFT	../vaxuba/idcreg.h	/^#define	IDC_ECS_SOFT	0x00300000	\/*   soft ecc err/
IDC_ERR	../vaxuba/idcreg.h	/^#define	IDC_ERR		0x00008000	\/* composite error */
IDC_FUNC	../vaxuba/idcreg.h	/^#define	IDC_FUNC	0x0000000e	\/* function code *\/$/
IDC_GETSTAT	../vaxuba/idcreg.h	/^#define	IDC_GETSTAT	004		\/* get status *\/$/
IDC_HARD	../vaxuba/idcreg.h	/^#define	IDC_HARD	(IDC_NXM|IDC_DE)$/
IDC_HNF	../vaxuba/idcreg.h	/^#define	IDC_HNF		IDC_DLT		\/* header not found *\//
IDC_IE	../vaxuba/idcreg.h	/^#define	IDC_IE		0x00000040	\/* interrupt enable */
IDC_IR	../vaxuba/idcreg.h	/^#define	IDC_IR		0x01000000	\/* interrupt request */
IDC_MTN	../vaxuba/idcreg.h	/^#define	IDC_MTN		0x02000000	\/* maintenance *\/$/
IDC_NOP	../vaxuba/idcreg.h	/^#define	IDC_NOP		000		\/* no operation *\/$/
IDC_NXM	../vaxuba/idcreg.h	/^#define	IDC_NXM		0x00002000	\/* non-existant memor/
IDC_OPI	../vaxuba/idcreg.h	/^#define	IDC_OPI		0x00000400	\/* operation incomple/
IDC_R80	../vaxuba/idcreg.h	/^#define	IDC_R80		0x04000000	\/* selected disk is R/
IDC_READ	../vaxuba/idcreg.h	/^#define	IDC_READ	014		\/* read data *\/$/
IDC_RHDR	../vaxuba/idcreg.h	/^#define	IDC_RHDR	010		\/* read header *\/$/
IDC_RNOHCHK	../vaxuba/idcreg.h	/^#define	IDC_RNOHCHK	016		\/* read data w\/o header/
IDC_SEEK	../vaxuba/idcreg.h	/^#define	IDC_SEEK	006		\/* seek *\/$/
IDC_SSE	../vaxuba/idcreg.h	/^#define	IDC_SSE		0x00800000	\/* R80 skip sector er/
IDC_SSEI	../vaxuba/idcreg.h	/^#define	IDC_SSEI	0x00400000	\/* R80 skip sector er/
IDC_TOI	../vaxuba/idcreg.h	/^#define	IDC_TOI		0x10000000	\/* time out inhibit */
IDC_WCHK	../vaxuba/idcreg.h	/^#define	IDC_WCHK	002		\/* write check data *\/$/
IDC_WRITE	../vaxuba/idcreg.h	/^#define	IDC_WRITE	012		\/* write data *\/$/
IDLE	../vaxif/if_hy.h	/^#define	IDLE		1	\/* idle state *\/$/
IE	../vax/tu.c	/^#define	IE	0100		\/* interrupt enable *\/$/
IENABLE	../vaxuba/dn.c	/^#define	IENABLE	0x040		\/* interrupt enable *\/$/
IEXEC	../h/inode.h	/^#define	IEXEC		0100$/
IEXLOCK	../h/inode.h	/^#define	IEXLOCK		0x100		\/* file has exclusive loc/
IFA_ROUTE	../netinet/in_var.h	/^#define	IFA_ROUTE	0x01		\/* routing entry installe/
IFBLK	../h/inode.h	/^#define	IFBLK		0060000		\/* block special *\/$/
IFCHR	../h/inode.h	/^#define	IFCHR		0020000		\/* character special *\/$/
IFDIR	../h/inode.h	/^#define	IFDIR		0040000		\/* directory *\/$/
IFF_ALLMULTI	../net/if.h	/^#define	IFF_ALLMULTI	0x200		\/* receive all multic/
IFF_BROADCAST	../net/if.h	/^#define	IFF_BROADCAST	0x2		\/* broadcast address v/
IFF_CANTCHANGE	../net/if.h	/^#define	IFF_CANTCHANGE	(IFF_BROADCAST | IFF_POINTO/
IFF_DEBUG	../net/if.h	/^#define	IFF_DEBUG	0x4		\/* turn on debugging *\/$/
IFF_LOOPBACK	../net/if.h	/^#define	IFF_LOOPBACK	0x8		\/* is a loopback net */
IFF_NOARP	../net/if.h	/^#define	IFF_NOARP	0x80		\/* no address resolution /
IFF_NOTRAILERS	../net/if.h	/^#define	IFF_NOTRAILERS	0x20		\/* avoid use of trai/
IFF_POINTOPOINT	../net/if.h	/^#define	IFF_POINTOPOINT	0x10		\/* interface is poi/
IFF_PROMISC	../net/if.h	/^#define	IFF_PROMISC	0x100		\/* receive all packets/
IFF_RUNNING	../net/if.h	/^#define	IFF_RUNNING	0x40		\/* resources allocated /
IFF_UP	../net/if.h	/^#define	IFF_UP		0x1		\/* interface is up *\/$/
IFLAGS	../vaxuba/dh.c	/^#define	IFLAGS	(EVENP|ODDP|ECHO)$/
IFLNK	../h/inode.h	/^#define	IFLNK		0120000		\/* symbolic link *\/$/
IFMT	../h/inode.h	/^#define	IFMT		0170000		\/* type of file *\/$/
IFNAMSIZ	../net/if.h	/^#define	IFNAMSIZ	16$/
IFNET_SLOWHZ	../net/if.h	/^#define	IFNET_SLOWHZ	1		\/* granularity is 1 secon/
IFQ_MAXLEN	../net/if.h	/^#define	IFQ_MAXLEN	50$/
IFREG	../h/inode.h	/^#define	IFREG		0100000		\/* regular *\/$/
IFRW_W	../vaxif/if_uba.h	/^#define	IFRW_W	0x01				\/* is a transmit buffer */
IFSOCK	../h/inode.h	/^#define	IFSOCK		0140000		\/* socket *\/$/
IF_ADJ	../net/if.h	/^#define	IF_ADJ(m) { \\$/
IF_DEQUEUE	../net/if.h	/^#define	IF_DEQUEUE(ifq, m) { \\$/
IF_DEQUEUEIF	../net/if.h	/^#define	IF_DEQUEUEIF(ifq, m, ifp) { \\$/
IF_DROP	../net/if.h	/^#define	IF_DROP(ifq)		((ifq)->ifq_drops++)$/
IF_ENQUEUE	../net/if.h	/^#define	IF_ENQUEUE(ifq, m) { \\$/
IF_MAXNUBAMR	../vaxif/if_uba.h	/^#define	IF_MAXNUBAMR	10$/
IF_PREPEND	../net/if.h	/^#define	IF_PREPEND(ifq, m) { \\$/
IF_QFULL	../net/if.h	/^#define	IF_QFULL(ifq)		((ifq)->ifq_len >= (ifq)->i/
IIE	../vaxuba/lpa.c	/^#define IIE	0000100		\/* in interrupt enable *\/$/
IKBUSY	../vaxuba/ik.c	/^#define IKBUSY 01$/
IKDMAPRI	../vaxuba/ik.c	/^#define IKDMAPRI (PZERO-1)$/
IKIOGETADDR	../vaxuba/ikreg.h	/^#define	IKIOGETADDR	_IOR('i', 0, caddr_t)	\/* get /
IKIOWAITINT	../vaxuba/ikreg.h	/^#define	IKIOWAITINT	_IO('i', 1)		\/* await device /
IKUNIT	../vaxuba/ik.c	/^#define IKUNIT(dev) (minor(dev))$/
IKWAITPRI	../vaxuba/ik.c	/^#define IKWAITPRI (PZERO+1)$/
IK_GETADDR	../vaxuba/ikreg.h	/^#define IK_GETADDR 	IKIOGETADDR$/
IK_GO	../vaxuba/ikreg.h	/^#define IK_GO		01$/
IK_IENABLE	../vaxuba/ikreg.h	/^#define IK_IENABLE	0100$/
IK_IKONAS_INTR	../vaxuba/ikreg.h	/^#define IK_IKONAS_INTR	0100000$/
IK_READY	../vaxuba/ikreg.h	/^#define IK_READY	0200$/
IK_WAITINT	../vaxuba/ikreg.h	/^#define IK_WAITINT 	IKIOWAITINT$/
ILC_ALLMC	../vaxif/if_ilreg.h	/^#define	ILC_ALLMC	0x1000		\/* Set Receive All Mult/
ILC_CALLMC	../vaxif/if_ilreg.h	/^#define	ILC_CALLMC	0x1100		\/* Clear Receive All M/
ILC_CISA	../vaxif/if_ilreg.h	/^#define	ILC_CISA	0x0e00		\/* Clear Insert Source A/
ILC_CLPBAK	../vaxif/if_ilreg.h	/^#define	ILC_CLPBAK	0x0300		\/* Clear Loopback Mode/
ILC_CLPRMSC	../vaxif/if_ilreg.h	/^#define	ILC_CLPRMSC	0x0500		\/* Clear Promiscuous /
ILC_CRCVERR	../vaxif/if_ilreg.h	/^#define	ILC_CRCVERR	0x0700		\/* Clear Receive-On-E/
ILC_DEFPA	../vaxif/if_ilreg.h	/^#define	ILC_DEFPA	0x0f00		\/* Set Physical Address/
ILC_DELAYS	../vaxif/if_ilreg.h	/^#define	ILC_DELAYS	0x1900		\/* Report Collision De/
ILC_DIAG	../vaxif/if_ilreg.h	/^#define	ILC_DIAG	0x0a00		\/* Run On-board Diagnost/
ILC_FLUSH	../vaxif/if_ilreg.h	/^#define	ILC_FLUSH	0x3000		\/* Flush Receive BAR\/B/
ILC_ILPBAK	../vaxif/if_ilreg.h	/^#define	ILC_ILPBAK	0x0200		\/* Set Internal Loopba/
ILC_ISA	../vaxif/if_ilreg.h	/^#define	ILC_ISA		0x0d00		\/* Set Insert Source Add/
ILC_LDGRPS	../vaxif/if_ilreg.h	/^#define	ILC_LDGRPS	0x2a00		\/* Load Group Addresse/
ILC_LDPA	../vaxif/if_ilreg.h	/^#define	ILC_LDPA	0x2c00		\/* Load Physical Address/
ILC_LDXMIT	../vaxif/if_ilreg.h	/^#define	ILC_LDXMIT	0x2800		\/* Load Transmit Data /
ILC_MLPBAK	../vaxif/if_ilreg.h	/^#define	ILC_MLPBAK	0x0100		\/* Set Module Interfac/
ILC_OFFLINE	../vaxif/if_ilreg.h	/^#define	ILC_OFFLINE	0x0800		\/* Go Offline *\/$/
ILC_ONLINE	../vaxif/if_ilreg.h	/^#define	ILC_ONLINE	0x0900		\/* Go Online *\/$/
ILC_PRMSC	../vaxif/if_ilreg.h	/^#define	ILC_PRMSC	0x0400		\/* Set Promiscuous Rece/
ILC_RCV	../vaxif/if_ilreg.h	/^#define	ILC_RCV		0x2000		\/* Supply Receive Buffer/
ILC_RCVERR	../vaxif/if_ilreg.h	/^#define	ILC_RCVERR	0x0600		\/* Set Receive-On-Erro/
ILC_RESET	../vaxif/if_ilreg.h	/^#define	ILC_RESET	0x3f00		\/* Reset *\/$/
ILC_RMGRPS	../vaxif/if_ilreg.h	/^#define	ILC_RMGRPS	0x2b00		\/* Delete Group Addres/
ILC_STAT	../vaxif/if_ilreg.h	/^#define	ILC_STAT	0x1800		\/* Report and Reset Stat/
ILC_XMIT	../vaxif/if_ilreg.h	/^#define	ILC_XMIT	0x2900		\/* Load Transmit Data an/
ILDIAG_CHKSUMERR	../vaxif/if_ilreg.h	/^#define	ILDIAG_CHKSUMERR	1	\/* ROM\/RAM checksum e/
ILDIAG_DMAERR	../vaxif/if_ilreg.h	/^#define	ILDIAG_DMAERR		2	\/* DMA not working *\/$/
ILDIAG_LOOPBACK	../vaxif/if_ilreg.h	/^#define	ILDIAG_LOOPBACK		5	\/* loopback test faile/
ILDIAG_RECVERR	../vaxif/if_ilreg.h	/^#define	ILDIAG_RECVERR		4	\/* rcvr circuitry failu/
ILDIAG_SUCCESS	../vaxif/if_ilreg.h	/^#define	ILDIAG_SUCCESS		0	\/* no problems *\/$/
ILDIAG_XMITERR	../vaxif/if_ilreg.h	/^#define	ILDIAG_XMITERR		3	\/* xmit circuitry failu/
ILERR_BADCMD	../vaxif/if_ilreg.h	/^#define	ILERR_BADCMD		2	\/* illegal command *\/$/
ILERR_BUFALIGNMENT	../vaxif/if_ilreg.h	/^#define	ILERR_BUFALIGNMENT	10	\/* buffer not word /
ILERR_BUFSIZ	../vaxif/if_ilreg.h	/^#define	ILERR_BUFSIZ		5	\/* buffer size too big */
ILERR_COLLISIONS	../vaxif/if_ilreg.h	/^#define	ILERR_COLLISIONS	8	\/* excessive collision/
ILERR_FRAMESIZ	../vaxif/if_ilreg.h	/^#define	ILERR_FRAMESIZ		6	\/* frame size too small/
ILERR_INVCMD	../vaxif/if_ilreg.h	/^#define	ILERR_INVCMD		3	\/* invalid command *\/$/
ILERR_NXM	../vaxif/if_ilreg.h	/^#define	ILERR_NXM		15	\/* non-existent memory *\/$/
ILERR_RECVERR	../vaxif/if_ilreg.h	/^#define	ILERR_RECVERR		4	\/* receiver error *\/$/
ILERR_RETRIES	../vaxif/if_ilreg.h	/^#define	ILERR_RETRIES		1	\/* " " with retries *\/$/
ILERR_SUCCESS	../vaxif/if_ilreg.h	/^#define	ILERR_SUCCESS		0	\/* command successful */
ILFSTAT_A	../vaxif/if_ilreg.h	/^#define	ILFSTAT_A	0x2		\/* alignment error *\/$/
ILFSTAT_C	../vaxif/if_ilreg.h	/^#define	ILFSTAT_C	0x1		\/* CRC error *\/$/
ILFSTAT_L	../vaxif/if_ilreg.h	/^#define	ILFSTAT_L	0x4		\/* 1+ frames lost just bef/
ILF_OACTIVE	../vaxif/if_il.c	/^#define	ILF_OACTIVE	0x1		\/* output is active *\/$/
ILF_RCVPENDING	../vaxif/if_il.c	/^#define	ILF_RCVPENDING	0x2		\/* start rcv in ilcin/
ILF_RUNNING	../vaxif/if_il.c	/^#define	ILF_RUNNING	0x8		\/* board is running *\/$/
ILF_SETADDR	../vaxif/if_il.c	/^#define	ILF_SETADDR	0x10		\/* physical address is /
ILF_STATPENDING	../vaxif/if_il.c	/^#define	ILF_STATPENDING	0x4		\/* stat cmd pending /
ILL_PRIVIN_FAULT	../vax/trap.h	/^#define	    ILL_PRIVIN_FAULT	T_PRIVINFLT$/
ILL_RESAD_FAULT	../vax/trap.h	/^#define	    ILL_RESAD_FAULT	T_RESADFLT$/
ILL_RESOP_FAULT	../vax/trap.h	/^#define	    ILL_RESOP_FAULT	T_RESOPFLT$/
ILOCK	../h/inode.h	/^#define	ILOCK(ip) { \\$/
ILOCKED	../h/inode.h	/^#define	ILOCKED		0x1		\/* inode is locked *\/$/
ILUNIT	../vaxif/if_il.c	/^#define	ILUNIT(x)	minor(x)$/
ILWAIT	../h/inode.h	/^#define	ILWAIT		0x200		\/* someone waiting on file/
ILWATCHINTERVAL	../vaxif/if_il.c	/^#define	ILWATCHINTERVAL	60		\/* once every 60 seco/
IL_BITS	../vaxif/if_ilreg.h	/^#define	IL_BITS		"\\20\\10CDONE\\7CIE\\6RDONE\\5RI/
IL_CDONE	../vaxif/if_ilreg.h	/^#define	IL_CDONE	0x0080		\/* Command Done *\/$/
IL_CIE	../vaxif/if_ilreg.h	/^#define	IL_CIE		0x0040		\/* Command Interrupt Enab/
IL_CMD	../vaxif/if_ilreg.h	/^#define	IL_CMD		0x3f00		\/* Command Function Code /
IL_EUA	../vaxif/if_ilreg.h	/^#define	IL_EUA		0xc000		\/* Extended Unibus Addres/
IL_RDONE	../vaxif/if_ilreg.h	/^#define	IL_RDONE	0x0020		\/* Receive DMA Done *\/$/
IL_RIE	../vaxif/if_ilreg.h	/^#define	IL_RIE		0x0010		\/* Receive Interrupt Enab/
IL_STATUS	../vaxif/if_ilreg.h	/^#define	IL_STATUS	0x000f		\/* Command Status Code /
IMOD	../h/inode.h	/^#define	IMOD		0x400		\/* inode has been modified */
IMOUNT	../h/inode.h	/^#define	IMOUNT		0x8		\/* inode is mounted on *\/$/
IMPCOMPLETE_FAILURE	../netimp/if_imp.h	/^#define	IMPCOMPLETE_FAILURE	3	\/* IMP\/circuit fai/
IMPCOMPLETE_IMPIO	../netimp/if_imp.h	/^#define	IMPCOMPLETE_IMPIO	5	\/* src IMP I\/O failu/
IMPCOMPLETE_NOSPACE	../netimp/if_imp.h	/^#define	IMPCOMPLETE_NOSPACE	4	\/* no resources wit/
IMPCOMPLETE_SLOW	../netimp/if_imp.h	/^#define	IMPCOMPLETE_SLOW	0	\/* host didn't take da/
IMPCOMPLETE_TIMEOUT	../netimp/if_imp.h	/^#define	IMPCOMPLETE_TIMEOUT	2	\/* mesg transmissio/
IMPCOMPLETE_TOOLONG	../netimp/if_imp.h	/^#define	IMPCOMPLETE_TOOLONG	1	\/* message was too /
IMPDOWN_GOING	../netimp/if_imp.h	/^#define	IMPDOWN_GOING		0	\/* 30 secs *\/$/
IMPDOWN_PM	../netimp/if_imp.h	/^#define	IMPDOWN_PM		1	\/* hardware PM *\/$/
IMPDOWN_RELOAD	../netimp/if_imp.h	/^#define	IMPDOWN_RELOAD		2	\/* software reload *\/$/
IMPDOWN_RESTART	../netimp/if_imp.h	/^#define	IMPDOWN_RESTART		3	\/* emergency restart */
IMPDOWN_WHENMASK	../netimp/if_imp.h	/^#define	IMPDOWN_WHENMASK	0x3c	\/* mask for "how so/
IMPDOWN_WHENSHIFT	../netimp/if_imp.h	/^#define	IMPDOWN_WHENSHIFT	2	\/* shift for "how soo/
IMPDOWN_WHENUNIT	../netimp/if_imp.h	/^#define	IMPDOWN_WHENUNIT	5	\/* unit for "how soon"/
IMPHOST_BREAKPOINT	../netimp/if_imp.h	/^#define	IMPHOST_BREAKPOINT	10	\/* host stopped at /
IMPHOST_COMINGUP	../netimp/if_imp.h	/^#define	IMPHOST_COMINGUP	15	\/* host in process of/
IMPHOST_HARDSCHED	../netimp/if_imp.h	/^#define	IMPHOST_HARDSCHED	6	\/* " " " " hardware w/
IMPHOST_HARDWARE	../netimp/if_imp.h	/^#define	IMPHOST_HARDWARE	11	\/* hardware failure */
IMPHOST_IMPSOFT	../netimp/if_imp.h	/^#define	IMPHOST_IMPSOFT		4	\/* IMP software won't /
IMPHOST_NOEXIST	../netimp/if_imp.h	/^#define	IMPHOST_NOEXIST		3	\/* NCC doesn't know ho/
IMPHOST_NORDY	../netimp/if_imp.h	/^#define	IMPHOST_NORDY		1	\/* ready-line negated */
IMPHOST_NOTUP	../netimp/if_imp.h	/^#define	IMPHOST_NOTUP		12	\/* host not scheduled t/
IMPHOST_PM	../netimp/if_imp.h	/^#define	IMPHOST_PM		5	\/* host down for scheduled /
IMPHOST_POWER	../netimp/if_imp.h	/^#define	IMPHOST_POWER		9	\/* down because of power/
IMPHOST_RESTART	../netimp/if_imp.h	/^#define	IMPHOST_RESTART		8	\/* host down for emerg/
IMPHOST_SOFTSCHED	../netimp/if_imp.h	/^#define	IMPHOST_SOFTSCHED	7	\/* " " " " software w/
IMPHOST_TARDY	../netimp/if_imp.h	/^#define	IMPHOST_TARDY		2	\/* tardy receiving mesgs/
IMPLEADER_ERR	../netimp/if_imp.h	/^#define	IMPLEADER_ERR		0	\/* error flip-flop set */
IMPLEADER_OPPOSITE	../netimp/if_imp.h	/^#define	IMPLEADER_OPPOSITE	3	\/* opposite leader t/
IMPLEADER_SHORT	../netimp/if_imp.h	/^#define	IMPLEADER_SHORT		1	\/* leader < 80 bits */
IMPLEADER_TYPE	../netimp/if_imp.h	/^#define	IMPLEADER_TYPE		2	\/* illegal type field */
IMPLINK_HIGHEXPER	../netinet/in.h	/^#define	IMPLINK_HIGHEXPER	158$/
IMPLINK_IP	../netinet/in.h	/^#define	IMPLINK_IP		155$/
IMPLINK_LOWEXPER	../netinet/in.h	/^#define	IMPLINK_LOWEXPER	156$/
IMPMESSAGES	../netimp/if_imp.c	/^#define IMPMESSAGES$/
IMPMTU	../netimp/if_imp.h	/^#define	IMPMTU		((8159 \/ NBBY) & ~01)$/
IMPREACH_HOSTUP	../netimp/if_imp.h	/^#define	IMPREACH_HOSTUP		1	\/* destination host is/
IMPREACH_IMP	../netimp/if_imp.h	/^#define	IMPREACH_IMP		0	\/* destination IMP can't /
IMPREACH_LEADER	../netimp/if_imp.h	/^#define	IMPREACH_LEADER		2	\/* host doesn't suppor/
IMPREACH_PROHIBITED	../netimp/if_imp.h	/^#define	IMPREACH_PROHIBITED	3	\/* communication is/
IMPRETRY_BLOCK	../netimp/if_imp.h	/^#define	IMPRETRY_BLOCK		1	\/* connection block una/
IMPRETRY_BUFFER	../netimp/if_imp.h	/^#define	IMPRETRY_BUFFER		0	\/* IMP buffer wasn't a/
IMPS_DOWN	../netimp/if_imp.h	/^#define	IMPS_DOWN	0		\/* unavailable, host not rea/
IMPS_GOINGDOWN	../netimp/if_imp.h	/^#define	IMPS_GOINGDOWN	4		\/* been told we go down/
IMPS_IMPREADY	../netimp/if_imp.h	/^#define	IMPS_IMPREADY(s) ((s) >= IMPS_INIT)	\/* IM/
IMPS_INIT	../netimp/if_imp.h	/^#define	IMPS_INIT	2		\/* coming up *\/$/
IMPS_RUNNING	../netimp/if_imp.h	/^#define	IMPS_RUNNING(s)	((s) >= IMPS_UP)	\/* ready/
IMPS_UP	../netimp/if_imp.h	/^#define	IMPS_UP		3		\/* ready to go *\/$/
IMPS_WINIT	../netimp/if_imp.h	/^#define	IMPS_WINIT	1		\/* imp not ready, waiting f/
IMPTV_DOWN	../netimp/if_imp.h	/^#define	IMPTV_DOWN	30		\/* going down timer 30 sec/
IMPTYPE_BADDATA	../netimp/if_imp.h	/^#define	IMPTYPE_BADDATA		8	\/* data error *\/$/
IMPTYPE_BADLEADER	../netimp/if_imp.h	/^#define	IMPTYPE_BADLEADER	1	\/* leader error *\/$/
IMPTYPE_DATA	../netimp/if_imp.h	/^#define	IMPTYPE_DATA		0	\/* data for protocol *\/$/
IMPTYPE_DOWN	../netimp/if_imp.h	/^#define	IMPTYPE_DOWN		2	\/* imp going down *\/$/
IMPTYPE_HOSTDEAD	../netimp/if_imp.h	/^#define	IMPTYPE_HOSTDEAD	6	\/* host doesn't respon/
IMPTYPE_HOSTUNREACH	../netimp/if_imp.h	/^#define	IMPTYPE_HOSTUNREACH	7	\/* host unreachable/
IMPTYPE_INCOMPLETE	../netimp/if_imp.h	/^#define	IMPTYPE_INCOMPLETE	9	\/* incomplete messag/
IMPTYPE_NOOP	../netimp/if_imp.h	/^#define	IMPTYPE_NOOP		4	\/* noop seen during initi/
IMPTYPE_NOTIFY	../netimp/if_imp.h	/^#define	IMPTYPE_NOTIFY		12	\/* IMP refused, will n/
IMPTYPE_READY	../netimp/if_imp.h	/^#define	IMPTYPE_READY		14	\/* ready for next messa/
IMPTYPE_RESET	../netimp/if_imp.h	/^#define	IMPTYPE_RESET		10	\/* reset complete *\/$/
IMPTYPE_RETRY	../netimp/if_imp.h	/^#define	IMPTYPE_RETRY		11	\/* IMP refused, try aga/
IMPTYPE_RFNM	../netimp/if_imp.h	/^#define	IMPTYPE_RFNM		5	\/* request for new messag/
IMPTYPE_TRYING	../netimp/if_imp.h	/^#define	IMPTYPE_TRYING		13	\/* IMP refused, still /
IMP_1822L_H2I	../netimp/if_imp.h	/^#define	IMP_1822L_H2I	0xd	\/* 1822L host-to-imp, 9/
IMP_1822L_I2H	../netimp/if_imp.h	/^#define	IMP_1822L_I2H	0xe	\/* 1822L imp-to-host, 9/
IMP_DMASK	../netimp/if_imp.h	/^#define	IMP_DMASK		0x3	\/* host going down mask */
IMP_MAXHOSTMSG	../netimp/if_imp.h	/^#define	IMP_MAXHOSTMSG	8	\/* max messages in fligh/
IMP_NFF	../netimp/if_imp.h	/^#define	IMP_NFF		0xf	\/* 96-bit (new) format *\/$/
IMP_NOOPCNT	../netimp/if_imp.h	/^#define	IMP_NOOPCNT	3	\/* # of noops to send imp o/
IMP_OTIMER	../netimp/if_imp.h	/^#define	IMP_OTIMER	(5*IFNET_SLOWHZ) \/* max output/
IMP_RCVBUF	../netimp/if_imp.h	/^#define	IMP_RCVBUF	((8159 \/ NBBY + 2) & ~01)$/
IMP_TRACE	../netimp/if_imp.h	/^#define	IMP_TRACE	0x8	\/* trace message route *\/$/
INADDR_ANY	../netinet/in.h	/^#define	INADDR_ANY		(u_long)0x00000000$/
INADDR_BROADCAST	../netinet/in.h	/^#define	INADDR_BROADCAST	(u_long)0xffffffff	\/* mu/
INADDR_NONE	../netinet/in.h	/^#define	INADDR_NONE		0xffffffff		\/* -1 return *\//
INCORE_BASE	../vaxif/if_de.c	/^#define	INCORE_BASE(p)	((char *)&(p)->ds_pcbb)$/
INCORE_SIZE	../vaxif/if_de.c	/^#define	INCORE_SIZE	RVAL_OFF(ds_xindex)$/
INETBOOT	../vaxuba/npreg.h	/^#define	INETBOOT	0xF8087l$/
INF	../vaxmba/ht.c	/^#define	INF	(daddr_t)1000000L	\/* a block number t/
INFINITY	../h/vlimit.h	/^#define	INFINITY	0x7fffffff$/
INIT	../vaxuba/lpa.c	/^#define INIT	0		\/* mode *\/$/
INITMEM	../vaxuba/psreg.h	/^#define INITMEM		01$/
INIT_DELAY	../vaxif/if_ddn.c	/^#define INIT_DELAY	(100 * 2)	\/* time for board in/
INKERNEL	../vax/kdbparam.h	/^#define	INKERNEL(x)	(((x)&0xf0000000) == 0x8000000/
INOHASH	../sys/ufs_inode.c	/^#define	INOHASH(dev,ino)	(((dev)+(ino))&(INOHSZ-1)/
INOHSZ	../sys/ufs_inode.c	/^#define	INOHSZ	512$/
INOPB	../h/fs.h	/^#define	INOPB(fs)	((fs)->fs_inopb)$/
INOPF	../h/fs.h	/^#define	INOPF(fs)	((fs)->fs_inopb >> (fs)->fs_frag/
INPLOOKUP_SETLOCAL	../netinet/in_pcb.h	/^#define	INPLOOKUP_SETLOCAL	2$/
INPLOOKUP_WILDCARD	../netinet/in_pcb.h	/^#define	INPLOOKUP_WILDCARD	1$/
INSTACK	../vax/kdbparam.h	/^#define	INSTACK(x)	(((x)&0xf0000000) == 0x70000000/
INTERRUPT	../vaxif/if_ddnvar.h	/^#define INTERRUPT	0x22		\/* X25 interrupt		*\/$/
INTMASK	../vaxuba/npreg.h	/^#define INTMASK		0xFFFFFFFC \/* Used for address v/
INTNI	../vaxuba/npreg.h	/^#define INTNI(x)	(WCSR1(x->iobase,0xFF))$/
INTR_ACK	../vaxif/if_ddnvar.h	/^#define INTR_ACK	0x24		\/* interrupt ack		*\/$/
INT_ENB_A	../vaxuba/ct.c	/^#define	INT_ENB_A	0x40$/
INT_ENB_B	../vaxuba/ct.c	/^#define	INT_ENB_B	0x20$/
INT_MAX	../vax/machparam.h	/^#define	INT_MAX		0x7fffffff$/
INT_MIN	../vax/machparam.h	/^#define	INT_MIN		0x80000000$/
INUDOT	../vax/kdbparam.h	/^#define	INUDOT(x)	(((x)&0xf0000000) == 0x70000000)/
INVISIBLE_IO	../vaxuba/ikreg.h	/^#define INVISIBLE_IO	0200$/
IN_BADCLASS	../netinet/in.h	/^#define	IN_BADCLASS(i)		(((long)(i) & 0xf0000000) /
IN_CLASSA	../netinet/in.h	/^#define	IN_CLASSA(i)		(((long)(i) & 0x80000000) ==/
IN_CLASSA_HOST	../netinet/in.h	/^#define	IN_CLASSA_HOST		0x00ffffff$/
IN_CLASSA_MAX	../netinet/in.h	/^#define	IN_CLASSA_MAX		128$/
IN_CLASSA_NET	../netinet/in.h	/^#define	IN_CLASSA_NET		0xff000000$/
IN_CLASSA_NSHIFT	../netinet/in.h	/^#define	IN_CLASSA_NSHIFT	24$/
IN_CLASSB	../netinet/in.h	/^#define	IN_CLASSB(i)		(((long)(i) & 0xc0000000) ==/
IN_CLASSB_HOST	../netinet/in.h	/^#define	IN_CLASSB_HOST		0x0000ffff$/
IN_CLASSB_MAX	../netinet/in.h	/^#define	IN_CLASSB_MAX		65536$/
IN_CLASSB_NET	../netinet/in.h	/^#define	IN_CLASSB_NET		0xffff0000$/
IN_CLASSB_NSHIFT	../netinet/in.h	/^#define	IN_CLASSB_NSHIFT	16$/
IN_CLASSC	../netinet/in.h	/^#define	IN_CLASSC(i)		(((long)(i) & 0xe0000000) ==/
IN_CLASSC_HOST	../netinet/in.h	/^#define	IN_CLASSC_HOST		0x000000ff$/
IN_CLASSC_NET	../netinet/in.h	/^#define	IN_CLASSC_NET		0xffffff00$/
IN_CLASSC_NSHIFT	../netinet/in.h	/^#define	IN_CLASSC_NSHIFT	8$/
IN_CLASSD	../netinet/in.h	/^#define	IN_CLASSD(i)		(((long)(i) & 0xf0000000) ==/
IN_EOM	../vaxif/if_accreg.h	/^#define IN_EOM		0x2000		\/* end-of-message recieve/
IN_EXPERIMENTAL	../netinet/in.h	/^#define	IN_EXPERIMENTAL(i)	(((long)(i) & 0xe000000/
IN_HRDY	../vaxif/if_accreg.h	/^#define IN_HRDY		0x0800		\/* host ready *\/$/
IN_IBF	../vaxif/if_accreg.h	/^#define IN_IBF		0x0100		\/* input data buffer full/
IN_IMPBSY	../vaxif/if_accreg.h	/^#define IN_IMPBSY	0x0400		\/* IMP not ready *\/$/
IN_IMPNR	../vaxif/if_cssreg.h	/^#define IN_IMPNR	0x0400          \/* IMP not ready/
IN_LOOPBACKNET	../netinet/in.h	/^#define	IN_LOOPBACKNET		127			\/* official! *\/$/
IN_MRDY	../vaxif/if_accreg.h	/^#define IN_MRDY		0x0004		\/* master ready *\/$/
IN_MULTICAST	../netinet/in.h	/^#define	IN_MULTICAST(i)		IN_CLASSD(i)$/
IN_RLE	../vaxif/if_cssreg.h	/^#define IN_RLE          0x0200          \/* ready /
IN_RMR	../vaxif/if_accreg.h	/^#define IN_RMR		0x0200		\/* receive master ready e/
IN_WEN	../vaxif/if_accreg.h	/^#define IN_WEN		0x0008		\/* write enable *\/$/
IOA8600	../vax/ioa.h	/^#define	IOA8600(i)	((caddr_t)(0x20080000+IOASIZE*i/
IOABORT	../vaxuba/npreg.h	/^#define IOABORT 0x10		\/* Request aborted by ICP */
IOAMAPSIZ	../vax/ioa.h	/^#define IOAMAPSIZ 	512		\/* Map one page to get at/
IOASIZE	../vax/ioa.h	/^#define IOASIZE		0x2000000$/
IOA_SBIA	../vax/ioa.h	/^#define IOA_SBIA	0x10$/
IOA_TYPMSK	../vax/ioa.h	/^#define IOA_TYPMSK 0xf0$/
IOCNT	../vaxuba/npreg.h	/^#define IOCNT	5$/
IOCPARM_LEN	../h/ioctl.h	/^#define	IOCPARM_LEN(x)	(((x) >> 16) & IOCPARM_MASK/
IOCPARM_MASK	../h/ioctl.h	/^#define	IOCPARM_MASK	0x1fff		\/* parameter length,/
IOCPARM_MAX	../h/ioctl.h	/^#define	IOCPARM_MAX	NBPG		\/* max size of ioctl, m/
IOC_DIRMASK	../h/ioctl.h	/^#define	IOC_DIRMASK	0xe0000000	\/* mask for IN\/OU/
IOC_IN	../h/ioctl.h	/^#define	IOC_IN		0x80000000	\/* copy in parameters /
IOC_INOUT	../h/ioctl.h	/^#define	IOC_INOUT	(IOC_IN|IOC_OUT)$/
IOC_OUT	../h/ioctl.h	/^#define	IOC_OUT		0x40000000	\/* copy out parameter/
IOC_VOID	../h/ioctl.h	/^#define	IOC_VOID	0x20000000	\/* no parameters *\/$/
IOERR	../vaxuba/npreg.h	/^#define IOERR	0x04		\/* Error on Request *\/$/
IOIFC	../vaxuba/npreg.h	/^#define IOIFC   0x02		\/* Internal Function Code R/
IOUT	../vaxuba/psreg.h	/^#define IOUT		0100$/
IO_ABUS	../vax/cpu.h	/^#define IO_ABUS		4$/
IO_BI	../vax/cpu.h	/^#define	IO_BI		6$/
IO_CMI750	../vax/cpu.h	/^#define	IO_CMI750	2$/
IO_QBUS	../vax/cpu.h	/^#define IO_QBUS		5$/
IO_SBI780	../vax/cpu.h	/^#define	IO_SBI780	1$/
IO_XXX730	../vax/cpu.h	/^#define	IO_XXX730	3$/
IPCPRI	../sys/sys_process.c	/^#define	IPCPRI	PZERO$/
IPCREG	../sys/sys_process.c	/^#define IPCREG$/
IPFORWARDING	../netinet/ip_input.c	/^#define	IPFORWARDING	1$/
IPFRAGTTL	../netinet/ip.h	/^#define	IPFRAGTTL	60		\/* time to live for frags, /
IPIR	../vax/mtpr.h	/^#define	IPIR	0x16		\/* interprocessor interrupt re/
IPL	../vax/mtpr.h	/^#define	IPL	0x12		\/* interrupt priority level *\//
IPOPT_CLASS	../netinet/ip.h	/^#define	IPOPT_CLASS(o)		((o)&0x60)$/
IPOPT_CONTROL	../netinet/ip.h	/^#define	IPOPT_CONTROL		0x00$/
IPOPT_COPIED	../netinet/ip.h	/^#define	IPOPT_COPIED(o)		((o)&0x80)$/
IPOPT_DEBMEAS	../netinet/ip.h	/^#define	IPOPT_DEBMEAS		0x40$/
IPOPT_EOL	../netinet/ip.h	/^#define	IPOPT_EOL		0		\/* end of option list *\/$/
IPOPT_LSRR	../netinet/ip.h	/^#define	IPOPT_LSRR		131		\/* loose source route */
IPOPT_MINOFF	../netinet/ip.h	/^#define	IPOPT_MINOFF		4		\/* min value of above */
IPOPT_NOP	../netinet/ip.h	/^#define	IPOPT_NOP		1		\/* no operation *\/$/
IPOPT_NUMBER	../netinet/ip.h	/^#define	IPOPT_NUMBER(o)		((o)&0x1f)$/
IPOPT_OFFSET	../netinet/ip.h	/^#define IPOPT_OFFSET		2		\/* offset within option /
IPOPT_OLEN	../netinet/ip.h	/^#define	IPOPT_OLEN		1		\/* option length *\/$/
IPOPT_OPTVAL	../netinet/ip.h	/^#define	IPOPT_OPTVAL		0		\/* option ID *\/$/
IPOPT_RESERVED1	../netinet/ip.h	/^#define	IPOPT_RESERVED1		0x20$/
IPOPT_RESERVED2	../netinet/ip.h	/^#define	IPOPT_RESERVED2		0x60$/
IPOPT_RR	../netinet/ip.h	/^#define	IPOPT_RR		7		\/* record packet route *\/$/
IPOPT_SATID	../netinet/ip.h	/^#define	IPOPT_SATID		136		\/* satnet id *\/$/
IPOPT_SECURITY	../netinet/ip.h	/^#define	IPOPT_SECURITY		130		\/* provide s,c,h,tcc/
IPOPT_SECUR_CONFID	../netinet/ip.h	/^#define	IPOPT_SECUR_CONFID	0xf135$/
IPOPT_SECUR_EFTO	../netinet/ip.h	/^#define	IPOPT_SECUR_EFTO	0x789a$/
IPOPT_SECUR_MMMM	../netinet/ip.h	/^#define	IPOPT_SECUR_MMMM	0xbc4d$/
IPOPT_SECUR_RESTR	../netinet/ip.h	/^#define	IPOPT_SECUR_RESTR	0xaf13$/
IPOPT_SECUR_SECRET	../netinet/ip.h	/^#define	IPOPT_SECUR_SECRET	0xd788$/
IPOPT_SECUR_TOPSECRET	../netinet/ip.h	/^#define	IPOPT_SECUR_TOPSECRET	0x6bc5$/
IPOPT_SECUR_UNCLASS	../netinet/ip.h	/^#define	IPOPT_SECUR_UNCLASS	0x0000$/
IPOPT_SSRR	../netinet/ip.h	/^#define	IPOPT_SSRR		137		\/* strict source route */
IPOPT_TS	../netinet/ip.h	/^#define	IPOPT_TS		68		\/* timestamp *\/$/
IPOPT_TS_PRESPEC	../netinet/ip.h	/^#define	IPOPT_TS_PRESPEC	2		\/* specified modules /
IPOPT_TS_TSANDADDR	../netinet/ip.h	/^#define	IPOPT_TS_TSANDADDR	1		\/* timestamps and a/
IPOPT_TS_TSONLY	../netinet/ip.h	/^#define	IPOPT_TS_TSONLY		0		\/* timestamps only */
IPPORT_RESERVED	../netinet/in.h	/^#define	IPPORT_RESERVED		1024$/
IPPORT_USERRESERVED	../netinet/in.h	/^#define	IPPORT_USERRESERVED	5000$/
IPPROTO_EGP	../netinet/in.h	/^#define	IPPROTO_EGP		8		\/* exterior gateway proto/
IPPROTO_GGP	../netinet/in.h	/^#define	IPPROTO_GGP		3		\/* gateway^2 (deprecated)/
IPPROTO_ICMP	../netinet/in.h	/^#define	IPPROTO_ICMP		1		\/* control message proto/
IPPROTO_IDP	../netinet/in.h	/^#define	IPPROTO_IDP		22		\/* xns idp *\/$/
IPPROTO_IP	../netinet/in.h	/^#define	IPPROTO_IP		0		\/* dummy for IP *\/$/
IPPROTO_MAX	../netinet/in.h	/^#define	IPPROTO_MAX		256$/
IPPROTO_PUP	../netinet/in.h	/^#define	IPPROTO_PUP		12		\/* pup *\/$/
IPPROTO_RAW	../netinet/in.h	/^#define	IPPROTO_RAW		255		\/* raw IP packet *\/$/
IPPROTO_TCP	../netinet/in.h	/^#define	IPPROTO_TCP		6		\/* tcp *\/$/
IPPROTO_UDP	../netinet/in.h	/^#define	IPPROTO_UDP		17		\/* user datagram protoco/
IPSENDREDIRECTS	../netinet/ip_input.c	/^#define	IPSENDREDIRECTS	1$/
IPTTLDEC	../netinet/ip.h	/^#define	IPTTLDEC	1		\/* subtracted when forwarding/
IPVERSION	../netinet/ip.h	/^#define	IPVERSION	4$/
IP_ALLOWBROADCAST	../netinet/ip_var.h	/^#define	IP_ALLOWBROADCAST	SO_BROADCAST	\/* can sen/
IP_DF	../netinet/ip.h	/^#define	IP_DF 0x4000			\/* dont fragment flag *\/$/
IP_FORWARDING	../netinet/ip_var.h	/^#define	IP_FORWARDING		0x1		\/* most of ip header /
IP_MAXPACKET	../netinet/ip.h	/^#define	IP_MAXPACKET	65535		\/* maximum packet siz/
IP_MF	../netinet/ip.h	/^#define	IP_MF 0x2000			\/* more fragments flag *\//
IP_MSS	../netinet/ip.h	/^#define	IP_MSS		576		\/* default maximum segment s/
IP_OPTIONS	../netinet/in.h	/^#define	IP_OPTIONS	1		\/* set\/get IP per-packet o/
IP_ROUTETOIF	../netinet/ip_var.h	/^#define	IP_ROUTETOIF		SO_DONTROUTE	\/* bypass rout/
IREAD	../h/inode.h	/^#define	IREAD		0400		\/* read, write, execute perm/
IRENAME	../h/inode.h	/^#define	IRENAME		0x800		\/* inode is being renamed/
ISGID	../h/inode.h	/^#define	ISGID		02000		\/* set group id on executio/
ISHLOCK	../h/inode.h	/^#define	ISHLOCK		0x80		\/* file has shared lock */
ISP	../vax/mtpr.h	/^#define	ISP	0x4		\/* interrupt stack pointer *\/$/
ISPEED	../vaxuba/dh.c	/^#define	ISPEED	B9600$/
ISSIG	../h/param.h	/^#define	ISSIG(p) \\$/
ISUID	../h/inode.h	/^#define	ISUID		04000		\/* set user id on execution/
ISVTX	../h/inode.h	/^#define	ISVTX		01000		\/* save swapped text even a/
ITEXT	../h/inode.h	/^#define	ITEXT		0x20		\/* inode is pure text protot/
ITIMER_PROF	../h/time.h	/^#define	ITIMER_PROF	2$/
ITIMER_REAL	../h/time.h	/^#define	ITIMER_REAL	0$/
ITIMER_VIRTUAL	../h/time.h	/^#define	ITIMER_VIRTUAL	1$/
ITIMES	../h/inode.h	/^#define	ITIMES(ip, t1, t2) { \\$/
IUNLOCK	../h/inode.h	/^#define	IUNLOCK(ip) { \\$/
IUPD	../h/inode.h	/^#define	IUPD		0x2		\/* file has been modified *\/$/
IUPDAT	../h/inode.h	/^#define	IUPDAT(ip, t1, t2, waitfor) { \\$/
IUR	../vax/mtpr.h	/^#define	IUR	0x37		\/* init unibus (Qbus on 630) re/
IWANT	../h/inode.h	/^#define	IWANT		0x10		\/* some process waiting on l/
IWRITE	../h/inode.h	/^#define	IWRITE		0200$/
IXC_CLOSE	../vaxif/if_ix.h	/^#define IXC_CLOSE	IXC_MAP(2)		\/* Close Channel */
IXC_CSCLR	../vaxif/if_ix.h	/^#define IXC_CSCLR	IXC_MAP(10)		\/* Clear Channel S/
IXC_CSTAT	../vaxif/if_ix.h	/^#define IXC_CSTAT	IXC_MAP(8)		\/* Get Channel Stat/
IXC_GSCLR	../vaxif/if_ix.h	/^#define IXC_GSCLR	IXC_MAP(9)		\/* Clear General St/
IXC_GSTAT	../vaxif/if_ix.h	/^#define IXC_GSTAT	IXC_MAP(7)		\/* Get General Stat/
IXC_LDPA	../vaxif/if_ix.h	/^#define IXC_LDPA	IXC_MAP(12)		\/* Load Physical Ad/
IXC_MAP	../vaxif/if_ix.h	/^#define IXC_MAP(a)	(((a) << 6) | 0100077)$/
IXC_MCAST	../vaxif/if_ix.h	/^#define IXC_MCAST	IXC_MAP(3)		\/* Set Multicast Ad/
IXC_OPEN	../vaxif/if_ix.h	/^#define IXC_OPEN	IXC_MAP(1)		\/* Open Channel *\/$/
IXC_RECV	../vaxif/if_ix.h	/^#define IXC_RECV	IXC_MAP(4)		\/* Receive Frame *\//
IXC_RECVF	../vaxif/if_ix.h	/^#define IXC_RECVF	IXC_MAP(5)		\/* Receive Fragment/
IXC_RESET	../vaxif/if_ix.h	/^#define IXC_RESET	IXC_MAP(11)		\/* Reset DLA modul/
IXC_XMIT	../vaxif/if_ix.h	/^#define IXC_XMIT	IXC_MAP(6)		\/* Send Frame *\/$/
IXEQADDR	../vaxuba/npreg.h	/^#define IXEQADDR	0x400		\/* Where to begin Board i/
IXF_GOTCQE	../vaxif/if_ix.c	/^#define	IXF_GOTCQE	0x40		\/* np resources availabl/
IXF_GOTUBA	../vaxif/if_ix.c	/^#define	IXF_GOTUBA	0x4		\/* unibus resources mappe/
IXF_OACTIVE	../vaxif/if_ix.c	/^#define	IXF_OACTIVE	0x1		\/* output is active *\/$/
IXF_OWATCH	../vaxif/if_ix.c	/^#define	IXF_OWATCH	0x80		\/* is output hung? *\/$/
IXF_RCVPENDING	../vaxif/if_ix.c	/^#define	IXF_RCVPENDING	0x2		\/* start rcv in ilcin/
IXF_RUNNING	../vaxif/if_ix.c	/^#define	IXF_RUNNING	0x8		\/* board is running *\/$/
IXF_RWATCH	../vaxif/if_ix.c	/^#define	IXF_RWATCH	0x100		\/* is input hung? *\/$/
IXF_SETADDR	../vaxif/if_ix.c	/^#define	IXF_SETADDR	0x10		\/* physical address is /
IXF_STATPENDING	../vaxif/if_ix.c	/^#define	IXF_STATPENDING	0x20		\/* stat cmd pending/
IXWATCHINTERVAL	../vaxif/if_ix.c	/^#define	IXWATCHINTERVAL	60		\/* once every 60 seco/
Ib_in	../vax/asnumber.h	/^union Ib_int{		\/* byte *\/$/
Il_in	../vax/asnumber.h	/^union Il_int{		\/* long word *\/$/
Io_in	../vax/asnumber.h	/^union Io_int{		\/* octal word *\/$/
Iq_in	../vax/asnumber.h	/^union Iq_int{		\/* quad word *\/$/
Iw_in	../vax/asnumber.h	/^union Iw_int{		\/* word *\/$/
JUMP_REQ	../vaxuba/psreg.h	/^#define JUMP_REQ	04$/
JUSTRETURN	../h/user.h	/^#define	JUSTRETURN	1$/
KA630BDR_BDG	../vax/ka630.h	/^#define	KA630BDR_BDG	0x0300$/
KA630BDR_CPU	../vax/ka630.h	/^#define	KA630BDR_CPU	0x0c00$/
KA630BDR_DSPL	../vax/ka630.h	/^#define	KA630BDR_DSPL	0x000f$/
KA630BDR_HLTENB	../vax/ka630.h	/^#define	KA630BDR_HLTENB	0x4000$/
KA630BDR_PWROK	../vax/ka630.h	/^#define	KA630BDR_PWROK	0x8000$/
KA630CEAR_PG	../vax/ka630.h	/^#define	KA630CEAR_PG	0x00007fff$/
KA630CLK_BOOT	../vax/ka630.h	/^#define	KA630CLK_BOOT	04$/
KA630CLK_ENABLE	../vax/ka630.h	/^#define	KA630CLK_ENABLE	06$/
KA630CLK_HALT	../vax/ka630.h	/^#define	KA630CLK_HALT	03$/
KA630CLK_HLTACT	../vax/ka630.h	/^#define	KA630CLK_HLTACT	03$/
KA630CLK_LANG	../vax/ka630.h	/^#define	KA630CLK_LANG	0360$/
KA630CLK_RATE	../vax/ka630.h	/^#define	KA630CLK_RATE	040$/
KA630CLK_REBOOT	../vax/ka630.h	/^#define	KA630CLK_REBOOT	02$/
KA630CLK_RESTRT	../vax/ka630.h	/^#define	KA630CLK_RESTRT	01$/
KA630CLK_RSTRT	../vax/ka630.h	/^#define	KA630CLK_RSTRT	010$/
KA630CLK_SET	../vax/ka630.h	/^#define	KA630CLK_SET	0206$/
KA630CLK_UIP	../vax/ka630.h	/^#define	KA630CLK_UIP	0200$/
KA630CLK_VRT	../vax/ka630.h	/^#define	KA630CLK_VRT	0200$/
KA630DEAR_PG	../vax/ka630.h	/^#define	KA630DEAR_PG	0x00007fff$/
KA630MSER_CD	../vax/ka630.h	/^#define	KA630MSER_CD	0x00000300$/
KA630MSER_CPUER	../vax/ka630.h	/^#define	KA630MSER_CPUER	0x00000060$/
KA630MSER_DQPE	../vax/ka630.h	/^#define	KA630MSER_DQPE	0x00000010$/
KA630MSER_LEB	../vax/ka630.h	/^#define	KA630MSER_LEB	0x00000008$/
KA630MSER_LPE	../vax/ka630.h	/^#define	KA630MSER_LPE	0x00000040$/
KA630MSER_MERR	../vax/ka630.h	/^#define	KA630MSER_MERR	0x000000f0$/
KA630MSER_NXM	../vax/ka630.h	/^#define	KA630MSER_NXM	0x00000080$/
KA630MSER_PAREN	../vax/ka630.h	/^#define	KA630MSER_PAREN	0x00000001$/
KA630MSER_QPE	../vax/ka630.h	/^#define	KA630MSER_QPE	0x00000020$/
KA630MSER_WRWP	../vax/ka630.h	/^#define	KA630MSER_WRWP	0x00000002$/
KA820CLK_0_BUSY	../vax/ka820.h	/^#define	KA820CLK_0_BUSY		0x01		\/* busy (time chan/
KA820CLK_1_GO	../vax/ka820.h	/^#define	KA820CLK_1_GO		0x0c		\/* run *\/$/
KA820CLK_1_SET	../vax/ka820.h	/^#define	KA820CLK_1_SET		0x0d		\/* set the time *\//
KA820CLK_3_VALID	../vax/ka820.h	/^#define	KA820CLK_3_VALID	0x01		\/* clock is valid /
KA820PORT_BIRESET	../vax/ka820.h	/^#define	KA820PORT_BIRESET	0x10000000	\/* BI reset /
KA820PORT_BISTF	../vax/ka820.h	/^#define	KA820PORT_BISTF		0x08000000	\/* ??? *\/$/
KA820PORT_BITS	../vax/ka820.h	/^#define	KA820PORT_BITS \\$/
KA820PORT_CONSCLR	../vax/ka820.h	/^#define	KA820PORT_CONSCLR	0x00000200	\/* clear con/
KA820PORT_CONSEN	../vax/ka820.h	/^#define	KA820PORT_CONSEN	0x00000400	\/* console in/
KA820PORT_CONSINTR	../vax/ka820.h	/^#define	KA820PORT_CONSINTR	0x00000100	\/* console /
KA820PORT_CRDCLR	../vax/ka820.h	/^#define	KA820PORT_CRDCLR	0x00000002	\/* clear CRD /
KA820PORT_CRDEN	../vax/ka820.h	/^#define	KA820PORT_CRDEN		0x00000004	\/* enable CRD/
KA820PORT_CRDINTR	../vax/ka820.h	/^#define	KA820PORT_CRDINTR	0x00000001	\/* CRD inter/
KA820PORT_ENBAPT	../vax/ka820.h	/^#define	KA820PORT_ENBAPT	0x04000000	\/* ??? *\/$/
KA820PORT_ENBPIPE	../vax/ka820.h	/^#define	KA820PORT_ENBPIPE	0x00002000	\/* enable? p/
KA820PORT_EV0	../vax/ka820.h	/^#define	KA820PORT_EV0		0x00010000	\/* event 0 *\/$/
KA820PORT_EV1	../vax/ka820.h	/^#define	KA820PORT_EV1		0x00020000	\/* event 1 *\/$/
KA820PORT_EV2	../vax/ka820.h	/^#define	KA820PORT_EV2		0x00040000	\/* event 2 *\/$/
KA820PORT_EV3	../vax/ka820.h	/^#define	KA820PORT_EV3		0x00080000	\/* event 3 *\/$/
KA820PORT_EV4	../vax/ka820.h	/^#define	KA820PORT_EV4		0x00100000	\/* event 4 *\/$/
KA820PORT_EVLCK	../vax/ka820.h	/^#define	KA820PORT_EVLCK		0x00400000	\/* event lock/
KA820PORT_IPCLR	../vax/ka820.h	/^#define	KA820PORT_IPCLR		0x00000010	\/* clear IP i/
KA820PORT_IPINTR	../vax/ka820.h	/^#define	KA820PORT_IPINTR	0x00000008	\/* IP interru/
KA820PORT_LCONS	../vax/ka820.h	/^#define	KA820PORT_LCONS		0x40000000	\/* logical co/
KA820PORT_LCONSEN	../vax/ka820.h	/^#define	KA820PORT_LCONSEN	0x20000000	\/* logical c/
KA820PORT_PERH	../vax/ka820.h	/^#define	KA820PORT_PERH		0x00004000	\/* parity erro/
KA820PORT_RSTHALT	../vax/ka820.h	/^#define	KA820PORT_RSTHALT	0x80000000	\/* restart h/
KA820PORT_RSVD	../vax/ka820.h	/^#define	KA820PORT_RSVD		0x00000800	\/* reserved */
KA820PORT_RUN	../vax/ka820.h	/^#define	KA820PORT_RUN		0x01000000	\/* run *\/$/
KA820PORT_RXCLR	../vax/ka820.h	/^#define	KA820PORT_RXCLR		0x00000040	\/* clear RX50/
KA820PORT_RXIE	../vax/ka820.h	/^#define	KA820PORT_RXIE		0x00000080	\/* RX50 interr/
KA820PORT_RXIRQ	../vax/ka820.h	/^#define	KA820PORT_RXIRQ		0x00000020	\/* RX50 inter/
KA820PORT_STPASS	../vax/ka820.h	/^#define	KA820PORT_STPASS	0x02000000	\/* self test /
KA820PORT_TIMEOUT	../vax/ka820.h	/^#define	KA820PORT_TIMEOUT	0x00001000	\/* timeout */
KA820PORT_WMEM	../vax/ka820.h	/^#define	KA820PORT_WMEM		0x00200000	\/* write mem */
KA820PORT_WWPE	../vax/ka820.h	/^#define	KA820PORT_WWPE		0x00800000	\/* ??? parity /
KA820PORT_WWPO	../vax/ka820.h	/^#define	KA820PORT_WWPO		0x00008000	\/* ??? parity /
KA820_BRAMADDR	../vax/ka820.h	/^#define	KA820_BRAMADDR		0x20090000	\/* boot ram */
KA820_BRPAGES	../vax/ka820.h	/^#define	KA820_BRPAGES		16		\/* 8K *\/$/
KA820_CLOCKADDR	../vax/ka820.h	/^#define	KA820_CLOCKADDR		0x200b8000	\/* watch chip/
KA820_EEPAGES	../vax/ka820.h	/^#define	KA820_EEPAGES		64		\/* 32K *\/$/
KA820_EEPROMADDR	../vax/ka820.h	/^#define	KA820_EEPROMADDR	0x20098000	\/* eeprom *\//
KA820_PORTADDR	../vax/ka820.h	/^#define	KA820_PORTADDR		0x20088000	\/* port contro/
KA820_RX50ADDR	../vax/ka820.h	/^#define	KA820_RX50ADDR		0x200b0000	\/* rcx50 *\/$/
KDBSPACE	../vax/kdb_machdep.c	/^#define	KDBSPACE	1024	\/* 1K of memory for breakpo/
KDB_IPL	../vax/kdbparam.h	/^#define	KDB_IPL		0xf	\/* highest priority software/
KERNBASE	../vax/machparam.h	/^#define	KERNBASE	0x80000000	\/* start of kernel vi/
KERNEL	../vax/genassym.c	/^#define KERNEL$/
KERNOFF	../vax/kdbparam.h	/^#define	KERNOFF		0x80000000$/
KERNREQ	../vaxuba/npreg.h	/^#define KERNREQ	0x20		\/* Request was from the ker/
KLIN	../vax/vmparam.h	/^#define	KLIN	(8\/CLSIZE)		\/* default data\/stack /
KLMAX	../vax/vmparam.h	/^#define	KLMAX	(32\/CLSIZE)$/
KLOUT	../vax/vmparam.h	/^#define	KLOUT	(32\/CLSIZE)$/
KLSDIST	../vax/vmparam.h	/^#define	KLSDIST	3		\/* klusters advance\/retard fo/
KLSEQL	../vax/vmparam.h	/^#define	KLSEQL	(16\/CLSIZE)		\/* in klust if vadvi/
KLSTRT	../vaxuba/kgclock.c	/^#define	KLSTRT	0300		\/* intr enbl + done *\/$/
KLTXT	../vax/vmparam.h	/^#define	KLTXT	(4\/CLSIZE)		\/* default text in klu/
KMEMSTATS	../h/malloc.h	/^#define KMEMSTATS$/
KSP	../vax/mtpr.h	/^#define	KSP	0x0		\/* kernel stack pointer *\/$/
KVTOPH	../vax/kdbparam.h	/^#define	KVTOPH(x)	((x)&~ 0x80000000)$/
L001000	../h/ioctl.h	/^#define		L001000		0x02000000$/
LABELOFFSET	../h/disklabel.h	/^#define LABELOFFSET	64			\/* offset of label in se/
LABELSECTOR	../h/disklabel.h	/^#define LABELSECTOR	0			\/* sector containing labe/
LBI	../vaxuba/lpa.c	/^#define LBI	0000003		\/* last buffer index *\/$/
LCASE	../h/ioctl.h	/^#define		LCASE		0x00000004	\/* simulate lower case/
LCRTBS	../h/ioctl.h	/^#define		LCRTBS		(CRTBS>>16)$/
LCRTERA	../h/ioctl.h	/^#define		LCRTERA		(CRTERA>>16)$/
LCRTKIL	../h/ioctl.h	/^#define		LCRTKIL		(CRTKIL>>16)$/
LCTLECH	../h/ioctl.h	/^#define		LCTLECH		(CTLECH>>16)$/
LC_CALL_PENDING	../vaxif/if_ddnvar.h	/^#define LC_CALL_PENDING	   3		\/* X25 circuit call/
LC_CLR_PENDING	../vaxif/if_ddnvar.h	/^#define LC_CLR_PENDING	   5		\/* X25 circuit clear/
LC_DATA_IDLE	../vaxif/if_ddnvar.h	/^#define LC_DATA_IDLE	   4		\/* X25 circuit open		*/
LC_DOWN	../vaxif/if_ddnvar.h	/^#define LC_DOWN		   0		\/* X25 circuit down		*\/$/
LC_IDLE	../vaxif/if_ddnvar.h	/^#define LC_IDLE		   2		\/* X25 circuit not in use	/
LC_RESTART	../vaxif/if_ddnvar.h	/^#define LC_RESTART	   1		\/* X25 circuit restartin/
LDCNT	../vaxuba/npreg.h	/^#define LDCNT	5$/
LDECCTQ	../h/ioctl.h	/^#define		LDECCTQ		(DECCTQ>>16)$/
LEAPYEAR	../vax/clock.h	/^#define	LEAPYEAR(year)	((year)%4==0)	\/* good till/
LFLUSHO	../h/ioctl.h	/^#define		LFLUSHO		(FLUSHO>>16)$/
LGFIFO_FULL	../vaxuba/psreg.h	/^#define LGFIFO_FULL	01000$/
LIM_CORE	../h/vlimit.h	/^#define	LIM_CORE	5	\/* max size of ``core'' file */
LIM_CPU	../h/vlimit.h	/^#define	LIM_CPU		1	\/* max secs cpu time *\/$/
LIM_DATA	../h/vlimit.h	/^#define	LIM_DATA	3	\/* max growth of data space */
LIM_FSIZE	../h/vlimit.h	/^#define	LIM_FSIZE	2	\/* max size of file created */
LIM_MAXRSS	../h/vlimit.h	/^#define	LIM_MAXRSS	6	\/* max desired data+stack co/
LIM_NORAISE	../h/vlimit.h	/^#define	LIM_NORAISE	0	\/* if <> 0, can't raise lim/
LIM_STACK	../h/vlimit.h	/^#define	LIM_STACK	4	\/* max growth of stack *\/$/
LINE	../vaxuba/dmzreg.h	/^#define	LINE(a)		((a%24)%8)$/
LINE_CNTL	../vaxif/if_ddnvar.h	/^#define LINE_CNTL	0x60		\/* link control cmnd		*\//
LINE_STATUS	../vaxif/if_ddnvar.h	/^#define LINE_STATUS	0x61		\/* link status resp		*/
LINK_DISABLE	../vaxif/if_ddnvar.h	/^#define LINK_DISABLE	0x00		\/* Disable link layer	/
LINK_DOWN	../vaxif/if_ddnvar.h	/^#define LINK_DOWN	0x00		\/* Link layer is down		*/
LINK_ENABLE	../vaxif/if_ddnvar.h	/^#define LINK_ENABLE	0x01		\/* Enable link layer		*/
LINK_LOOPBACK	../vaxif/if_ddnvar.h	/^#define LINK_LOOPBACK	0x42		\/* Link layer loopbac/
LINK_UP	../vaxif/if_ddnvar.h	/^#define LINK_UP		0x01		\/* Link layer is up		*\/$/
LITOUT	../h/ioctl.h	/^#define		LITOUT		0x00200000	\/* literal output *\//
LITTLE_ENDIAN	../netinet/tcp.h	/^#define	LITTLE_ENDIAN	1234	\/* least-significant b/
LLITOUT	../h/ioctl.h	/^#define		LLITOUT		(LITOUT>>16)$/
LLNA_BADADDR	../vaxif/if_exreg.h	/^#define	LLNA_BADADDR	0xD3	\/* invalid address for /
LLNA_BADSLOT	../vaxif/if_exreg.h	/^#define	LLNA_BADSLOT	0xD1	\/* slot doesn't exist o/
LLNET_ADDRS	../vaxif/if_exreg.h	/^#define	LLNET_ADDRS	0x9	\/* read\/write receive ad/
LLNET_MODE	../vaxif/if_exreg.h	/^#define	LLNET_MODE	0x8	\/* read\/write mode contro/
LLNET_RECV	../vaxif/if_exreg.h	/^#define	LLNET_RECV	0xA	\/* read\/alter receive slo/
LLNET_STSTCS	../vaxif/if_exreg.h	/^#define	LLNET_STSTCS	0xB	\/* read\/reset network s/
LLNR_BADADDR	../vaxif/if_exreg.h	/^#define	LLNR_BADADDR	0xD2	\/* designated slot was /
LLNR_BADSLOT	../vaxif/if_exreg.h	/^#define	LLNR_BADSLOT	0xD1	\/* slot doesn't exist o/
LLRC_ALIGN	../vaxif/if_exreg.h	/^#define	LLRC_ALIGN	0x10	\/* pkt received, but with/
LLRC_BUFLEN	../vaxif/if_exreg.h	/^#define	LLRC_BUFLEN	0x40	\/* no pkt received, buff/
LLRC_CRC	../vaxif/if_exreg.h	/^#define	LLRC_CRC	0x20	\/* pkt received, but with C/
LLRC_TRUNC	../vaxif/if_exreg.h	/^#define	LLRC_TRUNC	0x4	\/* pkt received, but trunc/
LLRECEIVE	../vaxif/if_exreg.h	/^#define	LLRECEIVE	0xD	\/* receive a packet *\/$/
LLRTRANSMIT	../vaxif/if_exreg.h	/^#define	LLRTRANSMIT	0xE	\/* send a packet, and sel/
LLTRANSMIT	../vaxif/if_exreg.h	/^#define	LLTRANSMIT	0xC	\/* send a packet *\/$/
LLXM_1RTRY	../vaxif/if_exreg.h	/^#define	LLXM_1RTRY	0x1	\/* successful xmission, 1 /
LLXM_CLSN	../vaxif/if_exreg.h	/^#define	LLXM_CLSN	0x10	\/* xmission failed, excess/
LLXM_ERROR	../vaxif/if_exreg.h	/^#define	LLXM_ERROR	(LLXM_NSQE|LLXM_CLSN|LLXM_NCS|L/
LLXM_LNGTH	../vaxif/if_exreg.h	/^#define	LLXM_LNGTH	0x40	\/* xmission failed, bad p/
LLXM_NCS	../vaxif/if_exreg.h	/^#define	LLXM_NCS	0x20	\/* xmission failed, no carr/
LLXM_NSQE	../vaxif/if_exreg.h	/^#define	LLXM_NSQE	0x8	\/* successful xmission, no /
LLXM_RTRYS	../vaxif/if_exreg.h	/^#define	LLXM_RTRYS	0x2	\/* successful xmission, mo/
LLX_MODE	../vaxif/if_exreg.h	/^#define	LLX_MODE	0xA1	\/* EXOS not in link level m/
LL_OK	../vaxif/if_exreg.h	/^#define	LL_OK		0	\/* successful completion *\/$/
LMDMBUF	../h/ioctl.h	/^#define		LMDMBUF		(MDMBUF>>16)$/
LNOFLSH	../h/ioctl.h	/^#define		LNOFLSH		(NOFLSH>>16)$/
LNOHANG	../h/ioctl.h	/^#define		LNOHANG		(NOHANG>>16)$/
LOADREQ	../vaxuba/npreg.h	/^#define LOADREQ		0x08		\/* Load request *\/$/
LOCKPARENT	../h/namei.h	/^#define	LOCKPARENT	0x10	\/* see the top of namei */
LOCK_EX	../h/file.h	/^#define	LOCK_EX		2	\/* exclusive lock *\/$/
LOCK_NB	../h/file.h	/^#define	LOCK_NB		4	\/* don't block when locking */
LOCK_SH	../h/file.h	/^#define	LOCK_SH		1	\/* shared lock *\/$/
LOCK_UN	../h/file.h	/^#define	LOCK_UN		8	\/* unlock *\/$/
LOG_ALERT	../h/syslog.h	/^#define LOG_ALERT	1	\/* action must be taken immed/
LOG_ASYNC	../sys/subr_log.c	/^#define LOG_ASYNC	0x04$/
LOG_AUTH	../h/syslog.h	/^#define LOG_AUTH	(4<<3)	\/* security\/authorizatio/
LOG_CONS	../h/syslog.h	/^#define	LOG_CONS	0x02	\/* log on the console if er/
LOG_CRIT	../h/syslog.h	/^#define LOG_CRIT	2	\/* critical conditions *\/$/
LOG_DAEMON	../h/syslog.h	/^#define LOG_DAEMON	(3<<3)	\/* system daemons *\/$/
LOG_DEBUG	../h/syslog.h	/^#define LOG_DEBUG	7	\/* debug-level messages *\/$/
LOG_EMERG	../h/syslog.h	/^#define LOG_EMERG	0	\/* system is unusable *\/$/
LOG_ERR	../h/syslog.h	/^#define LOG_ERR		3	\/* error conditions *\/$/
LOG_FACMASK	../h/syslog.h	/^#define LOG_FACMASK	0x03f8	\/* mask to extract fac/
LOG_INFO	../h/syslog.h	/^#define LOG_INFO	6	\/* informational *\/$/
LOG_KERN	../h/syslog.h	/^#define LOG_KERN	(0<<3)	\/* kernel messages *\/$/
LOG_LOCAL0	../h/syslog.h	/^#define LOG_LOCAL0	(16<<3)	\/* reserved for local /
LOG_LOCAL1	../h/syslog.h	/^#define LOG_LOCAL1	(17<<3)	\/* reserved for local /
LOG_LOCAL2	../h/syslog.h	/^#define LOG_LOCAL2	(18<<3)	\/* reserved for local /
LOG_LOCAL3	../h/syslog.h	/^#define LOG_LOCAL3	(19<<3)	\/* reserved for local /
LOG_LOCAL4	../h/syslog.h	/^#define LOG_LOCAL4	(20<<3)	\/* reserved for local /
LOG_LOCAL5	../h/syslog.h	/^#define LOG_LOCAL5	(21<<3)	\/* reserved for local /
LOG_LOCAL6	../h/syslog.h	/^#define LOG_LOCAL6	(22<<3)	\/* reserved for local /
LOG_LOCAL7	../h/syslog.h	/^#define LOG_LOCAL7	(23<<3)	\/* reserved for local /
LOG_LPR	../h/syslog.h	/^#define LOG_LPR		(6<<3)	\/* line printer subsystem/
LOG_MAIL	../h/syslog.h	/^#define LOG_MAIL	(2<<3)	\/* mail system *\/$/
LOG_MASK	../h/syslog.h	/^#define	LOG_MASK(pri)	(1 << (pri))		\/* mask for o/
LOG_NBIO	../sys/subr_log.c	/^#define LOG_NBIO	0x02$/
LOG_NDELAY	../h/syslog.h	/^#define LOG_NDELAY	0x08	\/* don't delay open *\/$/
LOG_NEWS	../h/syslog.h	/^#define LOG_NEWS	(7<<3)	\/* network news subsystem/
LOG_NFACILITIES	../h/syslog.h	/^#define LOG_NFACILITIES	24	\/* maximum number of f/
LOG_NOTICE	../h/syslog.h	/^#define LOG_NOTICE	5	\/* normal but signification /
LOG_NOWAIT	../h/syslog.h	/^#define LOG_NOWAIT	0x10	\/* if forking to log on c/
LOG_ODELAY	../h/syslog.h	/^#define	LOG_ODELAY	0x04	\/* delay open until first/
LOG_PID	../h/syslog.h	/^#define	LOG_PID		0x01	\/* log the pid with each me/
LOG_PRIMASK	../h/syslog.h	/^#define LOG_PRIMASK	0x0007	\/* mask to extract pri/
LOG_RDPRI	../sys/subr_log.c	/^#define LOG_RDPRI	(PZERO + 1)$/
LOG_RDWAIT	../sys/subr_log.c	/^#define LOG_RDWAIT	0x08$/
LOG_SYSLOG	../h/syslog.h	/^#define LOG_SYSLOG	(5<<3)	\/* messages generated i/
LOG_UPTO	../h/syslog.h	/^#define	LOG_UPTO(pri)	((1 << ((pri)+1)) - 1)	\/* a/
LOG_USER	../h/syslog.h	/^#define LOG_USER	(1<<3)	\/* random user-level mess/
LOG_UUCP	../h/syslog.h	/^#define LOG_UUCP	(8<<3)	\/* UUCP subsystem *\/$/
LOG_WARNING	../h/syslog.h	/^#define LOG_WARNING	4	\/* warning conditions *\/$/
LOMTU	../net/if_loop.c	/^#define	LOMTU	(1024+512)$/
LONG_MAX	../vax/machparam.h	/^#define	LONG_MAX	0x7fffffff$/
LONG_MIN	../vax/machparam.h	/^#define	LONG_MIN	0x80000000$/
LOOKUP	../h/namei.h	/^#define	LOOKUP		0	\/* perform name lookup only *\//
LOOPBACK	../vaxif/if_vv.c	/^#define LOOPBACK		\/* use loopback for packets mea/
LOOPPAGES	../vax/vmparam.h	/^#define	LOOPPAGES	(maxfree - firstfree)$/
LOOP_EXTERNAL	../vaxif/if_ddnvar.h	/^#define   LOOP_EXTERNAL	0x01		\/*   Loopback exter/
LOOP_INTERNAL	../vaxif/if_ddnvar.h	/^#define   LOOP_INTERNAL	0x03		\/*   Loopback inter/
LOOP_OFF	../vaxif/if_ddnvar.h	/^#define   LOOP_OFF	0x00		\/*   Loopback off		*\/$/
LOSTDQUOT	../h/quota.h	/^#define	LOSTDQUOT	((struct dquot *) 1)$/
LOTSFREE	../vax/vmparam.h	/^#define	LOTSFREE	(512 * 1024)$/
LOTSFREEFRACT	../vax/vmparam.h	/^#define	LOTSFREEFRACT	4$/
LOTSOFMEM	../vax/vmparam.h	/^#define	LOTSOFMEM	2$/
LOWBYTE	../vaxuba/npreg.h	/^#define	LOWBYTE		1$/
LOWORD	../vaxuba/npreg.h	/^#define LOWORD(X)	(((ushort *)&(X))[0])$/
LOWPAGES	../vax/vmparam.h	/^#define	LOWPAGES	0$/
LOW_RESOL	../vaxuba/ikreg.h	/^#define		LOW_RESOL		0$/
LPACHANNEL	../vaxuba/lpa.c	/^#define LPACHANNEL(dev)	((dev) & 077)$/
LPADEVICE	../vaxuba/lpa.c	/^#define LPADEVICE(dev)	(((dev) >> 6) & 03)$/
LPAPRI	../vaxuba/lpa.c	/^#define LPAPRI		(PZERO + 0)$/
LPASS8	../h/ioctl.h	/^#define		LPASS8		(PASS8>>16)$/
LPAUNIT	../vaxuba/lpa.c	/^#define LPAUNIT(dev)	0$/
LPBUFSIZE	../vaxuba/lp.c	/^#define	LPBUFSIZE	1024$/
LPENDIN	../h/ioctl.h	/^#define		LPENDIN		(PENDIN>>16)$/
LPEN_REQ	../vaxuba/psreg.h	/^#define LPEN_REQ	0200$/
LPHWAT	../vaxuba/lp.c	/^#define	LPHWAT	800$/
LPLWAT	../vaxuba/lp.c	/^#define	LPLWAT	650$/
LPPRI	../vaxuba/lp.c	/^#define	LPPRI	(PZERO+8)$/
LPRMODE	../vax/kdbparam.h	/^#define LPRMODE "%R"$/
LPRTERA	../h/ioctl.h	/^#define		LPRTERA		(PRTERA>>16)$/
LPUNIT	../vaxuba/lp.c	/^#define LPUNIT(dev)	(minor(dev) >> 3)$/
LSTCMD	../vaxuba/npreg.h	/^#define LSTCMD          0x800           \/* Clear /
LSTCNT	../vaxuba/npreg.h	/^#define LSTCNT	0$/
LTILDE	../h/ioctl.h	/^#define		LTILDE		(TILDE>>16)$/
LTOSTOP	../h/ioctl.h	/^#define		LTOSTOP		(TOSTOP>>16)$/
LVAL_OFF	../vaxif/if_de.c	/^#define	LVAL_OFF(n)	((char *)de_softc[0].n - INCOR/
L_INCR	../h/file.h	/^#define	L_INCR		1	\/* relative to current offset */
L_SET	../h/file.h	/^#define	L_SET		0	\/* absolute offset *\/$/
L_XTND	../h/file.h	/^#define	L_XTND		2	\/* relative to end of file *\/$/
Longjmp ../vax/locore.s /^JSBENTRY(Longjmp, R0)$/
M730_ADDR	../vax/ka730.c	/^#define	M730_ADDR(addr)	(((mcr)->mc_addr >> 8) & 0/
M730_CRD	../vax/ka730.c	/^#define	M730_CRD	0x40000000	\/* crd *\/$/
M730_DISECC	../vax/ka730.c	/^#define	M730_DISECC	0x02000000	\/* disable ecc *\//
M730_DM	../vax/ka730.c	/^#define	M730_DM		0x04000000	\/* diagnostic mode */
M730_ENA	../vax/ka730.c	/^#define	M730_ENA(mcr)	((mcr)->mc_err = (M730_MME|M/
M730_ENACRD	../vax/ka730.c	/^#define	M730_ENACRD	0x10000000	\/* enable crd inte/
M730_ERR	../vax/ka730.c	/^#define	M730_ERR(mcr)	((mcr)->mc_err & (M730_UNCOR/
M730_FTBPE	../vax/ka730.c	/^#define	M730_FTBPE	0x20000000	\/* force tbuf parit/
M730_INH	../vax/ka730.c	/^#define	M730_INH(mcr)	((mcr)->mc_err = M730_MME)$/
M730_MME	../vax/ka730.c	/^#define	M730_MME	0x08000000	\/* mem-man enable (al/
M730_SYN	../vax/ka730.c	/^#define	M730_SYN(addr)	((mcr)->mc_addr & 0x7f)$/
M730_UNCORR	../vax/ka730.c	/^#define	M730_UNCORR	0x80000000	\/* rds, uncorrecta/
M750_ADDR	../vax/ka750.c	/^#define	M750_ADDR(err)	(((err) >> 9) & 0x7fff)$/
M750_CORERR	../vax/ka750.c	/^#define	M750_CORERR	0x20000000	\/* correctable err/
M750_ENA	../vax/ka750.c	/^#define	M750_ENA(mcr)	((mcr)->mc_err = (M750_UNCOR/
M750_ERR	../vax/ka750.c	/^#define	M750_ERR(mcr)	((mcr)->mc_err & (M750_UNCOR/
M750_ICRD	../vax/ka750.c	/^#define	M750_ICRD	0x10000000	\/* inhibit crd inter/
M750_INH	../vax/ka750.c	/^#define	M750_INH(mcr)	((mcr)->mc_inh = 0)$/
M750_SYN	../vax/ka750.c	/^#define	M750_SYN(err)	((err) & 0x7f)$/
M750_UNCORR	../vax/ka750.c	/^#define	M750_UNCORR	0xc0000000	\/* uncorrectable e/
M780C	../vax/mem.h	/^#define	M780C	1$/
M780C_ADDR	../vax/ka780.c	/^#define	M780C_ADDR(mcr)	(((mcr)->mc_reg[2] >> 8) &/
M780C_ENA	../vax/ka780.c	/^#define	M780C_ENA(mcr)	\\$/
M780C_ERR	../vax/ka780.c	/^#define	M780C_ERR(mcr)	\\$/
M780C_INH	../vax/ka780.c	/^#define	M780C_INH(mcr)	\\$/
M780C_SYN	../vax/ka780.c	/^#define	M780C_SYN(mcr)	((mcr)->mc_reg[2] & 0xff)$/
M780EL	../vax/mem.h	/^#define	M780EL	2$/
M780EL_ADDR	../vax/ka780.c	/^#define	M780EL_ADDR(mcr)	(((mcr)->mc_reg[2] >> 11)/
M780EL_ENA	../vax/ka780.c	/^#define	M780EL_ENA(mcr)	\\$/
M780EL_ERR	../vax/ka780.c	/^#define	M780EL_ERR(mcr)	\\$/
M780EL_INH	../vax/ka780.c	/^#define	M780EL_INH(mcr)	\\$/
M780EL_SYN	../vax/ka780.c	/^#define	M780EL_SYN(mcr)		((mcr)->mc_reg[2] & 0x7f)/
M780EU	../vax/mem.h	/^#define	M780EU	3$/
M780EU_ADDR	../vax/ka780.c	/^#define	M780EU_ADDR(mcr)	(((mcr)->mc_reg[3] >> 11)/
M780EU_ENA	../vax/ka780.c	/^#define	M780EU_ENA(mcr)	\\$/
M780EU_ERR	../vax/ka780.c	/^#define	M780EU_ERR(mcr)	\\$/
M780EU_INH	../vax/ka780.c	/^#define	M780EU_INH(mcr)	\\$/
M780EU_SYN	../vax/ka780.c	/^#define	M780EU_SYN(mcr)		((mcr)->mc_reg[3] & 0x7f)/
M780_ERLOG	../vax/ka780.c	/^#define	M780_ERLOG	0x10000000	\/* error log reques/
M780_HIER	../vax/ka780.c	/^#define	M780_HIER	0x20000000	\/* high error rate, /
M780_ICRD	../vax/ka780.c	/^#define	M780_ICRD	0x40000000	\/* inhibit crd inter/
M8600_ADDR	../vax/ka860.c	/^#define M8600_ADDR(mear) ((mear) & 0x3ffffffc)$/
M8600_ADDR_PE	../vax/ka860.c	/^#define	M8600_ADDR_PE	0x080000	\/* address parity /
M8600_ARRAY	../vax/ka860.c	/^#define M8600_ARRAY(mear) (((mear) >> 22) & 0x0f)$/
M8600_BDT_ERR	../vax/ka860.c	/^#define	M8600_BDT_ERR	0x400000	\/* bad data error /
M8600_DBL_ERR	../vax/ka860.c	/^#define M8600_DBL_ERR	0x100000	\/* data double bit/
M8600_HRDERR	../vax/ka860.c	/^#define M8600_HRDERR(mdecc) ((mdecc) & 0x580000)$/
M8600_ICRD	../vax/ka860.c	/^#define	M8600_ICRD	0x400		\/* inhibit crd interrup/
M8600_MDECC_BITS	../vax/ka860.c	/^#define M8600_MDECC_BITS \\$/
M8600_MEMERR	../vax/ka860.c	/^#define M8600_MEMERR(mdecc) ((mdecc) & 0x780000)$/
M8600_MSTAT1_BITS	../vax/ka860.c	/^#define M8600_MSTAT1_BITS "\\20\\30CPR_PE_A\\27CPR/
M8600_MSTAT2_BITS	../vax/ka860.c	/^#define M8600_MSTAT2_BITS "\\20\\20CP_BYT_WR\\17AB/
M8600_SNG_ERR	../vax/ka860.c	/^#define	M8600_SNG_ERR	0x200000	\/* data single bit/
M8600_SYN	../vax/ka860.c	/^#define M8600_SYN(mdecc) (((mdecc) >> 9) & 0x3f)$/
M8600_TB_ERR	../vax/ka860.c	/^#define M8600_TB_ERR	0xf00		\/* translation buffer/
MACHINE	../vax/machparam.h	/^#define	MACHINE	"vax"$/
MADV_DONTNEED	../h/mman.h	/^#define	MADV_DONTNEED	4		\/* dont need these pages/
MADV_NORMAL	../h/mman.h	/^#define	MADV_NORMAL	0		\/* no further special trea/
MADV_RANDOM	../h/mman.h	/^#define	MADV_RANDOM	1		\/* expect random page refe/
MADV_SEQUENTIAL	../h/mman.h	/^#define	MADV_SEQUENTIAL	2		\/* expect sequential p/
MADV_WILLNEED	../h/mman.h	/^#define	MADV_WILLNEED	3		\/* will need these pages/
MAI	../vaxuba/psreg.h	/^#define MAI		020$/
MAIA	../vaxuba/psreg.h	/^#define MAIA		0177752$/
MAINT	../vaxuba/dn.c	/^#define MAINT	0x008		\/* maintenance mode *\/$/
MAKEBOOTDEV	../h/reboot.h	/^#define MAKEBOOTDEV(type, adaptor, controller, uni/
MALLOC	../h/malloc.h	/^#define MALLOC(space, cast, size, type, flags) \\$/
MAMSR	../vaxuba/psreg.h	/^#define MAMSR		0177754$/
MAO	../vaxuba/psreg.h	/^#define MAO		040$/
MAOA	../vaxuba/psreg.h	/^#define MAOA		0177751$/
MAOL	../vaxuba/psreg.h	/^#define MAOL		0177750$/
MAPEN	../vax/mtpr.h	/^#define	MAPEN	0x38		\/* memory management enable */
MAP_PRIVATE	../h/mman.h	/^#define	MAP_PRIVATE	2		\/* changes are private *\//
MAP_RESET	../vaxuba/psreg.h	/^#define MAP_RESET	01$/
MAP_SHARED	../h/mman.h	/^#define	MAP_SHARED	1		\/* share changes *\/$/
MARKPORT	../vaxif/if_hy.h	/^#define MARKPORT	10	\/* mark this host's adapter p/
MASKREG	../vaxmba/hp.c	/^#define	MASKREG(reg)	((reg)&0xffff)$/
MASR	../vaxuba/psreg.h	/^#define MASR		0177753$/
MATCH_DEC	../vaxuba/psreg.h	/^#define MATCH_DEC	04$/
MATCH_HOLD	../vaxuba/psreg.h	/^#define MATCH_HOLD	010$/
MATCH_REQ	../vaxuba/psreg.h	/^#define MATCH_REQ	0100$/
MAX	../h/param.h	/^#define	MAX(a,b) (((a)>(b))?(a):(b))$/
MAXALLOCSAVE	../h/param.h	/^#define MAXALLOCSAVE	(2 * CLBYTES)$/
MAXAUTOMAP	../vaxuba/ps.c	/^#define MAXAUTOMAP	4$/
MAXAUTOREFRESH	../vaxuba/ps.c	/^#define MAXAUTOREFRESH	4$/
MAXBSIZE	../h/param.h	/^#define	MAXBSIZE	8192$/
MAXCOL	../vaxuba/lp.c	/^#define MAXCOL		132$/
MAXCOMLEN	../h/user.h	/^#define	MAXCOMLEN	16		\/* <= MAXNAMLEN, >= sizeof(/
MAXCSBUFS	../h/fs.h	/^#define MAXCSBUFS 32$/
MAXDBSIZE	../vaxuba/ps.c	/^#define MAXDBSIZE	(0177777\/2)$/
MAXDSIZ	../vax/vmparam.h	/^#define	MAXDSIZ		(16*1024*1024)		\/* max data size/
MAXFRAG	../h/param.h	/^#define MAXFRAG 	8$/
MAXHOSTNAMELEN	../h/param.h	/^#define MAXHOSTNAMELEN	64	\/* maximum hostname siz/
MAXINT	../vax/kdbparam.h	/^#define	MAXINT	0x7fffffff$/
MAXINTERP	../h/param.h	/^#define	MAXINTERP	32	\/* maximum interpreter file /
MAXINTERVAL	../vaxif/if_hy.c	/^#define MAXINTERVAL	20	\/* seconds (max action) */
MAXINT_1	../vax/asnumber.h	/^#define	MAXINT_1	((unsigned)(1<<(CH_BITS - 1)))$/
MAXINT_10	../vax/asnumber.h	/^#define	MAXINT_10	((unsigned)((MAXINT_1\/(unsigned/
MAXINT_5	../vax/asnumber.h	/^#define	MAXINT_5	((unsigned)((MAXINT_1\/(unsigned)/
MAXLINKHDR	../netinet/tcp_output.c	/^#define	MAXLINKHDR	32		\/* belongs elsewhere *\/$/
MAXMCSLOT	../vaxif/if_exreg.h	/^#define	MAXMCSLOT	8	\/* default maximum multicast /
MAXMEM	../h/cmap.h	/^#define	MAXMEM		64*1024		\/* maximum memory, in Kb/
MAXMNTLEN	../h/fs.h	/^#define MAXMNTLEN 512$/
MAXNAMLEN	../h/dir.h	/^#define	MAXNAMLEN	255$/
MAXNBDP	../vaxuba/ubareg.h	/^#define	MAXNBDP		15$/
MAXNBIG	../sys/vm_sched.c	/^#define	MAXNBIG	10$/
MAXNIOA	../vax/ioa.h	/^#define	MAXNIOA		4$/
MAXNMCR	../vax/mem.h	/^#define	MAXNMCR		4$/
MAXNNEXUS	../vax/nexus.h	/^#define	MAXNNEXUS (2 * NNEXSBI)$/
MAXPACKETSIZE	../vaxif/if_qe.c	/^#define MAXPACKETSIZE 2048		\/* Should really be E/
MAXPARTITIONS	../h/disklabel.h	/^#define	MAXPARTITIONS	8$/
MAXPATHLEN	../h/param.h	/^#define MAXPATHLEN	1024$/
MAXPHYS	../vax/machparam.h	/^#define	MAXPHYS		(63 * 1024)	\/* max raw I\/O tran/
MAXRETRY	../vaxif/if_hyreg.h	/^#define MAXRETRY	4$/
MAXSEC	../vax/crl.h	/^#define	MAXSEC 20480		 	\/* sectors\/rl02 *\/$/
MAXSLP	../vax/vmparam.h	/^#define	MAXSLP 		20$/
MAXSSIZ	../vax/vmparam.h	/^#define	MAXSSIZ		MAXDSIZ			\/* max stack size *\/$/
MAXSTOR	../vax/kdbparam.h	/^#define	MAXSTOR (KERNBASE - ctob(UPAGES))$/
MAXSYMLINKS	../h/param.h	/^#define MAXSYMLINKS	8$/
MAXTSIZ	../vax/vmparam.h	/^#define	MAXTSIZ		(6*1024*1024)		\/* max text size /
MAXTTL	../netinet/ip.h	/^#define	MAXTTL		255		\/* maximum time to live (sec/
MAXUNIT	../vaxuba/uda.c	/^#define	MAXUNIT	8		\/* maximum allowed unit number/
MAXUPRC	../h/param.h	/^#define	MAXUPRC	40		\/* max processes per user *\//
MAX_DQ_WARN	../h/quota.h	/^#define	MAX_DQ_WARN	3$/
MAX_IPOPTLEN	../netinet/ip_var.h	/^#define MAX_IPOPTLEN	40$/
MAX_IQ_WARN	../h/quota.h	/^#define	MAX_IQ_WARN	3$/
MBA_OT	../vax/nexus.h	/^#define	MBA_OT		(1<<21)		\/* overtemperature *\/$/
MBCR_IE	../vaxmba/mbareg.h	/^#define	MBCR_IE		0x4		\/* enable mba interrupts */
MBCR_INIT	../vaxmba/mbareg.h	/^#define	MBCR_INIT	0x1		\/* init mba *\/$/
MBDATALEN	../vaxif/if_exreg.h	/^#define	MBDATALEN (sizeof(union mb_all)+6)$/
MBDS_DPR	../vaxmba/mbareg.h	/^#define	MBDS_DPR	0x00000100	\/* drive present *\/$/
MBDS_DREADY	../vaxmba/mbareg.h	/^#define	MBDS_DREADY	(MBDS_MOL|MBDS_DPR|MBDS_DRY)$/
MBDS_DRY	../vaxmba/mbareg.h	/^#define	MBDS_DRY	0x00000080	\/* drive ready *\/$/
MBDS_ERR	../vaxmba/mbareg.h	/^#define	MBDS_ERR	0x00004000	\/* error in drive *\//
MBDS_MOL	../vaxmba/mbareg.h	/^#define	MBDS_MOL	0x00001000	\/* medium on line *\//
MBDT_7CH	../vaxmba/mbareg.h	/^#define	MBDT_7CH	0x1000		\/* 7 channel *\/$/
MBDT_DRQ	../vaxmba/mbareg.h	/^#define	MBDT_DRQ	0x800		\/* drive request required/
MBDT_MASK	../vaxmba/mbareg.h	/^#define	MBDT_MASK	(MBDT_NSA|MBDT_TAP|MBDT_TYPE)$/
MBDT_ML11A	../vaxmba/mbareg.h	/^#define	MBDT_ML11A	0110$/
MBDT_ML11B	../vaxmba/mbareg.h	/^#define	MBDT_ML11B	0111$/
MBDT_MOH	../vaxmba/mbareg.h	/^#define	MBDT_MOH	0x2000		\/* moving head *\/$/
MBDT_NSA	../vaxmba/mbareg.h	/^#define	MBDT_NSA	0x8000		\/* not sector addressibl/
MBDT_RM02	../vaxmba/mbareg.h	/^#define	MBDT_RM02	025$/
MBDT_RM03	../vaxmba/mbareg.h	/^#define	MBDT_RM03	024$/
MBDT_RM05	../vaxmba/mbareg.h	/^#define	MBDT_RM05	027$/
MBDT_RM80	../vaxmba/mbareg.h	/^#define	MBDT_RM80	026$/
MBDT_RP04	../vaxmba/mbareg.h	/^#define	MBDT_RP04	020$/
MBDT_RP05	../vaxmba/mbareg.h	/^#define	MBDT_RP05	021$/
MBDT_RP06	../vaxmba/mbareg.h	/^#define	MBDT_RP06	022$/
MBDT_RP07	../vaxmba/mbareg.h	/^#define	MBDT_RP07	042$/
MBDT_SPR	../vaxmba/mbareg.h	/^#define	MBDT_SPR	0x400		\/* slave present *\/$/
MBDT_TAP	../vaxmba/mbareg.h	/^#define	MBDT_TAP	0x4000		\/* is a tape *\/$/
MBDT_TE16	../vaxmba/mbareg.h	/^#define	MBDT_TE16	051$/
MBDT_TM03	../vaxmba/mbareg.h	/^#define	MBDT_TM03	050$/
MBDT_TU45	../vaxmba/mbareg.h	/^#define	MBDT_TU45	052$/
MBDT_TU77	../vaxmba/mbareg.h	/^#define	MBDT_TU77	054$/
MBDT_TU78	../vaxmba/mbareg.h	/^#define	MBDT_TU78	0101$/
MBDT_TYPE	../vaxmba/mbareg.h	/^#define	MBDT_TYPE	0x1ff$/
MBD_DONE	../vaxmba/mbavar.h	/^#define	MBD_DONE	0		\/* data transfer complete *\//
MBD_REPOSITION	../vaxmba/mbavar.h	/^#define	MBD_REPOSITION	3		\/* driver started unit,/
MBD_RESTARTED	../vaxmba/mbavar.h	/^#define	MBD_RESTARTED	2		\/* driver restarted i\/o/
MBD_RETRY	../vaxmba/mbavar.h	/^#define	MBD_RETRY	1		\/* error occurred, please re/
MBN_DONE	../vaxmba/mbavar.h	/^#define	MBN_DONE	0		\/* non-data transfer complete/
MBN_RETRY	../vaxmba/mbavar.h	/^#define	MBN_RETRY	1		\/* failed; retry the operati/
MBN_SKIP	../vaxmba/mbavar.h	/^#define	MBN_SKIP	2		\/* don't do anything *\/$/
MBOX_1D	../vax/ka860.c	/^#define	MBOX_1D		0x81d0000	\/* Mbox 1D error *\/$/
MBOX_FE	../vax/ka860.c	/^#define	MBOX_FE		0x8000		\/* Mbox fatal error *\/$/
MBRK	../vax/mtpr.h	/^#define	MBRK	0x3c		\/* micro-program breakpoint */
MBSR_ATTN	../vaxmba/mbareg.h	/^#define	MBSR_ATTN	0x00010000	\/* attention from ma/
MBSR_BITS	../vaxmba/mbareg.h	/^#define MBSR_BITS \\$/
MBSR_CBHUNG	../vaxmba/mbareg.h	/^#define	MBSR_CBHUNG	0x00800000	\/* control bus hun/
MBSR_CRD	../vaxmba/mbareg.h	/^#define	MBSR_CRD	0x20000000	\/* corrected read dat/
MBSR_DLT	../vaxmba/mbareg.h	/^#define	MBSR_DLT	0x00000800	\/* data late *\/$/
MBSR_DTABT	../vaxmba/mbareg.h	/^#define	MBSR_DTABT	0x00001000	\/* data transfer ab/
MBSR_DTBUSY	../vaxmba/mbareg.h	/^#define	MBSR_DTBUSY	0x80000000	\/* data transfer b/
MBSR_DTCMP	../vaxmba/mbareg.h	/^#define	MBSR_DTCMP	0x00002000	\/* data transfer co/
MBSR_EBITS	../vaxmba/mbareg.h	/^#define MBSR_EBITS	(~(MBSR_DTBUSY|MBSR_CRD|MBSR_AT/
MBSR_ERRCONF	../vaxmba/mbareg.h	/^#define	MBSR_ERRCONF	0x00000008	\/* error confirma/
MBSR_HARD	../vaxmba/mbareg.h	/^#define	MBSR_HARD	(MBSR_PGE|MBSR_ERRCONF|MBSR_ISTI/
MBSR_INVMAP	../vaxmba/mbareg.h	/^#define	MBSR_INVMAP	0x00000010	\/* invalid map *\//
MBSR_ISTIMO	../vaxmba/mbareg.h	/^#define	MBSR_ISTIMO	0x00000002	\/* interface seque/
MBSR_MAPPE	../vaxmba/mbareg.h	/^#define	MBSR_MAPPE	0x00000020	\/* page frame map p/
MBSR_MBEXC	../vaxmba/mbareg.h	/^#define	MBSR_MBEXC	0x00000080	\/* massbus exceptio/
MBSR_MCPE	../vaxmba/mbareg.h	/^#define	MBSR_MCPE	0x00020000	\/* massbus control p/
MBSR_MDPE	../vaxmba/mbareg.h	/^#define	MBSR_MDPE	0x00000040	\/* massbus data pari/
MBSR_MXF	../vaxmba/mbareg.h	/^#define	MBSR_MXF	0x00000100	\/* miss transfer erro/
MBSR_NED	../vaxmba/mbareg.h	/^#define	MBSR_NED	0x00040000	\/* non-existant drive/
MBSR_NRCONF	../vaxmba/mbareg.h	/^#define	MBSR_NRCONF	0x40000000	\/* no response con/
MBSR_PGE	../vaxmba/mbareg.h	/^#define	MBSR_PGE	0x00080000	\/* programming error /
MBSR_RDS	../vaxmba/mbareg.h	/^#define	MBSR_RDS	0x00000004	\/* read data substitu/
MBSR_RDTIMO	../vaxmba/mbareg.h	/^#define	MBSR_RDTIMO	0x00000001	\/* read data timeo/
MBSR_SPE	../vaxmba/mbareg.h	/^#define	MBSR_SPE	0x00004000	\/* silo parity error /
MBSR_WCKLWR	../vaxmba/mbareg.h	/^#define	MBSR_WCKLWR	0x00000200	\/* write check low/
MBSR_WCKUP	../vaxmba/mbareg.h	/^#define	MBSR_WCKUP	0x00000400	\/* write check uppe/
MBU_BUSY	../vaxmba/mbavar.h	/^#define	MBU_BUSY	1		\/* dual port busy; wait for i/
MBU_DODATA	../vaxmba/mbavar.h	/^#define	MBU_DODATA	3		\/* data transfer ready; sta/
MBU_NEXT	../vaxmba/mbavar.h	/^#define	MBU_NEXT	0		\/* skip to next operation *\//
MBU_STARTED	../vaxmba/mbavar.h	/^#define	MBU_STARTED	2		\/* non-data transfer start/
MB_GO	../vaxmba/mbareg.h	/^#define	MB_GO		0x1$/
MB_RCOM	../vaxmba/mbareg.h	/^#define	MB_RCOM		0x38$/
MB_WCOM	../vaxmba/mbareg.h	/^#define	MB_WCOM		0x30$/
MC750_TBERR	../vax/ka750.c	/^#define MC750_TBERR	2		\/* type code of cp tbuf pa/
MC750_TBPAR	../vax/ka750.c	/^#define	MC750_TBPAR	4		\/* tbuf par bit in mcesr */
MC8200_BADIPL	../vax/ka820.c	/^#define	MC8200_BADIPL	0x01$/
MC8200_BIERR	../vax/ka820.c	/^#define	MC8200_BIERR	0x10$/
MC8200_BTAGPAR	../vax/ka820.c	/^#define	MC8200_BTAGPAR	0x20$/
MC8200_CTAGPAR	../vax/ka820.c	/^#define	MC8200_CTAGPAR	0x40$/
MC8200_DPAR	../vax/ka820.c	/^#define	MC8200_DPAR	0x08$/
MC8200_UERR	../vax/ka820.c	/^#define	MC8200_UERR	0x02$/
MC8200_UPAR	../vax/ka820.c	/^#define	MC8200_UPAR	0x04$/
MCCTL	../vax/mtpr.h	/^#define MCCTL	0x46		\/* MBOX mcc control register /
MCESR	../vax/mtpr.h	/^#define	MCESR	0x26		\/* machine check error summar/
MCHK_PANIC	../vax/cpu.h	/^#define	MCHK_PANIC	-1$/
MCHK_RECOVERED	../vax/cpu.h	/^#define	MCHK_RECOVERED	0$/
MCLALLOC	../h/mbuf.h	/^#define	MCLALLOC(m, i) \\$/
MCLBYTES	../netinet/tcp_var.h	/^#define	MCLBYTES CLBYTES	\/* XXX *\/$/
MCLFREE	../h/mbuf.h	/^#define	MCLFREE(m) { \\$/
MCLGET	../h/mbuf.h	/^#define	MCLGET(m) \\$/
MCLOFSET	../h/mbuf.h	/^#define	MCLOFSET	(MCLBYTES - 1)$/
MCLSHIFT	../h/mbuf.h	/^#define	MCLSHIFT	10$/
MCODE	../vaxuba/lpa.c	/^#define MCODE	02		\/* microcode has been loaded */
MCSR	../vax/mtpr.h	/^#define	MCSR	0x17		\/* machine check status regist/
MCVERS	../vaxuba/lpa.c	/^#define MCVERS	4		\/* microcode version *\/$/
MC_EBOX	../vax/ka860.c	/^#define	MC_EBOX		2$/
MC_FBOX	../vax/ka860.c	/^#define	MC_FBOX		1$/
MC_IBOX	../vax/ka860.c	/^#define	MC_IBOX		3$/
MC_MBOX	../vax/ka860.c	/^#define	MC_MBOX		4$/
MC_MBOX1D	../vax/ka860.c	/^#define	MC_MBOX1D	6$/
MC_TBUF	../vax/ka860.c	/^#define	MC_TBUF		5$/
MDCTL	../vax/mtpr.h	/^#define MDCTL	0x45		\/* MBOX data control register/
MDECC	../vax/mtpr.h	/^#define MDECC	0x43		\/* MBOX data ecc register *\//
MDMBUF	../h/ioctl.h	/^#define		MDMBUF		0x00100000	\/* start\/stop output/
MEET	../vaxuba/lpa.c	/^#define MEET	2<<8		\/* external event time mode */
MEETZ	../vaxuba/lpa.c	/^#define MEETZ	3<<8		\/* external event time mode f/
MEM0	../vaxuba/ikreg.h	/^#define MEM0		000000000$/
MEM1	../vaxuba/ikreg.h	/^#define MEM1		004000000$/
MEMINTVL	../vax/mem.h	/^#define	MEMINTVL	(60*10)		\/* 10 minutes *\/$/
MEMREADY	../vaxuba/psreg.h	/^#define MEMREADY	0200$/
MENA	../vax/mtpr.h	/^#define MENA	0x44		\/* MBOX error enable register /
MENABLE	../vaxuba/dn.c	/^#define	MENABLE	0x004		\/* master enable *\/$/
MERG	../vax/mtpr.h	/^#define MERG	0x47		\/* MBOX	error generator regist/
MFIE	../vaxuba/lpa.c	/^#define MFIE	0100		\/* mode flag interrupt enable /
MFREE	../h/mbuf.h	/^#define	MFREE(m, n) \\$/
MGET	../h/mbuf.h	/^#define	MGET(m, i, t) \\$/
MH_EXOS	../vaxif/if_exreg.h	/^#define	MH_EXOS		1	\/* if 1, the EXOS owns the buf/
MH_HOST	../vaxif/if_exreg.h	/^#define	MH_HOST		0	\/* if 0, the host owns the buf/
MH_OWNER	../vaxif/if_exreg.h	/^#define	MH_OWNER	1	\/* mask for status bit for own/
MIN	../h/param.h	/^#define	MIN(a,b) (((a)<(b))?(a):(b))$/
MINALLOCSIZE	../h/malloc.h	/^#define MINALLOCSIZE	(1 << MINBUCKET)$/
MINARCS	../h/gprof.h	/^#define MINARCS		50$/
MINBSIZE	../h/fs.h	/^#define MINBSIZE	4096$/
MINBUCKET	../h/param.h	/^#define MINBUCKET	4		\/* 4 => min allocation of 16/
MINDATA	../vaxif/if_qe.c	/^#define MINDATA 64$/
MINDIRSIZ	../sys/ufs_namei.c	/^#define	MINDIRSIZ (sizeof (struct dirtemplate) \/ /
MINFREE	../vax/vmparam.h	/^#define	MINFREE		(64 * 1024)$/
MINFREEFRACT	../vax/vmparam.h	/^#define	MINFREEFRACT	2$/
MINIROOTSIZE	../sys/vm_sw.c	/^#define	MINIROOTSIZE	4096$/
MINMCSLOT	../vaxif/if_exreg.h	/^#define	MINMCSLOT	1	\/* minimum multicast slot ind/
MINSEC	../vax/ka630.h	/^#define	MINSEC	60$/
ML11	../vaxmba/hp.c	/^#define	ML11(type)	((type) == HPDT_ML11A)$/
MLEN	../h/mbuf.h	/^#define	MLEN		(MSIZE-MMINOFF-MTAIL)	\/* mbuf data /
MLOCK	../h/vmmac.h	/^#define MLOCK(c) { \\$/
MMAXOFF	../h/mbuf.h	/^#define	MMAXOFF		(MSIZE-MTAIL)		\/* offset where d/
MMENBL	../vaxuba/psreg.h	/^#define MMENBL		02$/
MMINOFF	../h/mbuf.h	/^#define	MMINOFF		12			\/* mbuf header length *\/$/
MMODE	../vaxuba/psreg.h	/^#define MMODE		01400$/
MOD	../vaxuba/lp.c	/^#define	MOD		4	\/* device state has been modified /
MODE_HW	../vaxif/if_exreg.h	/^#define	MODE_HW		2	\/* hardware-only multicast add/
MODE_OFF	../vaxif/if_exreg.h	/^#define	MODE_OFF	0	\/* stop transmission and recep/
MODE_PERF	../vaxif/if_exreg.h	/^#define	MODE_PERF	1	\/* perfect multicast address /
MODE_PROM	../vaxif/if_exreg.h	/^#define	MODE_PROM	3	\/* promiscuous reception *\/$/
MOD_DMNT	../vaxif/if_dereg.h	/^#define	MOD_DMNT	0x0200		\/* Disable maintenance f/
MOD_DRDC	../vaxif/if_dereg.h	/^#define	MOD_DRDC	0x2000		\/* Disable data chaining/
MOD_DTCR	../vaxif/if_dereg.h	/^#define	MOD_DTCR	0x0008		\/* Disables CRC generati/
MOD_ECT	../vaxif/if_dereg.h	/^#define	MOD_ECT		0x0400		\/* Enable collision test/
MOD_ENAL	../vaxif/if_dereg.h	/^#define	MOD_ENAL	0x4000		\/* Enable all multicast /
MOD_HDX	../vaxif/if_dereg.h	/^#define	MOD_HDX		0x0001		\/* Half duplex mode *\/$/
MOD_LOOP	../vaxif/if_dereg.h	/^#define	MOD_LOOP	0x0004		\/* Enable internal loopb/
MOD_PROM	../vaxif/if_dereg.h	/^#define	MOD_PROM	0x8000		\/* Enable promiscuous mo/
MOD_TPAD	../vaxif/if_dereg.h	/^#define	MOD_TPAD	0x1000		\/* Transmit message pad /
MOREIO	../vaxuba/dmf.c	/^#define MOREIO 8	\/* more data for printer *\/$/
MOSTOPPED	../vaxuba/psreg.h	/^#define MOSTOPPED	0200$/
MOSTOP_REQ	../vaxuba/psreg.h	/^#define MOSTOP_REQ	010$/
MPG_CLUSTERS	../h/mbuf.h	/^#define	MPG_CLUSTERS	1		\/* put new clusters on fr/
MPG_MBUFS	../h/mbuf.h	/^#define	MPG_MBUFS	0		\/* put new mbufs on free lis/
MPSIZE	../vaxif/if_hyreg.h	/^#define MPSIZE		64	\/* "Message Proper" size *\/$/
MPULL_EXTRA	../h/mbuf.h	/^#define	MPULL_EXTRA	32$/
MRI	../vaxuba/lpa.c	/^#define MRI	1<<8		\/* repeat interval mode *\/$/
MRSP	../vax/tu.c	/^#define MRSP (cpu != VAX_750)$/
MS1_BROKE	../vax/ka820.c	/^#define	MS1_BROKE	0x00001000	\/* broken (rw) *\/$/
MS1_CNTLERR	../vax/ka820.c	/^#define	MS1_CNTLERR	0x00000200	\/* internal timing/
MS1_CRDINH	../vax/ka820.c	/^#define	MS1_CRDINH	0x00008000	\/* inhibit crd inte/
MS1_DIAGC	../vax/ka820.c	/^#define	MS1_DIAGC	0x0000007f	\/* ecc diagnostic bi/
MS1_ECCDIAG	../vax/ka820.c	/^#define	MS1_ECCDIAG	0x40000000	\/* ecc diagnostic /
MS1_ECCDISABLE	../vax/ka820.c	/^#define	MS1_ECCDISABLE	0x20000000	\/* ecc disable /
MS1_ERRSUM	../vax/ka820.c	/^#define	MS1_ERRSUM	0x80000000	\/* error summary (r/
MS1_INTLK	../vax/ka820.c	/^#define	MS1_INTLK	0x00002000	\/* interlock flag (r/
MS1_INTLV	../vax/ka820.c	/^#define	MS1_INTLV	0x00000100	\/* internally interl/
MS1_MBZ	../vax/ka820.c	/^#define	MS1_MBZ		0x00000880	\/* zero *\/$/
MS1_MEMVALID	../vax/ka820.c	/^#define	MS1_MEMVALID	0x00004000	\/* memory has bee/
MS1_MSIZEMASK	../vax/ka820.c	/^#define	MS1_MSIZEMASK	0x1ffc0000	\/* mask for memo/
MS1_MWRITEERR	../vax/ka820.c	/^#define	MS1_MWRITEERR	0x00000400	\/* rds during ma/
MS1_RAMTY256K	../vax/ka820.c	/^#define	MS1_RAMTY256K	0x00010000	\/* 256K chips */
MS1_RAMTY64K	../vax/ka820.c	/^#define	MS1_RAMTY64K	0x00000000	\/* 64K chips *\/$/
MS1_RAMTYMASK	../vax/ka820.c	/^#define	MS1_RAMTYMASK	0x00030000	\/* mask for ram /
MS2_ADDR	../vax/ka820.c	/^#define	MS2_ADDR	0x00fffe00	\/* address in error (/
MS2_ADRSERR	../vax/ka820.c	/^#define	MS2_ADRSERR	0x10000000	\/* rds due to addr/
MS2_CRDERR	../vax/ka820.c	/^#define	MS2_CRDERR	0x20000000	\/* crd error (rw) */
MS2_HIERR	../vax/ka820.c	/^#define	MS2_HIERR	0x40000000	\/* high error rate (/
MS2_INTLVADDR	../vax/ka820.c	/^#define	MS2_INTLVADDR	0x00000100	\/* error was in /
MS2_MBZ	../vax/ka820.c	/^#define	MS2_MBZ		0x0f000080	\/* zero *\/$/
MS2_RDSERR	../vax/ka820.c	/^#define	MS2_RDSERR	0x80000000	\/* rds error (rw) */
MS2_SYN	../vax/ka820.c	/^#define	MS2_SYN		0x0000007f	\/* error syndrome (ro/
MSCPT_CREDITS	../vax/mscp.h	/^#define	MSCPT_CREDITS		0x20	\/* credit notificatio/
MSCPT_DATAGRAM	../vax/mscp.h	/^#define	MSCPT_DATAGRAM		0x10	\/* error datagram */
MSCPT_MAINTENANCE	../vax/mscp.h	/^#define	MSCPT_MAINTENANCE	0xf0	\/* who knows *\/$/
MSCPT_SEQ	../vax/mscp.h	/^#define	MSCPT_SEQ		0x00	\/* sequential message *\//
MSCP_CREDITS	../vax/mscp.h	/^#define	MSCP_CREDITS(m)	((m) & 0x0f)$/
MSCP_DOCMD	../vax/mscpvar.h	/^#define	MSCP_DOCMD(mi) { \\$/
MSCP_DONE	../vax/mscpvar.h	/^#define	MSCP_DONE	0		\/* all ok *\/$/
MSCP_DONTWAIT	../vax/mscpvar.h	/^#define	MSCP_DONTWAIT	0$/
MSCP_FAILED	../vax/mscpvar.h	/^#define	MSCP_FAILED	1		\/* no go *\/$/
MSCP_INT	../vax/mscp.h	/^#define	MSCP_INT	0x40000000	\/* controller should /
MSCP_MEDIA_DRIVE	../vax/mscp.h	/^#define	MSCP_MEDIA_DRIVE(id)	((long)(id) & 0x003ff/
MSCP_MEDIA_PORT	../vax/mscp.h	/^#define	MSCP_MEDIA_PORT(id)	(((long)(id) >> 22) & /
MSCP_MID_CHAR	../vax/mscp.h	/^#define	MSCP_MID_CHAR(n, id) \\$/
MSCP_MID_ECH	../vax/mscp.h	/^#define	MSCP_MID_ECH(n, id)	(((long)(id) >> ((n) */
MSCP_MID_NUM	../vax/mscp.h	/^#define	MSCP_MID_NUM(id)	((id) & 0x7f)$/
MSCP_MINCREDITS	../vax/mscpvar.h	/^#define	MSCP_MINCREDITS	1$/
MSCP_MKDRIVE2	../vax/mscp.h	/^#define	MSCP_MKDRIVE2(a, b, n) \\$/
MSCP_MKDRIVE3	../vax/mscp.h	/^#define	MSCP_MKDRIVE3(a, b, c, n) \\$/
MSCP_MSGLEN	../vax/mscp.h	/^#define	MSCP_MSGLEN	(sizeof (struct mscp) - 4)$/
MSCP_MSGTYPE	../vax/mscp.h	/^#define	MSCP_MSGTYPE(m)	((m) & 0xf0)$/
MSCP_OWN	../vax/mscp.h	/^#define	MSCP_OWN	0x80000000	\/* controller owns th/
MSCP_RESTARTED	../vax/mscpvar.h	/^#define	MSCP_RESTARTED	2		\/* transfer restarted */
MSCP_WAIT	../vax/mscpvar.h	/^#define	MSCP_WAIT	1$/
MSG_BSIZE	../h/msgbuf.h	/^#define	MSG_BSIZE	(4096 - 3 * sizeof (long))$/
MSG_DONTROUTE	../h/socket.h	/^#define	MSG_DONTROUTE	0x4		\/* send without using /
MSG_MAGIC	../h/msgbuf.h	/^#define	MSG_MAGIC	0x063061$/
MSG_MAXIOVLEN	../h/socket.h	/^#define	MSG_MAXIOVLEN	16$/
MSG_OOB	../h/socket.h	/^#define	MSG_OOB		0x1		\/* process out-of-band data/
MSG_PEEK	../h/socket.h	/^#define	MSG_PEEK	0x2		\/* peek at incoming message/
MSI	../vaxuba/lpa.c	/^#define MSI	0<<8		\/* single interval mode *\/$/
MSIZE	../h/mbuf.h	/^#define	MSIZE		128			\/* size of an mbuf *\/$/
MSWAPX	../h/param.h	/^#define	MSWAPX	NMOUNT		\/* pseudo mount table inde/
MTAIL	../h/mbuf.h	/^#define	MTAIL		4$/
MTBSF	../h/mtio.h	/^#define MTBSF	2	\/* backward space file *\/$/
MTBSR	../h/mtio.h	/^#define MTBSR	4	\/* backward space record *\/$/
MTCACHE	../h/mtio.h	/^#define MTCACHE	8	\/* enable controller cache *\/$/
MTDS_AVAIL	../vaxmba/mtreg.h	/^#define	MTDS_AVAIL	0000200		\/* unit available *\//
MTDS_BITS	../vaxmba/mtreg.h	/^#define	MTDS_BITS	\\$/
MTDS_BOT	../vaxmba/mtreg.h	/^#define	MTDS_BOT	0002000		\/* tape at BOT *\/$/
MTDS_DSE	../vaxmba/mtreg.h	/^#define	MTDS_DSE	0000020		\/* DSE in progress *\/$/
MTDS_EOT	../vaxmba/mtreg.h	/^#define	MTDS_EOT	0001000		\/* tape at EOT *\/$/
MTDS_FPT	../vaxmba/mtreg.h	/^#define	MTDS_FPT	0000400		\/* write protected *\/$/
MTDS_MAINT	../vaxmba/mtreg.h	/^#define	MTDS_MAINT	0000040		\/* maintenance mode */
MTDS_ONL	../vaxmba/mtreg.h	/^#define	MTDS_ONL	0020000		\/* online *\/$/
MTDS_PE	../vaxmba/mtreg.h	/^#define	MTDS_PE		0004000		\/* tape set for phase e/
MTDS_PRES	../vaxmba/mtreg.h	/^#define	MTDS_PRES	0040000		\/* tape unit has power/
MTDS_RDY	../vaxmba/mtreg.h	/^#define	MTDS_RDY	0100000		\/* tape ready *\/$/
MTDS_REW	../vaxmba/mtreg.h	/^#define	MTDS_REW	0010000		\/* tape rewinding *\/$/
MTDS_SHR	../vaxmba/mtreg.h	/^#define	MTDS_SHR	0000100		\/* unit is shared *\/$/
MTDT_7CH	../vaxmba/mtreg.h	/^#define	MTDT_7CH	0010000		\/* 7 channel; always 0 /
MTDT_DRQ	../vaxmba/mtreg.h	/^#define	MTDT_DRQ	0004000		\/* drive request requir/
MTDT_MOH	../vaxmba/mtreg.h	/^#define	MTDT_MOH	0020000		\/* moving head; always /
MTDT_NSA	../vaxmba/mtreg.h	/^#define	MTDT_NSA	0100000		\/* not sector addressed/
MTDT_SPR	../vaxmba/mtreg.h	/^#define	MTDT_SPR	0002000		\/* slave present; alway/
MTDT_TAP	../vaxmba/mtreg.h	/^#define	MTDT_TAP	0040000		\/* tape; always 1 *\/$/
MTER_BADTAPE	../vaxmba/mtreg.h	/^#define	MTER_BADTAPE	027		\/* tape position lost */
MTER_BOT	../vaxmba/mtreg.h	/^#define	MTER_BOT	003		\/* unexpected BOT detected /
MTER_DONE	../vaxmba/mtreg.h	/^#define	MTER_DONE	001		\/* operation complete *\/$/
MTER_EOT	../vaxmba/mtreg.h	/^#define	MTER_EOT	004		\/* tape positioned beyond E/
MTER_EOTERR	../vaxmba/mtreg.h	/^#define	MTER_EOTERR	026		\/* EOT error *\/$/
MTER_ERROR	../vaxmba/mtreg.h	/^#define	MTER_ERROR	025		\/* error *\/$/
MTER_FAILCODE	../vaxmba/mtreg.h	/^#define	MTER_FAILCODE	0176000		\/* failure code */
MTER_FPT	../vaxmba/mtreg.h	/^#define	MTER_FPT	010		\/* write protect error *\/$/
MTER_FSHIFT	../vaxmba/mtreg.h	/^#define	MTER_FSHIFT	10		\/* shift to make units */
MTER_INTCODE	../vaxmba/mtreg.h	/^#define	MTER_INTCODE	0377		\/* mask for interrupt /
MTER_KEYFAIL	../vaxmba/mtreg.h	/^#define	MTER_KEYFAIL	077		\/* keypad entry error */
MTER_LEOT	../vaxmba/mtreg.h	/^#define	MTER_LEOT	005		\/* unexpected LEOT detecte/
MTER_LONGREC	../vaxmba/mtreg.h	/^#define	MTER_LONGREC	020		\/* long tape record *\//
MTER_MBFLT	../vaxmba/mtreg.h	/^#define	MTER_MBFLT	034		\/* Massbus fault *\/$/
MTER_NONEX	../vaxmba/mtreg.h	/^#define	MTER_NONEX	014		\/* unit does not exist */
MTER_NOOP	../vaxmba/mtreg.h	/^#define	MTER_NOOP	006		\/* no-op completed *\/$/
MTER_NOTAVL	../vaxmba/mtreg.h	/^#define	MTER_NOTAVL	012		\/* not available *\/$/
MTER_NOTCAP	../vaxmba/mtreg.h	/^#define	MTER_NOTCAP	015		\/* not capable *\/$/
MTER_NOTRDY	../vaxmba/mtreg.h	/^#define	MTER_NOTRDY	011		\/* not ready *\/$/
MTER_OFFLINE	../vaxmba/mtreg.h	/^#define	MTER_OFFLINE	013		\/* offline *\/$/
MTER_ONLINE	../vaxmba/mtreg.h	/^#define	MTER_ONLINE	017		\/* tape came online *\/$/
MTER_RDOPP	../vaxmba/mtreg.h	/^#define	MTER_RDOPP	023		\/* read opposite *\/$/
MTER_RETRY	../vaxmba/mtreg.h	/^#define	MTER_RETRY	022		\/* retry *\/$/
MTER_RWDING	../vaxmba/mtreg.h	/^#define	MTER_RWDING	007		\/* rewinding *\/$/
MTER_SHRTREC	../vaxmba/mtreg.h	/^#define	MTER_SHRTREC	021		\/* short tape record */
MTER_TM	../vaxmba/mtreg.h	/^#define	MTER_TM		002		\/* unexpected tape mark *\//
MTER_TMFLTA	../vaxmba/mtreg.h	/^#define	MTER_TMFLTA	030		\/* TM fault A *\/$/
MTER_TMFLTB	../vaxmba/mtreg.h	/^#define	MTER_TMFLTB	032		\/* TM fault B *\/$/
MTER_TUFLTA	../vaxmba/mtreg.h	/^#define	MTER_TUFLTA	031		\/* TU fault A *\/$/
MTER_UNREAD	../vaxmba/mtreg.h	/^#define	MTER_UNREAD	024		\/* unreadable *\/$/
MTFSF	../h/mtio.h	/^#define MTFSF	1	\/* forward space file *\/$/
MTFSR	../h/mtio.h	/^#define MTFSR	3	\/* forward space record *\/$/
MTID_CLR	../vaxmba/mtreg.h	/^#define	MTID_CLR	0040000		\/* controller clear *\//
MTID_RDY	../vaxmba/mtreg.h	/^#define	MTID_RDY	0100000		\/* controller ready *\//
MTIOCEEOT	../h/mtio.h	/^#define MTIOCEEOT	_IO('m', 4)			\/* enable EOT err/
MTIOCGET	../h/mtio.h	/^#define	MTIOCGET	_IOR('m', 2, struct mtget)	\/* ge/
MTIOCIEOT	../h/mtio.h	/^#define MTIOCIEOT	_IO('m', 3)			\/* ignore EOT err/
MTIOCTOP	../h/mtio.h	/^#define	MTIOCTOP	_IOW('m', 1, struct mtop)	\/* do /
MTNOCACHE	../h/mtio.h	/^#define MTNOCACHE 9	\/* disable controller cache */
MTNOP	../h/mtio.h	/^#define MTNOP	7	\/* no operation, sets status only/
MTOCL	../h/mbuf.h	/^#define	MTOCL(m)	((struct mbuf *)(mtod((m), int) &/
MTOFFL	../h/mtio.h	/^#define MTOFFL	6	\/* rewind and put the drive offl/
MTREW	../h/mtio.h	/^#define MTREW	5	\/* rewind *\/$/
MTTIMEOUT	../vaxmba/mt.c	/^#define MTTIMEOUT	10000		\/* loop limit for contro/
MTUNIT	../vaxmba/mt.c	/^#define MTUNIT(dev)	(muinfo[MUUNIT(dev)]->ms_ctlr)/
MTWEOF	../h/mtio.h	/^#define MTWEOF	0	\/* write an end-of-file record */
MT_ATABLE	../h/mbuf.h	/^#define	MT_ATABLE	7	\/* address resolution tables /
MT_CLS	../vaxmba/mtreg.h	/^#define	MT_CLS		MT_CLSPE	\/* generic close file */
MT_CLSGCR	../vaxmba/mtreg.h	/^#define	MT_CLSGCR	000042		\/* close file GCR *\/$/
MT_CLSPE	../vaxmba/mtreg.h	/^#define	MT_CLSPE	000040		\/* close file PE *\/$/
MT_DATA	../h/mbuf.h	/^#define	MT_DATA		1	\/* dynamic (data) allocation */
MT_DSE	../vaxmba/mtreg.h	/^#define	MT_DSE		000012		\/* data security erase */
MT_ERASE	../vaxmba/mtreg.h	/^#define	MT_ERASE	MT_ERGPE	\/* generic erase tape */
MT_ERGGCR	../vaxmba/mtreg.h	/^#define	MT_ERGGCR	000036		\/* erase tape, set GCR /
MT_ERGPE	../vaxmba/mtreg.h	/^#define	MT_ERGPE	000034		\/* erase tape, set PE */
MT_EXSNS	../vaxmba/mtreg.h	/^#define	MT_EXSNS	000072		\/* read extended sense e/
MT_FREE	../h/mbuf.h	/^#define	MT_FREE		0	\/* should be on free list *\/$/
MT_FTABLE	../h/mbuf.h	/^#define	MT_FTABLE	11	\/* fragment reassembly heade/
MT_GCR	../vaxmba/mtreg.h	/^#define	MT_GCR		000002		\/* make generic ops GCR o/
MT_GO	../vaxmba/mtreg.h	/^#define	MT_GO		000001		\/* go bit *\/$/
MT_HEADER	../h/mbuf.h	/^#define	MT_HEADER	2	\/* packet header *\/$/
MT_HTABLE	../h/mbuf.h	/^#define	MT_HTABLE	6	\/* IMP host tables *\/$/
MT_IFADDR	../h/mbuf.h	/^#define	MT_IFADDR	13	\/* interface address *\/$/
MT_ISAR	../h/mtio.h	/^#define	MT_ISAR		0x07		\/* SUN *\/$/
MT_ISCPC	../h/mtio.h	/^#define	MT_ISCPC	0x06		\/* SUN *\/$/
MT_ISCY	../h/mtio.h	/^#define	MT_ISCY		0x09		\/* CCI Cipher *\/$/
MT_ISHT	../h/mtio.h	/^#define	MT_ISHT		0x02		\/* TM03 Massbus: TE16, TU4/
MT_ISMT	../h/mtio.h	/^#define	MT_ISMT		0x04		\/* TM78\/TU78 Massbus *\/$/
MT_ISTM	../h/mtio.h	/^#define	MT_ISTM		0x03		\/* TM11\/TE10 Unibus *\/$/
MT_ISTMSCP	../h/mtio.h	/^#define	MT_ISTMSCP	0x08		\/* DEC TMSCP protocol (T/
MT_ISTS	../h/mtio.h	/^#define	MT_ISTS		0x01		\/* TS-11 *\/$/
MT_ISUT	../h/mtio.h	/^#define	MT_ISUT		0x05		\/* SI TU-45 emulation on U/
MT_NOOP	../vaxmba/mtreg.h	/^#define	MT_NOOP		000002		\/* no operation *\/$/
MT_PCB	../h/mbuf.h	/^#define	MT_PCB		4	\/* protocol control block *\/$/
MT_READ	../vaxmba/mtreg.h	/^#define	MT_READ		000070		\/* read forward *\/$/
MT_READREV	../vaxmba/mtreg.h	/^#define	MT_READREV	000076		\/* read reverse *\/$/
MT_REW	../vaxmba/mtreg.h	/^#define	MT_REW		000006		\/* rewind *\/$/
MT_RIGHTS	../h/mbuf.h	/^#define	MT_RIGHTS	12	\/* access rights *\/$/
MT_RTABLE	../h/mbuf.h	/^#define	MT_RTABLE	5	\/* routing tables *\/$/
MT_SENSE	../vaxmba/mtreg.h	/^#define	MT_SENSE	000010		\/* sense *\/$/
MT_SFLEOT	../vaxmba/mtreg.h	/^#define	MT_SFLEOT	000046		\/* space forward file, /
MT_SFORW	../vaxmba/mtreg.h	/^#define	MT_SFORW	000020		\/* space forward record /
MT_SFORWE	../vaxmba/mtreg.h	/^#define	MT_SFORWE	000030		\/* space forward either/
MT_SFORWF	../vaxmba/mtreg.h	/^#define	MT_SFORWF	000024		\/* space forward file */
MT_SLEOT	../vaxmba/mtreg.h	/^#define	MT_SLEOT	000044		\/* space to logical EOT /
MT_SOCKET	../h/mbuf.h	/^#define	MT_SOCKET	3	\/* socket structure *\/$/
MT_SONAME	../h/mbuf.h	/^#define	MT_SONAME	8	\/* socket name *\/$/
MT_SOOPTS	../h/mbuf.h	/^#define	MT_SOOPTS	10	\/* socket options *\/$/
MT_SREV	../vaxmba/mtreg.h	/^#define	MT_SREV		000022		\/* space reverse record /
MT_SREVE	../vaxmba/mtreg.h	/^#define	MT_SREVE	000032		\/* space reverse either /
MT_SREVF	../vaxmba/mtreg.h	/^#define	MT_SREVF	000026		\/* space reverse file */
MT_UNLOAD	../vaxmba/mtreg.h	/^#define	MT_UNLOAD	000004		\/* unload tape *\/$/
MT_WCHFWD	../vaxmba/mtreg.h	/^#define	MT_WCHFWD	000050		\/* write check forward /
MT_WCHREV	../vaxmba/mtreg.h	/^#define	MT_WCHREV	000056		\/* write check reverse /
MT_WRITE	../vaxmba/mtreg.h	/^#define	MT_WRITE	MT_WRITEPE	\/* generic write *\/$/
MT_WRITEGCR	../vaxmba/mtreg.h	/^#define	MT_WRITEGCR	000062		\/* write group coded /
MT_WRITEPE	../vaxmba/mtreg.h	/^#define	MT_WRITEPE	000060		\/* write phase encoded/
MT_WTM	../vaxmba/mtreg.h	/^#define	MT_WTM		MT_WTMPE	\/* generic write tape ma/
MT_WTMGCR	../vaxmba/mtreg.h	/^#define	MT_WTMGCR	000016		\/* write GCR tape mark /
MT_WTMPE	../vaxmba/mtreg.h	/^#define	MT_WTMPE	000014		\/* write phase encoded t/
MUNLOCK	../h/vmmac.h	/^#define MUNLOCK(c) { \\$/
MUUNIT	../vaxmba/mt.c	/^#define	MUUNIT(dev)	(minor(dev)&03)$/
M_AVM_ALLCD	../vax/mscp.h	/^#define	M_AVM_ALLCD	0x0002	\/* All class drivers */
M_AVM_SPINDOWN	../vax/mscp.h	/^#define	M_AVM_SPINDOWN	0x0001	\/* Spin down *\/$/
M_CF_576	../vax/mscp.h	/^#define	M_CF_576	0x01	\/* 576 byte sectors *\/$/
M_CF_ATTN	../vax/mscp.h	/^#define	M_CF_ATTN	0x80	\/* Enable attention messag/
M_CF_MISC	../vax/mscp.h	/^#define	M_CF_MISC	0x40	\/* Enable miscellaneous er/
M_CF_MLTHS	../vax/mscp.h	/^#define	M_CF_MLTHS	0x04	\/* Multi-host *\/$/
M_CF_OTHER	../vax/mscp.h	/^#define	M_CF_OTHER	0x20	\/* Enable other host's er/
M_CF_SHADW	../vax/mscp.h	/^#define	M_CF_SHADW	0x02	\/* Shadowing *\/$/
M_CF_THIS	../vax/mscp.h	/^#define	M_CF_THIS	0x10	\/* Enable this host's erro/
M_COPYALL	../h/mbuf.h	/^#define	M_COPYALL	1000000000$/
M_CRED	../h/malloc.h	/^#define M_CRED		16	\/* credentials *\/$/
M_DEVBUF	../h/malloc.h	/^#define M_DEVBUF	2	\/* device driver memory *\/$/
M_DONTWAIT	../h/mbuf.h	/^#define	M_DONTWAIT	0$/
M_EF_BBLKR	../vax/mscp.h	/^#define	M_EF_BBLKR	0x80	\/* Bad block reported *\//
M_EF_BBLKU	../vax/mscp.h	/^#define	M_EF_BBLKU	0x40	\/* Bad block unreported */
M_EF_EOT	../vax/tmscp.h	/^#define	M_EF_EOT	0010	\/* End of tape encountered /
M_EF_ERLOG	../vax/mscp.h	/^#define	M_EF_ERLOG	0x20	\/* Error log generated */
M_EF_PLS	../vax/tmscp.h	/^#define	M_EF_PLS	0004	\/* Position lost *\/$/
M_EF_SEREX	../vax/mscp.h	/^#define	M_EF_SEREX	0x10	\/* Serious exception *\/$/
M_FLM_FLUSHENU	../vax/mscp.h	/^#define	M_FLM_FLUSHENU	0x0001	\/* Flush entire uni/
M_FLM_VOLATILE	../vax/mscp.h	/^#define	M_FLM_VOLATILE	0x0002	\/* Volatile only */
M_FM_BUSADDR	../vax/mscp.h	/^#define	M_FM_BUSADDR	0x01	\/* Host memory access e/
M_FM_CNTERR	../vax/tmscp.h	/^#define	M_FM_CNTERR	0	\/* Controller error *\/$/
M_FM_CTLRERR	../vax/mscp.h	/^#define	M_FM_CTLRERR	0x00	\/* Controller error *\//
M_FM_DISKTRN	../vax/mscp.h	/^#define	M_FM_DISKTRN	0x02	\/* Disk transfer error /
M_FM_SDI	../vax/mscp.h	/^#define	M_FM_SDI	0x03	\/* SDI error *\/$/
M_FM_SMLDSK	../vax/mscp.h	/^#define	M_FM_SMLDSK	0x04	\/* Small disk error *\/$/
M_FM_STIDEL	../vax/tmscp.h	/^#define	M_FM_STIDEL	7	\/* STI drive error log *\/$/
M_FM_STIERR	../vax/tmscp.h	/^#define	M_FM_STIERR	6	\/* STI communication or com/
M_FM_STIFEL	../vax/tmscp.h	/^#define	M_FM_STIFEL   010	\/* STI formatter error /
M_FM_TAPETRN	../vax/tmscp.h	/^#define	M_FM_TAPETRN	5	\/* Tape transfer error *\//
M_FREE	../h/malloc.h	/^#define	M_FREE		0	\/* should be on free list *\/$/
M_FTABLE	../h/malloc.h	/^#define	M_FTABLE	7	\/* fragment reassembly header /
M_GPROF	../h/malloc.h	/^#define M_GPROF		13	\/* kernel profiling buffer */
M_GUM_NEXTUNIT	../vax/mscp.h	/^#define	M_GUM_NEXTUNIT	0x0001	\/* Next unit *\/$/
M_HASCL	../h/mbuf.h	/^#define	M_HASCL(m)	((m)->m_off >= MSIZE)$/
M_HTABLE	../h/malloc.h	/^#define	M_HTABLE	6	\/* IMP host tables *\/$/
M_IFADDR	../h/malloc.h	/^#define	M_IFADDR	9	\/* interface address *\/$/
M_IOCTLOPS	../h/malloc.h	/^#define M_IOCTLOPS	14	\/* ioctl data buffer *\/$/
M_LAST	../h/malloc.h	/^#define M_LAST		50$/
M_LF_CONT	../vax/mscp.h	/^#define	M_LF_CONT	0x40	\/* Operation continuing */
M_LF_SQNRS	../vax/mscp.h	/^#define	M_LF_SQNRS	0x01	\/* Sequence number reset /
M_LF_SUCC	../vax/mscp.h	/^#define	M_LF_SUCC	0x80	\/* Operation successful */
M_MBUF	../h/malloc.h	/^#define M_MBUF		1	\/* mbuf *\/$/
M_MD_ALLCD	../vax/tmscp.h	/^#define	M_MD_ALLCD	0000002		\/* All class drivers /
M_MD_CLSEX	../vax/mscp.h	/^#define	M_MD_CLSEX	0x2000	\/* Clear serious except/
M_MD_COMP	../vax/mscp.h	/^#define	M_MD_COMP	0x4000	\/* Compare *\/$/
M_MD_DLEOT	../vax/tmscp.h	/^#define	M_MD_DLEOT	0000200		\/* Delete LEOT *\/$/
M_MD_ERROR	../vax/mscp.h	/^#define	M_MD_ERROR	0x1000	\/* Force error *\/$/
M_MD_EXCAC	../vax/tmscp.h	/^#define	M_MD_EXCAC	0000040		\/* Exclusive access */
M_MD_EXPRS	../vax/mscp.h	/^#define	M_MD_EXPRS	0x8000	\/* Express request *\/$/
M_MD_IMMED	../vax/tmscp.h	/^#define	M_MD_IMMED	0000100		\/* Immediate completi/
M_MD_NXUNT	../vax/tmscp.h	/^#define	M_MD_NXUNT	0000001		\/* Next unit *\/$/
M_MD_OBJCT	../vax/tmscp.h	/^#define	M_MD_OBJCT	0000004		\/* object count *\/$/
M_MD_REVRS	../vax/tmscp.h	/^#define	M_MD_REVRS	0000010		\/* reverse *\/$/
M_MD_REWND	../vax/tmscp.h	/^#define	M_MD_REWND	0000002		\/* rewind *\/$/
M_MD_SCCHH	../vax/mscp.h	/^#define	M_MD_SCCHH	0x0800	\/* Suppress caching (hi/
M_MD_SCCHL	../vax/mscp.h	/^#define	M_MD_SCCHL	0x0400	\/* Suppress caching (lo/
M_MD_SECOR	../vax/mscp.h	/^#define	M_MD_SECOR	0x0200	\/* Suppress error corre/
M_MD_SEREC	../vax/mscp.h	/^#define	M_MD_SEREC	0x0100	\/* Suppress error recov/
M_MD_SSHDW	../vax/mscp.h	/^#define	M_MD_SSHDW	0x0080	\/* Suppress shadowing */
M_MD_STWRP	../vax/tmscp.h	/^#define	M_MD_STWRP	0000004		\/* Set write protect /
M_MD_UNLOD	../vax/tmscp.h	/^#define	M_MD_UNLOD	0000020		\/* Unload *\/$/
M_MD_WBKNV	../vax/mscp.h	/^#define	M_MD_WBKNV	0x0040	\/* Write back (non-vola/
M_MD_WBKVL	../vax/mscp.h	/^#define	M_MD_WBKVL	0x0020	\/* Write back (volatile/
M_MD_WRSEQ	../vax/mscp.h	/^#define	M_MD_WRSEQ	0x0010	\/* Write shadow set one/
M_NAMEI	../h/malloc.h	/^#define M_NAMEI		12	\/* namei path name buffer *\//
M_NOWAIT	../h/malloc.h	/^#define M_NOWAIT	0x0001$/
M_OFFLINE_DUPLICATE	../vax/mscp.h	/^#define	M_OFFLINE_DUPLICATE	(4 << 5) \/* duplicate/
M_OFFLINE_INDIAGNOSTIC	../vax/mscp.h	/^#define	M_OFFLINE_INDIAGNOSTIC	(8 << 5) \/* disabl/
M_OFFLINE_INOPERATIVE	../vax/mscp.h	/^#define	M_OFFLINE_INOPERATIVE	(2 << 5) \/* inopera/
M_OFFLINE_UNKNOWN	../vax/mscp.h	/^#define	M_OFFLINE_UNKNOWN	(0 << 5) \/* unknown or /
M_OFFLINE_UNMOUNTED	../vax/mscp.h	/^#define	M_OFFLINE_UNMOUNTED	(1 << 5) \/* unmounted/
M_OLM_IGNMF	../vax/mscp.h	/^#define	M_OLM_IGNMF	0x0002	\/* Ignore media format/
M_OLM_RIP	../vax/mscp.h	/^#define	M_OLM_RIP	0x0001	\/* Allow self destructio/
M_OP_ABORT	../vax/mscp.h	/^#define	M_OP_ABORT	0x01	\/* Abort command *\/$/
M_OP_ACCES	../vax/tmscp.h	/^#define	M_OP_ACCES	0020	\/* Access command *\/$/
M_OP_ACCESS	../vax/mscp.h	/^#define	M_OP_ACCESS	0x10	\/* Access command *\/$/
M_OP_ACCPATH	../vax/mscp.h	/^#define	M_OP_ACCPATH	0x42	\/* Access path attentio/
M_OP_ACPTH	../vax/tmscp.h	/^#define	M_OP_ACPTH	0102	\/* Access path attention /
M_OP_AVAIL	../vax/tmscp.h	/^#define	M_OP_AVAIL	0010	\/* Available command *\/$/
M_OP_AVAILABLE	../vax/mscp.h	/^#define	M_OP_AVAILABLE	0x08	\/* Available command /
M_OP_AVAILATTN	../vax/mscp.h	/^#define	M_OP_AVAILATTN	0x40	\/* Available attentio/
M_OP_AVATN	../vax/tmscp.h	/^#define	M_OP_AVATN	0100	\/* Available attention me/
M_OP_CMPCD	../vax/tmscp.h	/^#define	M_OP_CMPCD	0021	\/* Compare controller dat/
M_OP_COMP	../vax/tmscp.h	/^#define	M_OP_COMP	0040	\/* Compare host data comma/
M_OP_COMPCD	../vax/mscp.h	/^#define	M_OP_COMPCD	0x11	\/* Compare controller da/
M_OP_COMPHD	../vax/mscp.h	/^#define	M_OP_COMPHD	0x20	\/* Compare host data com/
M_OP_DTACCPATH	../vax/mscp.h	/^#define	M_OP_DTACCPATH	0x0b	\/* Determine access p/
M_OP_DTACP	../vax/tmscp.h	/^#define	M_OP_DTACP	0013	\/* Determine access paths/
M_OP_DUPUN	../vax/tmscp.h	/^#define	M_OP_DUPUN	0101	\/* Duplicate unit number /
M_OP_DUPUNIT	../vax/mscp.h	/^#define	M_OP_DUPUNIT	0x41	\/* Duplicate unit numbe/
M_OP_END	../vax/mscp.h	/^#define	M_OP_END	0x80	\/* End message flag *\/$/
M_OP_ERASE	../vax/mscp.h	/^#define	M_OP_ERASE	0x12	\/* Erase command *\/$/
M_OP_ERGAP	../vax/tmscp.h	/^#define M_OP_ERGAP	0026	\/* Erase gap command *\/$/
M_OP_FLUSH	../vax/mscp.h	/^#define	M_OP_FLUSH	0x13	\/* Flush command *\/$/
M_OP_GETCMDST	../vax/mscp.h	/^#define	M_OP_GETCMDST	0x02	\/* Get command status /
M_OP_GETUNITST	../vax/mscp.h	/^#define	M_OP_GETUNITST	0x03	\/* Get unit status co/
M_OP_GTCMD	../vax/tmscp.h	/^#define	M_OP_GTCMD	0002	\/* Get command status com/
M_OP_GTUNT	../vax/tmscp.h	/^#define	M_OP_GTUNT	0003	\/* Get unit status comman/
M_OP_ONLIN	../vax/tmscp.h	/^#define	M_OP_ONLIN	0011	\/* Online command *\/$/
M_OP_ONLINE	../vax/mscp.h	/^#define	M_OP_ONLINE	0x09	\/* Online command *\/$/
M_OP_READ	../vax/mscp.h	/^#define	M_OP_READ	0x21	\/* Read command *\/$/
M_OP_REPLACE	../vax/mscp.h	/^#define	M_OP_REPLACE	0x14	\/* Replace command *\/$/
M_OP_REPOS	../vax/tmscp.h	/^#define	M_OP_REPOS	0045	\/* Reposition command *\//
M_OP_SEREX	../vax/mscp.h	/^#define	M_OP_SEREX	0x07	\/* Serious exception end /
M_OP_SETCTLRC	../vax/mscp.h	/^#define	M_OP_SETCTLRC	0x04	\/* Set controller char/
M_OP_SETUNITC	../vax/mscp.h	/^#define	M_OP_SETUNITC	0x0a	\/* Set unit characteri/
M_OP_STCON	../vax/tmscp.h	/^#define	M_OP_STCON	0004	\/* Set controller charact/
M_OP_STUNT	../vax/tmscp.h	/^#define	M_OP_STUNT	0012	\/* Set unit characteristi/
M_OP_WRITE	../vax/mscp.h	/^#define	M_OP_WRITE	0x22	\/* Write command *\/$/
M_OP_WRITM	../vax/tmscp.h	/^#define	M_OP_WRITM	0044	\/* Write tape mark comman/
M_OSM_ALTERHI	../vax/mscp.h	/^#define	M_OSM_ALTERHI	0x0020	\/* Alter host identi/
M_OSM_CLEARWBL	../vax/mscp.h	/^#define	M_OSM_CLEARWBL	0x0008	\/* Clear write-back/
M_OSM_SETWRPROT	../vax/mscp.h	/^#define	M_OSM_SETWRPROT	0x0004	\/* Set write prote/
M_OSM_SHADOWSP	../vax/mscp.h	/^#define	M_OSM_SHADOWSP	0x0010	\/* Shadow unit spec/
M_PCB	../h/malloc.h	/^#define	M_PCB		4	\/* protocol control block *\/$/
M_RPM_PRIMARY	../vax/mscp.h	/^#define	M_RPM_PRIMARY	0x0001	\/* Primary replaceme/
M_RTABLE	../h/malloc.h	/^#define	M_RTABLE	5	\/* routing tables *\/$/
M_SOCKET	../h/malloc.h	/^#define	M_SOCKET	3	\/* socket structure *\/$/
M_SONAME	../h/malloc.h	/^#define	M_SONAME	11	\/* socket name *\/$/
M_SOOPTS	../h/malloc.h	/^#define	M_SOOPTS	10	\/* socket options *\/$/
M_ST_ABORTED	../vax/mscp.h	/^#define	M_ST_ABORTED	0x02	\/* Command aborted *\/$/
M_ST_ABRTD	../vax/tmscp.h	/^#define	M_ST_ABRTD	002		\/* Command aborted *\/$/
M_ST_AVAILABLE	../vax/mscp.h	/^#define	M_ST_AVAILABLE	0x04	\/* Unit available *\//
M_ST_AVLBL	../vax/tmscp.h	/^#define	M_ST_AVLBL	004		\/* Unit available *\/$/
M_ST_BOT	../vax/tmscp.h	/^#define	M_ST_BOT	015		\/* BOT encountered *\/$/
M_ST_CNTLR	../vax/tmscp.h	/^#define	M_ST_CNTLR	012		\/* Controller error *\/$/
M_ST_COMP	../vax/tmscp.h	/^#define	M_ST_COMP	007		\/* Compare error *\/$/
M_ST_COMPERR	../vax/mscp.h	/^#define	M_ST_COMPERR	0x07	\/* Compare error *\/$/
M_ST_CTLRERR	../vax/mscp.h	/^#define	M_ST_CTLRERR	0x0a	\/* Controller error *\//
M_ST_DATA	../vax/tmscp.h	/^#define	M_ST_DATA	010		\/* Data error *\/$/
M_ST_DATAERR	../vax/mscp.h	/^#define	M_ST_DATAERR	0x08	\/* Data error *\/$/
M_ST_DIAG	../vax/mscp.h	/^#define	M_ST_DIAG	0x1f	\/* Message from an interna/
M_ST_DRIVE	../vax/tmscp.h	/^#define	M_ST_DRIVE	013		\/* Drive error *\/$/
M_ST_DRIVEERR	../vax/mscp.h	/^#define	M_ST_DRIVEERR	0x0b	\/* Drive error *\/$/
M_ST_FMTER	../vax/tmscp.h	/^#define	M_ST_FMTER	014		\/* Formatter error *\/$/
M_ST_HOSTBUFERR	../vax/mscp.h	/^#define	M_ST_HOSTBUFERR	0x09	\/* Host buffer acces/
M_ST_HSTBF	../vax/tmscp.h	/^#define	M_ST_HSTBF	011		\/* Host buffer access err/
M_ST_ICMD	../vax/tmscp.h	/^#define	M_ST_ICMD	001		\/* Invalid command *\/$/
M_ST_INVALCMD	../vax/mscp.h	/^#define	M_ST_INVALCMD	0x01	\/* Invalid command *\//
M_ST_LED	../vax/tmscp.h	/^#define	M_ST_LED	023		\/* LEOT detected *\/$/
M_ST_MASK	../vax/mscp.h	/^#define	M_ST_MASK	0x1f	\/* Status code mask *\/$/
M_ST_MFMTERR	../vax/mscp.h	/^#define	M_ST_MFMTERR	0x05	\/* Media format error */
M_ST_OFFLINE	../vax/mscp.h	/^#define	M_ST_OFFLINE	0x03	\/* Unit offline *\/$/
M_ST_OFFLN	../vax/tmscp.h	/^#define	M_ST_OFFLN	003		\/* Unit offline *\/$/
M_ST_PLOST	../vax/tmscp.h	/^#define	M_ST_PLOST	021		\/* Position lost *\/$/
M_ST_RDTRN	../vax/tmscp.h	/^#define	M_ST_RDTRN	020		\/* Record data truncated /
M_ST_SEX	../vax/tmscp.h	/^#define	M_ST_SEX	022		\/* Serious exception *\/$/
M_ST_SUCC	../vax/tmscp.h	/^#define	M_ST_SUCC	000		\/* Success *\/$/
M_ST_SUCCESS	../vax/mscp.h	/^#define	M_ST_SUCCESS	0x00	\/* Success *\/$/
M_ST_TAPEM	../vax/tmscp.h	/^#define	M_ST_TAPEM	016		\/* Tape mark encountered /
M_ST_WRPROT	../vax/mscp.h	/^#define	M_ST_WRPROT	0x06	\/* Write protected *\/$/
M_ST_WRTPR	../vax/tmscp.h	/^#define	M_ST_WRTPR	006		\/* Write protected *\/$/
M_SUPERBLK	../h/malloc.h	/^#define M_SUPERBLK	15	\/* super block data *\/$/
M_TEMP	../h/malloc.h	/^#define M_TEMP		49	\/* misc temporary data buffers/
M_TF_800	../vax/tmscp.h	/^#define	M_TF_800	001	\/* NRZI 800 bpi *\/$/
M_TF_BLK	../vax/tmscp.h	/^#define	M_TF_BLK	010	\/* Cartridge Block Mode *\/$/
M_TF_GCR	../vax/tmscp.h	/^#define	M_TF_GCR	004	\/* Group Code Recording 6250/
M_TF_PE	../vax/tmscp.h	/^#define	M_TF_PE		002	\/* Phase Encoded 1600 bpi */
M_UF_576	../vax/mscp.h	/^#define	M_UF_576	0x0004	\/* 576 byte sectors *\/$/
M_UF_CMPRD	../vax/mscp.h	/^#define	M_UF_CMPRD	0x0001	\/* Compare reads *\/$/
M_UF_CMPWR	../vax/mscp.h	/^#define	M_UF_CMPWR	0x0002	\/* Compare writes *\/$/
M_UF_INACT	../vax/mscp.h	/^#define	M_UF_INACT	0x4000	\/* Inactive shadow set /
M_UF_REPLC	../vax/mscp.h	/^#define	M_UF_REPLC	0x8000	\/* Controller initiated/
M_UF_RMVBL	../vax/mscp.h	/^#define	M_UF_RMVBL	0x0080	\/* Removable media *\/$/
M_UF_SCCHH	../vax/mscp.h	/^#define	M_UF_SCCHH	0x8000	\/* Suppress caching (hi/
M_UF_SCCHL	../vax/mscp.h	/^#define	M_UF_SCCHL	0x4000	\/* Suppress caching (lo/
M_UF_VARSP	../vax/tmscp.h	/^#define	M_UF_VARSP	0000020		\/* Variable speed uni/
M_UF_VSMSU	../vax/tmscp.h	/^#define	M_UF_VSMSU	0000040		\/* Variable speed mod/
M_UF_WBKNV	../vax/mscp.h	/^#define	M_UF_WBKNV	0x0040	\/* Write back (non-vola/
M_UF_WRTPH	../vax/mscp.h	/^#define	M_UF_WRTPH	0x2000	\/* Write protect (hardw/
M_UF_WRTPS	../vax/mscp.h	/^#define	M_UF_WRTPS	0x1000	\/* Write protect (softw/
M_WAIT	../h/mbuf.h	/^#define	M_WAIT		1$/
M_WAITOK	../h/malloc.h	/^#define M_WAITOK	0x0000$/
M_ZOMBIE	../h/malloc.h	/^#define	M_ZOMBIE	8	\/* zombie proc status *\/$/
Mgenassym	../vax/genassym.c	/^main()$/
Minit_main	../sys/init_main.c	/^main(firstaddr)$/
NBBY	../h/types.h	/^#define	NBBY	8		\/* number of bits in a byte *\/$/
NBDP730	../vaxuba/ubareg.h	/^#define	NBDP730		0$/
NBDP750	../vaxuba/ubareg.h	/^#define	NBDP750		3$/
NBDP780	../vaxuba/ubareg.h	/^#define	NBDP780		15$/
NBDP8600	../vaxuba/ubareg.h	/^#define	NBDP8600	15$/
NBDPBUA	../vaxuba/ubareg.h	/^#define	NBDPBUA		5$/
NBI	../vaxuba/lpa.c	/^#define NBI	0003400		\/* next buffer index *\/$/
NBIG	../sys/vm_sched.c	/^#define	NBIG	4$/
NBPG	../vax/machparam.h	/^#define	NBPG		512		\/* bytes\/page *\/$/
NBPS	../vaxuba/rx.c	/^#define	NBPS	(DDSTATE ? 256 : 128)		\/* # bytes pe/
NBPW	../h/param.h	/^#define	NBPW	sizeof(int)	\/* number of bytes in an/
NCARGS	../h/param.h	/^#define	NCARGS	20480		\/* # characters in exec arg/
NCHHASH	../sys/ufs_namei.c	/^#define	NCHHASH		32	\/* size of hash table *\/$/
NCHNAMLEN	../h/namei.h	/^#define	NCHNAMLEN	15	\/* maximum name segment leng/
NCL_INIT	../sys/uipc_mbuf.c	/^#define NCL_INIT	(4096\/CLBYTES)$/
NCMD	../vaxuba/tmscp.c	/^#define NCMD    (1<<NCMDL2)$/
NCMDL2	../vaxuba/tmscp.c	/^#define NCMDL2  3               \/* log2 number of/
NCMDS	../vaxif/if_dmc.c	/^#define NCMDS	(NRCV+NXMT+4)	\/* size of command qu/
NCODES	../vax/kdb_machdep.c	/^#define	NCODES	(sizeof (codenames) \/ sizeof (code/
NDADDR	../h/inode.h	/^#define	NDADDR	12		\/* direct addresses in inode */
NDDATA	../h/disklabel.h	/^#define NDDATA 5$/
NDDNCH	../vaxif/if_ddnvar.h	/^#define NDDNCH		32		\/* number of X.25 channels */
NDHULINE	../vaxuba/dhu.c	/^#define	NDHULINE 	(NDHU*16)$/
NDMAP	../h/dmap.h	/^#define	NDMAP 		38	\/* size of the swap area map */
NDMF_LP	../vaxuba/dmf.c	/^#define	NDMF_LP	NDMF$/
NDMON	../h/vmmeter.h	/^#define	NDMON	128$/
NDPC	../vaxuba/uu.c	/^#define	NDPC	02		\/* drives per controller *\/$/
NDQHASH	../sys/quota_kern.c	/^#define	NDQHASH		51		\/* a smallish prime *\/$/
NDZLINE	../vaxuba/dz.c	/^#define	NDZLINE 	(NDZ*8)$/
NETISR_IMP	../net/netisr.h	/^#define	NETISR_IMP	3		\/* same as AF_IMPLINK *\/$/
NETISR_IP	../net/netisr.h	/^#define	NETISR_IP	2		\/* same as AF_INET *\/$/
NETISR_NS	../net/netisr.h	/^#define	NETISR_NS	6		\/* same as AF_NS *\/$/
NETISR_RAW	../net/netisr.h	/^#define	NETISR_RAW	0		\/* same as AF_UNSPEC *\/$/
NETLDISC	../h/ioctl.h	/^#define	NETLDISC	1		\/* line discip for berk net */
NEW	../vax/kdb_opset.c	/^#define	NEW	1$/
NEWLINE	../h/tty.h	/^#define	NEWLINE		3$/
NEW_BROADCAST	../vaxif/if_vv.h	/^#define	NEW_BROADCAST		\/* new chip for broadcast /
NEX730	../vax/nexus.h	/^#define	NEX730	((struct nexus *)0xf20000)$/
NEX750	../vax/nexus.h	/^#define	NEX750	((struct nexus *)0xf20000)$/
NEX780	../vax/nexus.h	/^#define	NEX780	((struct nexus *)0x20000000)$/
NEXA8600	../vax/nexus.h	/^#define	NEXA8600	((struct nexus *)(0x20000000))$/
NEXB8600	../vax/nexus.h	/^#define	NEXB8600	((struct nexus *)(0x22000000))$/
NEXEM	../vaxuba/psreg.h	/^#define NEXEM		02$/
NEXFLT_BITS	../vax/nexus.h	/^#define	NEXFLT_BITS \\$/
NEXMPAGES	../vaxuba/psreg.h	/^#define NEXMPAGES	(256*2)$/
NEXSIZE	../vax/nexus.h	/^#define	NEXSIZE	0x2000$/
NEXTBIT	../vaxif/if_ec.c	/^#define	NEXTBIT	addr->ec_rcr = EC_AROM|EC_ASTEP; a/
NEX_ANY	../vax/nexus.h	/^#define	NEX_ANY		0		\/* pseudo for handling 11\/75/
NEX_APD	../vax/nexus.h	/^#define	NEX_APD		(1<<23)		\/* adaptor power down */
NEX_APU	../vax/nexus.h	/^#define	NEX_APU		(1<<22)		\/* adaptor power up *\//
NEX_CFGFLT	../vax/nexus.h	/^#define	NEX_CFGFLT	(0xfc000000)$/
NEX_CI	../vax/nexus.h	/^#define	NEX_CI		0x38		\/* CI adaptor *\/$/
NEX_DR32	../vax/nexus.h	/^#define	NEX_DR32	0x30		\/* DR32 user i'face to SBI/
NEX_MBA	../vax/nexus.h	/^#define	NEX_MBA		0x20		\/* Massbus adaptor *\/$/
NEX_MEM16	../vax/nexus.h	/^#define	NEX_MEM16	0x10		\/* 16K chips, non-interle/
NEX_MEM16I	../vax/nexus.h	/^#define	NEX_MEM16I	0x11		\/* 16K chips, interleave/
NEX_MEM256I	../vax/nexus.h	/^#define	NEX_MEM256I	0x74		\/* 256K chips, interlea/
NEX_MEM256L	../vax/nexus.h	/^#define	NEX_MEM256L	0x70		\/* 256K chips, non-inte/
NEX_MEM256LI	../vax/nexus.h	/^#define	NEX_MEM256LI	0x71		\/* 256K chips, ext-int/
NEX_MEM256U	../vax/nexus.h	/^#define	NEX_MEM256U	0x72		\/* 256K chips, non-inte/
NEX_MEM256UI	../vax/nexus.h	/^#define	NEX_MEM256UI	0x73		\/* 256K chips, ext-int/
NEX_MEM4	../vax/nexus.h	/^#define	NEX_MEM4	0x08		\/* 4K chips, non-interleav/
NEX_MEM4I	../vax/nexus.h	/^#define	NEX_MEM4I	0x09		\/* 4K chips, interleaved /
NEX_MEM64I	../vax/nexus.h	/^#define	NEX_MEM64I	0x6c		\/* 64K chips, interleave/
NEX_MEM64L	../vax/nexus.h	/^#define	NEX_MEM64L	0x68		\/* 64K chips, non-interl/
NEX_MEM64LI	../vax/nexus.h	/^#define	NEX_MEM64LI	0x69		\/* 64K chips, ext-inter/
NEX_MEM64U	../vax/nexus.h	/^#define	NEX_MEM64U	0x6a		\/* 64K chips, non-interl/
NEX_MEM64UI	../vax/nexus.h	/^#define	NEX_MEM64UI	0x6b		\/* 64K chips, ext-inter/
NEX_MPM0	../vax/nexus.h	/^#define	NEX_MPM0	0x40		\/* Multi-port mem *\/$/
NEX_MPM1	../vax/nexus.h	/^#define	NEX_MPM1	0x41		\/* Who knows why 4 differe/
NEX_MPM2	../vax/nexus.h	/^#define	NEX_MPM2	0x42$/
NEX_MPM3	../vax/nexus.h	/^#define	NEX_MPM3	0x43$/
NEX_UBA0	../vax/nexus.h	/^#define	NEX_UBA0	0x28		\/* Unibus adaptor *\/$/
NEX_UBA1	../vax/nexus.h	/^#define	NEX_UBA1	0x29		\/* 4 flavours for 4 addr s/
NEX_UBA2	../vax/nexus.h	/^#define	NEX_UBA2	0x2a$/
NEX_UBA3	../vax/nexus.h	/^#define	NEX_UBA3	0x2b$/
NFDBITS	../h/types.h	/^#define NFDBITS	(sizeof(fd_mask) * NBBY)	\/* bits /
NFRAGMENTS	../vaxif/if_exreg.h	/^#define	NFRAGMENTS 1	\/* number fragments that the/
NGROUPS	../h/param.h	/^#define	NGROUPS	16		\/* max number groups *\/$/
NH2X	../vaxif/if_ex.c	/^#define	NH2X 4			\/* a sufficient number is critic/
NHASH	../sys/ufs_namei.c	/^#define	NHASH(h, i, d)	((unsigned)((h) + (i) + 13 /
NHDHCH	../vaxif/if_hdh.c	/^#define NHDHCH	2		\/* no. of FDX channels for HDH /
NIADDR	../h/inode.h	/^#define	NIADDR	3		\/* indirect addresses in inode /
NICE	../vaxuba/lpa.c	/^#define NICE	0$/
NICR	../vax/mtpr.h	/^#define	NICR	0x19		\/* next interval count *\/$/
NILDIAGS	../vaxif/if_ilreg.h	/^#define	NILDIAGS		6$/
NILERRS	../vaxif/if_ilreg.h	/^#define	NILERRS			16$/
NINDIR	../h/fs.h	/^#define	NINDIR(fs)	((fs)->fs_nindir)$/
NIOA8600	../vax/ioa.h	/^#define	NIOA8600	2$/
NIPCREG	../vax/reg.h	/^#define	NIPCREG 16$/
NL0	../h/ioctl.h	/^#define			NL0	0x00000000$/
NL1	../h/ioctl.h	/^#define			NL1	0x00000100	\/* tty 37 *\/$/
NL2	../h/ioctl.h	/^#define			NL2	0x00000200	\/* vt05 *\/$/
NL3	../h/ioctl.h	/^#define			NL3	0x00000300$/
NLDELAY	../h/ioctl.h	/^#define		NLDELAY		0x00000300	\/* \\n delay *\/$/
NLIMITS	../h/vlimit.h	/^#define	NLIMITS		6$/
NMAGIC	../h/exec.h	/^#define	NMAGIC	0410		\/* read-only text *\/$/
NMBCLUSTERS	../h/mbuf.h	/^#define	NMBCLUSTERS	512$/
NMBPCL	../h/mbuf.h	/^#define	NMBPCL		(CLBYTES\/MSIZE)		\/* # mbufs per /
NMC630	../vax/ka630.c	/^#define NMC630	10$/
NMC730	../vax/ka730.c	/^#define	NMC730	12$/
NMC8600	../vax/ka860.c	/^#define NMC8600	7$/
NMOUNT	../h/param.h	/^#define	NMOUNT	20		\/* number of mountable file sy/
NNEX730	../vax/nexus.h	/^#define	NNEX730	NNEXSBI$/
NNEX750	../vax/nexus.h	/^#define	NNEX750	NNEXSBI$/
NNEX780	../vax/nexus.h	/^#define	NNEX780	NNEXSBI$/
NNEX8600	../vax/nexus.h	/^#define	NNEX8600	NNEXSBI$/
NNEXSBI	../vax/nexus.h	/^#define	NNEXSBI		16$/
NNPCNN	../vaxuba/npreg.h	/^#define NNPCNN		4	\/* Number of connections per bo/
NOBOARD	../vaxuba/npreg.h	/^#define NOBOARD		0x4000		\/* debug user\/host inte/
NOCACHE	../h/namei.h	/^#define NOCACHE		0x20	\/* name must not be left in/
NODEV	../h/param.h	/^#define	NODEV	(dev_t)(-1)$/
NODQUOT	../h/quota.h	/^#define	NODQUOT		((struct dquot *) 0)$/
NOFILE	../h/param.h	/^#define	NOFILE	64		\/* max open files per process /
NOFLSH	../h/ioctl.h	/^#define		NOFLSH		0x80000000	\/* no output flush on/
NOFOLLOW	../h/namei.h	/^#define	NOFOLLOW	0x0	\/* don't follow symbolic lin/
NOFRAME	../vax/kdbparam.h	/^#define	NOFRAME		0			\/* fp at top of call stack */
NOGROUP	../h/param.h	/^#define	NOGROUP	65535		\/* marker for empty group /
NOHANG	../h/ioctl.h	/^#define		NOHANG		0x01000000	\/* no SIGHUP on carri/
NOHOST	../vaxif/if_vv.c	/^#define	NOHOST	0xffff			\/* illegal host number */
NONE	../vaxuba/npreg.h	/^#define NONE		0x00	\/* No protocols active for a p/
NOQUOTA	../h/quota.h	/^#define	NOQUOTA	((struct quota *) 0)$/
NOREQ	../vaxuba/npreg.h	/^#define NOREQ	0x00		\/* No service requested *\/$/
NORMALRETURN	../h/user.h	/^#define NORMALRETURN	3$/
NOTAKE	../vax/asnumber.h	/^#define	NOTAKE	-1$/
NOT_EXEC	../vaxuba/psreg.h	/^#define NOT_EXEC	0200$/
NPBGN	../vaxuba/npreg.h	/^#define NPBGN	0x200		\/* Begin Execution in On-Boa/
NPCBI	../vaxuba/npreg.h	/^#define NPCBI	0x800		\/* Interrupt at completion o/
NPCHNGB	../vaxuba/npreg.h	/^#define NPCHNGB		51	\/* Change the Board number */
NPCHNGP	../vaxuba/npreg.h	/^#define NPCHNGP		50	\/* Change the protocol on a c/
NPCLCONN	../vaxuba/npreg.h	/^#define NPCLCONN	0xFF	\/* Closed connection, i.e. /
NPCLEAR	../vaxuba/npreg.h	/^#define NPCLEAR		0$/
NPCLRICNT	../vaxuba/npreg.h	/^#define NPCLRICNT       (IoVOID|0x18)   \/* clear /
NPCMD	../vaxuba/npreg.h	/^#define NPCMD	0x80		\/* Shared Memory Address *\/$/
NPCONN	../vaxuba/npreg.h	/^#define NPCONN(a)	((minor(a)) & 0x03)$/
NPDELAY	../vaxuba/npreg.h	/^#define NPDELAY(N)	{register int n = (N) >> 1; whi/
NPDLA	../vaxuba/npreg.h	/^#define NPDLA		0x04	\/* Direct Datalink Access *\//
NPDMP	../vaxuba/npreg.h	/^#define NPDMP	0x2000		\/* Dump 80186 On-Board Memo/
NPDONE	../vaxuba/npreg.h	/^#define NPDONE	0x01		\/* Normal completion *\/$/
NPDUMP	../vaxuba/npreg.h	/^#define NPDUMP	0x02		\/* Load request *\/$/
NPENB	../vaxuba/npreg.h	/^#define NPENB	0x80		\/* CSR0 available for use by /
NPERRSHIFT	../vaxuba/npreg.h	/^#define NPERRSHIFT	8	\/* Used in function ReqDone(/
NPGETICNT	../vaxuba/npreg.h	/^#define NPGETICNT       (IoVOID|0x19)   \/* get in/
NPGETIVEC	../vaxuba/npreg.h	/^#define NPGETIVEC       (IoVOID|0x1a)   \/* get in/
NPGPANIC	../vaxuba/npreg.h	/^#define	NPGPANIC	(IoVOID|0x05)	\/* Get panic messa/
NPHOK	../vaxuba/npreg.h	/^#define NPHOK	0x02		\/* Hardware OK *\/$/
NPIDP	../vaxuba/npreg.h	/^#define NPIDP		0x04	\/* Direct Datalink Access *\//
NPIFC	../vaxuba/npreg.h	/^#define NPIFC	0x00		\/* Internal Function Code req/
NPINIT	../vaxuba/npreg.h	/^#define	NPINIT		(IoVOID|0x06)	\/* initialize softw/
NPIO	../vaxuba/np.c	/^NPIO(mp,src,dest,count,dir)$/
NPISO	../vaxuba/npreg.h	/^#define NPISO		0x0A	\/* ISO *\/$/
NPKILL	../vaxuba/npreg.h	/^#define NPKILL  	(IoVOID|0x11)$/
NPLAN	../vaxuba/npreg.h	/^#define NPLAN	0x04		\/* Logic 0 indicates operatio/
NPLD	../vaxuba/npreg.h	/^#define NPLD	0x8000		\/* Load 80186 On-board Memor/
NPLOAD	../vaxuba/npreg.h	/^#define NPLOAD  0x01		\/* Dump request *\/$/
NPLOCK	../vaxuba/npreg.h	/^#define NPLOCK	0x64		\/* Lock the process's data a/
NPLST	../vaxuba/npreg.h	/^#define NPLST	0x20		\/* Last Command *\/$/
NPMAINT	../vaxuba/npreg.h	/^#define NPMAINT		0x01	\/* Maintenance protocol, su/
NPMAPMEM	../vaxuba/npreg.h	/^#define NPMAPMEM        (IoVOID|0x1b)   \/* map us/
NPMAXXFR	../vaxuba/npreg.h	/^#define	NPMAXXFR	32768		\/* Maximum number of byte/
NPMERR	../vaxuba/npreg.h	/^#define NPMERR	0x82		\/* Memory allocation failure/
NPMON	../h/vmmeter.h	/^#define	NPMON	64$/
NPNETBOOT	../vaxuba/npreg.h	/^#define	NPNETBOOT	(IoVOID|0x16)	\/* boot from the /
NPNTS	../vaxuba/npreg.h	/^#define NPNTS		0x02	\/* NTS Terminal Server *\/$/
NPOK	../vaxuba/npreg.h	/^#define NPOK		0$/
NPPANIC	../vaxuba/npreg.h	/^#define NPPANIC	0x100		\/* Panic request *\/$/
NPPEND	../vaxuba/npreg.h	/^#define NPPEND	0x08		\/* Unused at this time *\/$/
NPPERR	../vaxuba/npreg.h	/^#define NPPERR  0x80		\/* Protocol error *\/$/
NPPOLL	../vaxuba/npreg.h	/^#define NPPOLL  	(IoVOID|0x10)$/
NPPSADDR	../vaxuba/npreg.h	/^#define NPPSADDR	0x324	\/* Pointer to addr of on-b/
NPRCSR0	../vaxuba/npreg.h	/^#define	NPRCSR0		(IoVOID|0x08)	\/* read CSR0 *\/$/
NPRCSR1	../vaxuba/npreg.h	/^#define	NPRCSR1		(IoVOID|0x09)	\/* read CSR1 *\/$/
NPRCSR2	../vaxuba/npreg.h	/^#define	NPRCSR2		(IoVOID|0x0a)	\/* read CSR2 *\/$/
NPRCSR3	../vaxuba/npreg.h	/^#define	NPRCSR3		(IoVOID|0x0b)	\/* read CSR3 *\/$/
NPRDR	../vaxuba/npreg.h	/^#define NPRDR	0x20		\/* Set when 80186 writes data/
NPRDY	../vaxuba/npreg.h	/^#define NPRDY	0x40		\/* CSR0 ready to accept data /
NPREG	../vaxuba/npreg.h	/^struct NPREG {$/
NPREMAP	../vaxuba/npreg.h	/^#define NPREMAP	0x124		\/* Window turn *\/$/
NPRESET	../vaxuba/npreg.h	/^#define NPRESET		(IoVOID|0x01)	\/* reset the board/
NPRFU	../vaxuba/npreg.h	/^#define NPRFU	0x01		\/* Reserved for Future Use */
NPSET	../vaxuba/npreg.h	/^#define NPSET		1$/
NPSETADDR	../vaxuba/npreg.h	/^#define	NPSETADDR	(IoVOID|0x15)	\/* set host addre/
NPSETBOARD	../vaxuba/npreg.h	/^#define	NPSETBOARD	(IoVOID|0x13)	\/* set board to /
NPSETLAST	../vaxuba/npreg.h	/^#define NPSETLAST       (IoVOID|0x17)   \/* set la/
NPSETNPDEB	../vaxuba/npreg.h	/^#define	NPSETNPDEB	(IoVOID|0x14)	\/* set nc debugi/
NPSETPROT	../vaxuba/npreg.h	/^#define	NPSETPROT	(IoVOID|0x12)	\/* set the protoc/
NPSTART	../vaxuba/npreg.h	/^#define	NPSTART		(IoVOID|0x04)	\/* start board exe/
NPSTATS	../vaxuba/npreg.h	/^#define NPSTATS 	(IoVOID|0x07)$/
NPSTOP	../vaxuba/npreg.h	/^#define NPSTOP		3	\/* Conversion from above (OS_ST/
NPTCP	../vaxuba/npreg.h	/^#define NPTCP		0x08	\/* TCP\/IP *\/$/
NPTEPG	../vax/machparam.h	/^#define	NPTEPG		(NBPG\/(sizeof (struct pte)))$/
NPTY	../sys/tty_pty.c	/^#define	NPTY	32		\/* crude XXX *\/$/
NPUIO	../vaxuba/npreg.h	/^#define NPUIO	0x80		\/* Process doing physio *\/$/
NPUNIT	../vaxuba/npreg.h	/^#define NPUNIT(a)	((minor(a) >> 4) & 0x0F)$/
NPUNLOCK	../vaxuba/npreg.h	/^#define NPUNLOCK 0xA4		\/* Unlock the process *\/$/
NPWCSR0	../vaxuba/npreg.h	/^#define	NPWCSR0		(IoVOID|0x0c)	\/* write CSR0 *\/$/
NPWCSR1	../vaxuba/npreg.h	/^#define	NPWCSR1		(IoVOID|0x0d)	\/* write CSR1 *\/$/
NPWCSR2	../vaxuba/npreg.h	/^#define	NPWCSR2		(IoVOID|0x0e)	\/* write CSR2 *\/$/
NPWCSR3	../vaxuba/npreg.h	/^#define	NPWCSR3		(IoVOID|0x0f)	\/* write CSR3 *\/$/
NPXNS	../vaxuba/npreg.h	/^#define NPXNS		0x06	\/* Xerox NS ITP *\/$/
NP_IE	../vaxuba/npreg.h	/^#define NP_IE	0x10		\/* Interrupts enabled for thi/
NP_IP	../vaxuba/npreg.h	/^#define NP_IP	0x08		\/* Interrupt pending from thi/
NP_SET	../vaxuba/npreg.h	/^#define NP_SET          1031            \/* set me/
NP_USET	../vaxuba/npreg.h	/^#define NP_USET         1032            \/* unset /
NQHASH	../sys/quota_kern.c	/^#define	NQHASH		32	\/* small power of two *\/$/
NQS	../h/proc.h	/^#define	NQS	32		\/* 32 run queues *\/$/
NRB02CYL	../vaxuba/idcreg.h	/^#define	NRB02CYL	512	\/* RB02 cylinders\/disk *\/$/
NRB02SECT	../vaxuba/idcreg.h	/^#define	NRB02SECT	40	\/* RB02 sectors\/track *\/$/
NRB02TRK	../vaxuba/idcreg.h	/^#define	NRB02TRK	2	\/* RB02 tracks\/cylinder *\/$/
NRB80CYL	../vaxuba/idcreg.h	/^#define	NRB80CYL	559	\/* RB80 cylinders\/disk *\/$/
NRB80SECT	../vaxuba/idcreg.h	/^#define	NRB80SECT	31	\/* RB80 sectors\/track *\/$/
NRB80TRK	../vaxuba/idcreg.h	/^#define	NRB80TRK	14	\/* RB80 tracks\/cylinder *\/$/
NRCV	../vaxif/if_de.c	/^#define	NRCV	7	\/* number of receive buffers (must/
NRK6CYL	../vaxuba/rkreg.h	/^#define	NRK6CYL		411$/
NRK7CYL	../vaxuba/rkreg.h	/^#define NRK7CYL 	815$/
NRKSECT	../vaxuba/rkreg.h	/^#define NRKSECT		22$/
NRKTRK	../vaxuba/rkreg.h	/^#define NRKTRK		3$/
NRLBPSC	../vaxuba/rlreg.h	/^#define NRLBPSC		256	\/* bytes per sector *\/$/
NRLCYLN	../vaxuba/rlreg.h	/^#define	NRLCYLN		512	\/* number of cylinders per d/
NRLSECT	../vaxuba/rlreg.h	/^#define NRLSECT		40	\/* number of sectors per trac/
NRLTRKS	../vaxuba/rlreg.h	/^#define NRLTRKS		2	\/* number of tracks per cylind/
NRMON	../h/vmmeter.h	/^#define	NRMON	64$/
NRSP	../vaxuba/tmscp.c	/^#define NRSP    (1<<NRSPL2)$/
NRSPL2	../vaxuba/tmscp.c	/^#define NRSPL2  3               \/* log2 number of/
NSIG	../h/signal.h	/^#define NSIG	32$/
NSMON	../h/vmmeter.h	/^#define	NSMON	128$/
NSPARE	../h/disklabel.h	/^#define NSPARE 5$/
NSPB	../h/fs.h	/^#define	NSPB(fs)	((fs)->fs_nspf << (fs)->fs_fragsh/
NSPEEDS	../h/tty.h	/^#define	NSPEEDS	16$/
NSPF	../h/fs.h	/^#define	NSPF(fs)	((fs)->fs_nspf)$/
NSPORT_ECHO	../netns/ns.h	/^#define NSPORT_ECHO	2		\/* Echo *\/$/
NSPORT_RE	../netns/ns.h	/^#define NSPORT_RE	3		\/* Router Error *\/$/
NSPORT_RESERVED	../netns/ns.h	/^#define NSPORT_RESERVED		3000$/
NSPORT_RI	../netns/ns.h	/^#define NSPORT_RI	1		\/* Routing Information *\/$/
NSPROTO_ECHO	../netns/ns.h	/^#define NSPROTO_ECHO	2		\/* Echo Protocol *\/$/
NSPROTO_ERROR	../netns/ns.h	/^#define NSPROTO_ERROR	3		\/* Error Protocol *\/$/
NSPROTO_MAX	../netns/ns.h	/^#define NSPROTO_MAX	256		\/* Placemarker*\/$/
NSPROTO_PE	../netns/ns.h	/^#define NSPROTO_PE	4		\/* Packet Exchange *\/$/
NSPROTO_RAW	../netns/ns.h	/^#define NSPROTO_RAW	255		\/* Placemarker*\/$/
NSPROTO_RI	../netns/ns.h	/^#define NSPROTO_RI	1		\/* Routing Information *\/$/
NSPROTO_SPP	../netns/ns.h	/^#define NSPROTO_SPP	5		\/* Sequenced Packet *\/$/
NSP_ALL_PACKETS	../netns/ns_pcb.h	/^#define NSP_ALL_PACKETS	0x8		\/* Turn off higher p/
NSP_IN_ABORT	../netns/ns_pcb.h	/^#define NSP_IN_ABORT	0x1		\/* calling abort throug/
NSP_RAWIN	../netns/ns_pcb.h	/^#define NSP_RAWIN	0x2		\/* show headers on input */
NSP_RAWOUT	../netns/ns_pcb.h	/^#define NSP_RAWOUT	0x4		\/* show header on output /
NSRCVQ	../netns/ns_pcb.h	/^#define	NSRCVQ		2048$/
NSSNDQ	../netns/ns_pcb.h	/^#define	NSSNDQ		2048$/
NS_ALLOWBROADCAST	../netns/ns.h	/^#define	NS_ALLOWBROADCAST	SO_BROADCAST	\/* can sen/
NS_ERRPRINTFS	../netns/ns_error.c	/^#define NS_ERRPRINTFS 1$/
NS_ERR_BADSUM	../netns/ns_error.h	/^#define	NS_ERR_BADSUM	1	\/* Bad Checksum detected /
NS_ERR_BADSUM_T	../netns/ns_error.h	/^#define	NS_ERR_BADSUM_T	0x201	\/* Bad Checksum det/
NS_ERR_FULLUP	../netns/ns_error.h	/^#define	NS_ERR_FULLUP	3	\/* Dest. refuses packet d/
NS_ERR_MAX	../netns/ns_error.h	/^#define NS_ERR_MAX 20$/
NS_ERR_NOSOCK	../netns/ns_error.h	/^#define	NS_ERR_NOSOCK	2	\/* Specified socket does /
NS_ERR_TOO_BIG	../netns/ns_error.h	/^#define	NS_ERR_TOO_BIG	0x204	\/* Packet too large /
NS_ERR_TOO_OLD	../netns/ns_error.h	/^#define	NS_ERR_TOO_OLD	0x203	\/* Packet x'd 15 rou/
NS_ERR_UNREACH_HOST	../netns/ns_error.h	/^#define	NS_ERR_UNREACH_HOST	0x202	\/* Dest cannot /
NS_ERR_UNSPEC	../netns/ns_error.h	/^#define	NS_ERR_UNSPEC	0	\/* Unspecified Error dete/
NS_ERR_UNSPEC_T	../netns/ns_error.h	/^#define	NS_ERR_UNSPEC_T	0x200	\/* Unspec. Error oc/
NS_FORWARDING	../netns/ns.h	/^#define	NS_FORWARDING		0x1	\/* most of idp header /
NS_MAXHOPS	../netns/ns.h	/^#define NS_MAXHOPS		15$/
NS_ROUTETOIF	../netns/ns.h	/^#define	NS_ROUTETOIF		0x10	\/* same as SO_DONTROUT/
NS_WILDCARD	../netns/ns_pcb.h	/^#define	NS_WILDCARD	1$/
NTBS	../sys/tty_tb.c	/^#define NTBS	16$/
NTOT	../vaxif/if_qe.c	/^#define NTOT	(NXMT + NRCV)$/
NTTYDISC	../h/ioctl.h	/^#define	NTTYDISC	2		\/* new tty discipline *\/$/
NTU	../vax/tu.c	/^#define	NTU	((cpu == VAX_750) ? 1 : 2)$/
NTUBLK	../vaxuba/uu.c	/^#define	NTUBLK	512		\/* number of blocks on a TU58/
NTUQ	../vax/tu.c	/^#define NTUQ    2               \/* # of blocks wh/
NTYPES	../vaxuba/uda.c	/^#define NTYPES (sizeof(udatypes) \/ sizeof(*udatyp/
NUBMREG	../vaxuba/ubareg.h	/^#define	NUBMREG		496$/
NULL	../h/dir.h	/^#define NULL 0$/
NULLSLOT	../vaxif/if_exreg.h	/^#define	NULLSLOT	0	\/* the null slot *\/$/
NUMCQE	../vaxuba/npreg.h	/^#define NUMCQE		40		\/* Number of CQE's per board /
NUUQ	../vaxuba/uu.c	/^#define	NUUQ	02		\/* # of block which can be queue/
NUX	../vaxuba/uu.c	/^#define	NUX	NDPC * NUU	\/* number of drives *\/$/
NX2H	../vaxif/if_ex.c	/^#define	NX2H 4			\/* this is pretty arbitrary *\/$/
NXDAD	../h/text.h	/^#define	NXDAD	12		\/* param.h:MAXTSIZ \/ vmparam.h/
NXMT	../vaxif/if_de.c	/^#define	NXMT	3	\/* number of transmit buffers *\/$/
NZERO	../h/param.h	/^#define	NZERO	0$/
NpAddCQE	../vaxuba/np.c	/^NpAddCQE(ep,cqp,mp)$/
NpAddReq	../vaxuba/np.c	/^NpAddReq(head,rp)$/
NpBoardChange	../vaxuba/np.c	/^NpBoardChange(protocol,unit)$/
NpCloseConn	../vaxuba/np.c	/^NpCloseConn(mp,protocol)$/
NpFreeReq	../vaxuba/np.c	/^NpFreeReq(head,nprp)$/
NpGetReq	../vaxuba/np.c	/^NpGetReq(head)$/
NpHWinit	../vaxuba/np.c	/^NpHWinit(unit)$/
NpIFC	../vaxuba/np.c	/^NpIFC(mp,rp)$/
NpKill	../vaxuba/np.c	/^NpKill(mp,curr_rp)$/
NpMapMem	../vaxuba/np.c	/^NpMapMem(mp,rp,addr,count)$/
NpMem	../vaxuba/np.c	/^NpMem(mp, rp, uaddr)$/
NpPoll	../vaxuba/np.c	/^NpPoll(mp,addr)$/
NpProcQueue	../vaxuba/np.c	/^NpProcQueue(mp)$/
NpProtChange	../vaxuba/np.c	/^NpProtChange(protocol,unit)$/
NpRemCQE	../vaxuba/np.c	/^NpRemCQE(cqp,base)$/
NpRemReq	../vaxuba/np.c	/^NpRemReq(rp)$/
NpReset	../vaxuba/np.c	/^NpReset(mp,rp)$/
NpSWinit	../vaxuba/np.c	/^NpSWinit(unit)$/
NpSendCSR0	../vaxuba/np.c	/^NpSendCSR0(iobase,src,bcount)$/
NpSetIntLevel	../vaxuba/np.c	/^NpSetIntLevel(mp,level)$/
NpSetMemAddr	../vaxuba/np.c	/^NpSetMemAddr(mp,addr)$/
NpSetXeqAddr	../vaxuba/np.c	/^NpSetXeqAddr(mp,addr)$/
NpSta	../vaxuba/npreg.h	/^struct NpStat{$/
NpStats	../vaxuba/np.c	/^NpStats()$/
NpTimer	../vaxuba/np.c	/^NpTimer(flagp)$/
NpUnMapMem	../vaxuba/np.c	/^NpUnMapMem(mp,rp)$/
OBUFSIZ	../vaxuba/dn.c	/^#define OBUFSIZ	40		\/* largest phone # dialer can/
OCTET	../vaxuba/dmzreg.h	/^#define	OCTET(a)	((a%24)\/8)$/
OC_ADREG	../vax/kdb_opset.c	/^#define	OC_ADREG	0x7$/
OC_AIREG	../vax/kdb_opset.c	/^#define	OC_AIREG	0x8$/
OC_AMEXT	../vax/kdb_opset.c	/^#define	OC_AMEXT(x)	(((x) >> OC_SHIFT) & 0xF)$/
OC_BDISP	../vax/kdb_opset.c	/^#define	OC_BDISP	0xA$/
OC_CONS	../vax/kdb_opset.c	/^#define	OC_CONS(oc,reg)	(((oc & 0xF) << OC_SHIFT) /
OC_DAIREG	../vax/kdb_opset.c	/^#define	OC_DAIREG	0x9$/
OC_DBDISP	../vax/kdb_opset.c	/^#define	OC_DBDISP	0xB$/
OC_DLDISP	../vax/kdb_opset.c	/^#define	OC_DLDISP	0xF$/
OC_DREG	../vax/kdb_opset.c	/^#define	OC_DREG		0x6$/
OC_DWDISP	../vax/kdb_opset.c	/^#define	OC_DWDISP	0xD$/
OC_IMM0	../vax/kdb_opset.c	/^#define	OC_IMM0		0x0$/
OC_IMM1	../vax/kdb_opset.c	/^#define	OC_IMM1		0x1$/
OC_IMM2	../vax/kdb_opset.c	/^#define	OC_IMM2		0x2$/
OC_IMM3	../vax/kdb_opset.c	/^#define	OC_IMM3		0x3$/
OC_INDEX	../vax/kdb_opset.c	/^#define	OC_INDEX	0x4$/
OC_LDISP	../vax/kdb_opset.c	/^#define	OC_LDISP	0xE$/
OC_REG	../vax/kdb_opset.c	/^#define	OC_REG		0x5$/
OC_REGEXT	../vax/kdb_opset.c	/^#define	OC_REGEXT(x)	((x) & 0xF)$/
OC_SHIFT	../vax/kdb_opset.c	/^#define	OC_SHIFT	4$/
OC_WDISP	../vax/kdb_opset.c	/^#define	OC_WDISP	0xC$/
ODDP	../h/ioctl.h	/^#define		ODDP		0x00000040	\/* get\/send odd parity/
OFFMODE	../vax/kdbparam.h	/^#define OFFMODE "+%R"$/
OIE	../vaxuba/lpa.c	/^#define OIE	0100		\/* out interrupt enable *\/$/
OLDSTAT	../netinet/tcp_var.h	/^#define OLDSTAT	\/* set if we have to use old nets/
OMAGIC	../h/exec.h	/^#define	OMAGIC	0407		\/* old impure format *\/$/
ON	../vaxuba/npreg.h	/^#define ON		0x8000  \/* Used for Command Q's scan /
ONES	../vax/asnumber.h	/^#define	ONES(n)	((1 << (n)) - 1)$/
OP	../vax/kdb_opset.c	/^#define OP(name,eopcode,popdcode,nargs,a1,a2,a3,a4/
OPAR	../vaxuba/dhreg.h	/^#define	OPAR	040$/
OPEN	../vaxmba/hp.c	/^#define	OPEN		5		\/* initialized and ready *\/$/
OPENRAW	../vaxmba/hp.c	/^#define	OPENRAW		6		\/* open, no label or badsect /
OPT_ALIGN	../vaxif/if_exreg.h	/^#define	OPT_ALIGN	0x10	\/* receive packets with al/
OPT_CRC	../vaxif/if_exreg.h	/^#define	OPT_CRC		0x20	\/* receive packets with CRC/
OPT_DSABLE	../vaxif/if_exreg.h	/^#define	OPT_DSABLE	0x80	\/* disconnect controller /
ORDINARY	../h/tty.h	/^#define	ORDINARY	0$/
OSIZE	../vax/kdb_opset.c	/^#define	OSIZE (sizeof(short))$/
OS_STP	../vaxuba/npreg.h	/^#define OS_STP		03400	\/* Shut down connection on /
OTTYDISC	../h/ioctl.h	/^#define	OTTYDISC	0		\/* old, v7 std tty driver *\//
OUT_BBACK	../vaxif/if_accreg.h	/^#define OUT_BBACK	0x0008		\/* bus back *\/$/
OUT_ENLB	../vaxif/if_accreg.h	/^#define OUT_ENLB 	0x0004		\/* enable last bit *\/$/
OUT_TMR	../vaxif/if_accreg.h	/^#define OUT_TMR		0x0200		\/* transmit master ready/
OUT_TXEC	../vaxif/if_cssreg.h	/^#define OUT_TXEC	0x0008          \/* tx error clea/
OVERRUN	../vaxuba/lpa.c	/^#define OVERRUN	0243		\/* overrun error *\/$/
OVF_ADDV	../vax/asnumber.h	/^#define	OVF_ADDV	(1<<0)	\/* integer: adding two ve/
OVF_D	../vax/asnumber.h	/^#define	OVF_D		(1<<5)	\/* float: D overflow *\/$/
OVF_F	../vax/asnumber.h	/^#define	OVF_F		(1<<4)	\/* float: F overflow *\/$/
OVF_G	../vax/asnumber.h	/^#define	OVF_G		(1<<6)	\/* float: G overflow *\/$/
OVF_H	../vax/asnumber.h	/^#define	OVF_H		(1<<7)	\/* float: H overflow *\/$/
OVF_LSHIFT	../vax/asnumber.h	/^#define	OVF_LSHIFT	(1<<1)	\/* integer: left shifti/
OVF_MAXINT	../vax/asnumber.h	/^#define	OVF_MAXINT	(1<<3)	\/* integer: the number /
OVF_OVERFLOW	../vax/asnumber.h	/^#define	OVF_OVERFLOW	(1<<9)	\/* overflow in conver/
OVF_POSOVF	../vax/asnumber.h	/^#define	OVF_POSOVF	(1<<2)	\/* integer: positive nu/
OVF_UNDERFLOW	../vax/asnumber.h	/^#define	OVF_UNDERFLOW	(1<<10)	\/* underflow in con/
O_APPEND	../h/file.h	/^#define	O_APPEND	FAPPEND		\/* append on each write/
O_CREAT	../h/file.h	/^#define	O_CREAT		FCREAT		\/* open with file create/
O_EXCL	../h/file.h	/^#define	O_EXCL		FEXCL		\/* error on create if file/
O_NDELAY	../h/file.h	/^#define	O_NDELAY	FNDELAY		\/* non-blocking open */
O_RDONLY	../h/file.h	/^#define	O_RDONLY	000		\/* open for reading *\/$/
O_RDWR	../h/file.h	/^#define	O_RDWR		002		\/* open for read & write *\//
O_TRUNC	../h/file.h	/^#define	O_TRUNC		FTRUNC		\/* open with truncation /
O_WRONLY	../h/file.h	/^#define	O_WRONLY	001		\/* open for writing *\/$/
Ovf	../vax/asnumber.h	/^typedef	u_int	Ovf;$/
P0BR	../vax/mtpr.h	/^#define	P0BR	0x8		\/* p0 base register *\/$/
P0LR	../vax/mtpr.h	/^#define	P0LR	0x9		\/* p0 length register *\/$/
P1BR	../vax/mtpr.h	/^#define	P1BR	0xa		\/* p1 base register *\/$/
P1LR	../vax/mtpr.h	/^#define	P1LR	0xb		\/* p1 length register *\/$/
P1PAGES	../vax/vmparam.h	/^#define	P1PAGES		0x200000	\/* number of pages in P/
PAMACC	../vax/mtpr.h	/^#define PAMACC	0x40		\/* PAMM access *\/$/
PAMLOC	../vax/mtpr.h	/^#define PAMLOC	0x41		\/* PAMM location *\/$/
PANIC1	../vaxuba/npreg.h	/^#define	PANIC1	 	0x100		\/* Driver wants panic add/
PANIC2	../vaxuba/npreg.h	/^#define	PANIC2		0x200		\/* Driver wants panic stri/
PANIC3	../vaxuba/npreg.h	/^#define PANIC3		0x400		\/* Clear first byte of pan/
PANICREQ	../vaxuba/npreg.h	/^#define PANICREQ	0x02		\/* Panic request *\/$/
PANLEN	../vaxuba/npreg.h	/^#define	PANLEN		133		\/* length of the panic buffe/
PARTITIONMASK	../vax/autoconf.c	/^#define	PARTITIONMASK	0x7$/
PARTITIONSHIFT	../vax/autoconf.c	/^#define	PARTITIONSHIFT	3$/
PASS8	../h/ioctl.h	/^#define		PASS8		0x08000000$/
PASSIVE	../vaxuba/psreg.h	/^#define PASSIVE		010$/
PC	../vax/reg.h	/^#define	PC	(-2)$/
PCAT	../vaxuba/ct.c	/^#define	PCAT	(PZERO+9)$/
PCBB	../vax/mtpr.h	/^#define	PCBB	0x10		\/* process control block base /
PCBB_OFFSET	../vaxif/if_de.c	/^#define	PCBB_OFFSET	RVAL_OFF(ds_pcbb)$/
PCLMAXTDM	../vaxif/if_pcl.c	/^#define	PCLMAXTDM	7	\/* Max unit number on TDM bus/
PCLMTU	../vaxif/if_pcl.c	/^#define	PCLMTU		(1006)	\/* Max transmission unit (/
PCLUNIT	../vaxif/if_pcl.c	/^#define	PCLUNIT(x)	minor(x)$/
PCL_AUTOADDR	../vaxif/if_pclreg.h	/^#define PCL_AUTOADDR	(1<<12)		\/* Auto time slicin/
PCL_BCOFL	../vaxif/if_pclreg.h	/^#define PCL_BCOFL	(1<<9)		\/* Byte Counter Overflo/
PCL_ERR	../vaxif/if_pclreg.h	/^#define PCL_ERR		(1<<15)		\/* Error summary *\/$/
PCL_IE	../vaxif/if_pclreg.h	/^#define PCL_IE		(1<<6)		\/* Interrupt Enable *\/$/
PCL_MASTER	../vaxif/if_pclreg.h	/^#define PCL_MASTER	(1<<8)		\/* Set MASTER status */
PCL_MSTDWN	../vaxif/if_pclreg.h	/^#define PCL_MSTDWN	(1<<11)		\/* Master down *\/$/
PCL_RCINIT	../vaxif/if_pclreg.h	/^#define PCL_RCINIT	(1<<1)		\/* Receiver Initialize/
PCL_RCNPR	../vaxif/if_pclreg.h	/^#define PCL_RCNPR	(1<<14)		\/* Receive NRP *\/$/
PCL_RCSRBITS	../vaxif/if_pclreg.h	/^#define PCL_RCSRBITS	"\\20\\20REJ\\17RC_NPR\\16RCV/
PCL_RCVDAT	../vaxif/if_pclreg.h	/^#define PCL_RCVDAT	(1<<0)		\/* Receive data *\/$/
PCL_RCVWD	../vaxif/if_pclreg.h	/^#define PCL_RCVWD	(1<<13)		\/* Receive word *\/$/
PCL_REJ	../vaxif/if_pclreg.h	/^#define PCL_REJ		(1<<15)		\/* Reject transmission /
PCL_RERRBITS	../vaxif/if_pclreg.h	/^#define PCL_RERRBITS	"\\20\\20ERR\\17NXL\\16MEM_OF/
PCL_RESPA	../vaxif/if_pclreg.h	/^#define PCL_RESPA	(3<<0)		\/* Response A bits (tsr/
PCL_RESPB	../vaxif/if_pclreg.h	/^#define PCL_RESPB	(3<<2)		\/* Response B bits (tsr/
PCL_RIB	../vaxif/if_pclreg.h	/^#define PCL_RIB		(1<<15)		\/* Retry if busy *\/$/
PCL_SNDWD	../vaxif/if_pclreg.h	/^#define PCL_SNDWD	(1<<13)		\/* Send word *\/$/
PCL_STTXM	../vaxif/if_pclreg.h	/^#define PCL_STTXM	(1<<0)		\/* Start transmission */
PCL_TCSRBITS	../vaxif/if_pclreg.h	/^#define PCL_TCSRBITS	"\\20\\20RIB\\17TX_NPR\\16SND/
PCL_TERRBITS	../vaxif/if_pclreg.h	/^#define PCL_TERRBITS	"\\20\\20ERR\\17NXL\\16MEM_OF/
PCL_TXINIT	../vaxif/if_pclreg.h	/^#define PCL_TXINIT	(1<<1)		\/* Transmitter Initial/
PCL_TXNPR	../vaxif/if_pclreg.h	/^#define PCL_TXNPR	(1<<14)		\/* Transmitter NPR *\//
PCMD	../vax/mscp.c	/^#define	PCMD	PSWP		\/* priority for command packet/
PCSR0_BITS	../vaxif/if_dereg.h	/^#define	PCSR0_BITS	"\\20\\20SERI\\17PCEI\\16RXI\\1/
PCSR0_CMASK	../vaxif/if_dereg.h	/^#define	PCSR0_CMASK	0x000f		\/* command mask *\/$/
PCSR0_DNI	../vaxif/if_dereg.h	/^#define	PCSR0_DNI	0x0800		\/* Done interrupt *\/$/
PCSR0_FATI	../vaxif/if_dereg.h	/^#define	PCSR0_FATI	0x0100		\/* Fatal error interru/
PCSR0_INTE	../vaxif/if_dereg.h	/^#define	PCSR0_INTE	0x0040		\/* Interrupt enable */
PCSR0_INTR	../vaxif/if_dereg.h	/^#define	PCSR0_INTR	0x0080		\/* Interrupt summary */
PCSR0_PCEI	../vaxif/if_dereg.h	/^#define	PCSR0_PCEI	0x4000		\/* Port command error /
PCSR0_RCBI	../vaxif/if_dereg.h	/^#define	PCSR0_RCBI	0x0400		\/* Receive buffer unav/
PCSR0_RSET	../vaxif/if_dereg.h	/^#define	PCSR0_RSET	0x0020		\/* DEUNA reset *\/$/
PCSR0_RXI	../vaxif/if_dereg.h	/^#define	PCSR0_RXI	0x2000		\/* Receive done interru/
PCSR0_SERI	../vaxif/if_dereg.h	/^#define	PCSR0_SERI	0x8000		\/* Status error interr/
PCSR0_TXI	../vaxif/if_dereg.h	/^#define	PCSR0_TXI	0x1000		\/* Transmit done interr/
PCSR1_BITS	../vaxif/if_dereg.h	/^#define	PCSR1_BITS	"\\20\\20XPWR\\17ICAB\\10PCTO\\/
PCSR1_ICAB	../vaxif/if_dereg.h	/^#define	PCSR1_ICAB	0x4000		\/* Interconnect cablin/
PCSR1_ILLINT	../vaxif/if_dereg.h	/^#define	PCSR1_ILLINT	0x0040		\/* Illegal interrupt/
PCSR1_PCTO	../vaxif/if_dereg.h	/^#define	PCSR1_PCTO	0x0080		\/* Port command timed /
PCSR1_POWER	../vaxif/if_dereg.h	/^#define	PCSR1_POWER	0x0010		\/* Power fail *\/$/
PCSR1_RMTC	../vaxif/if_dereg.h	/^#define	PCSR1_RMTC	0x0008		\/* Remote console rese/
PCSR1_STCODE	../vaxif/if_dereg.h	/^#define	PCSR1_STCODE	0x3f00		\/* Self test error c/
PCSR1_STMASK	../vaxif/if_dereg.h	/^#define	PCSR1_STMASK	0x0007		\/* State *\/$/
PCSR1_TIMEOUT	../vaxif/if_dereg.h	/^#define	PCSR1_TIMEOUT	0x0020		\/* Timeout *\/$/
PCSR1_XPWR	../vaxif/if_dereg.h	/^#define	PCSR1_XPWR	0x8000		\/* Transceiver power B/
PDP11FMT	../vaxuba/utreg.h	/^#define	PDP11FMT	0x00c0		\/* PDP-11 standard *\/$/
PDP_ENDIAN	../netinet/tcp.h	/^#define	PDP_ENDIAN	3412	\/* LSB first in word, MSW/
PENABLE	../vaxuba/dhreg.h	/^#define	PENABLE	020$/
PENDIN	../h/ioctl.h	/^#define		PENDIN		0x20000000	\/* tp->t_rawq needs r/
PF_APPLETALK	../h/socket.h	/^#define	PF_APPLETALK	AF_APPLETALK$/
PF_CCITT	../h/socket.h	/^#define	PF_CCITT	AF_CCITT$/
PF_CHAOS	../h/socket.h	/^#define	PF_CHAOS	AF_CHAOS$/
PF_DATAKIT	../h/socket.h	/^#define	PF_DATAKIT	AF_DATAKIT$/
PF_DECnet	../h/socket.h	/^#define PF_DECnet	AF_DECnet$/
PF_DLI	../h/socket.h	/^#define PF_DLI		AF_DLI$/
PF_ECMA	../h/socket.h	/^#define	PF_ECMA		AF_ECMA$/
PF_HYLINK	../h/socket.h	/^#define	PF_HYLINK	AF_HYLINK$/
PF_IMPLINK	../h/socket.h	/^#define	PF_IMPLINK	AF_IMPLINK$/
PF_INET	../h/socket.h	/^#define	PF_INET		AF_INET$/
PF_LAT	../h/socket.h	/^#define PF_LAT		AF_LAT$/
PF_MAX	../h/socket.h	/^#define	PF_MAX		AF_MAX$/
PF_NBIO	../sys/tty_pty.c	/^#define	PF_NBIO		0x04$/
PF_NBS	../h/socket.h	/^#define	PF_NBS		AF_NBS$/
PF_NOSTOP	../sys/tty_pty.c	/^#define	PF_NOSTOP	0x40$/
PF_NS	../h/socket.h	/^#define	PF_NS		AF_NS$/
PF_PKT	../sys/tty_pty.c	/^#define	PF_PKT		0x08		\/* packet mode *\/$/
PF_PUP	../h/socket.h	/^#define	PF_PUP		AF_PUP$/
PF_RCOLL	../sys/tty_pty.c	/^#define	PF_RCOLL	0x01$/
PF_REMOTE	../sys/tty_pty.c	/^#define	PF_REMOTE	0x20		\/* remote and flow contro/
PF_SNA	../h/socket.h	/^#define	PF_SNA		AF_SNA$/
PF_STOPPED	../sys/tty_pty.c	/^#define	PF_STOPPED	0x10		\/* user told stopped *\//
PF_UCNTL	../sys/tty_pty.c	/^#define PF_UCNTL	0x80		\/* user control mode *\/$/
PF_UNIX	../h/socket.h	/^#define	PF_UNIX		AF_UNIX$/
PF_UNSPEC	../h/socket.h	/^#define	PF_UNSPEC	AF_UNSPEC$/
PF_WCOLL	../sys/tty_pty.c	/^#define	PF_WCOLL	0x02$/
PGOFSET	../vax/machparam.h	/^#define	PGOFSET		(NBPG-1)	\/* byte offset into pag/
PGSHIFT	../vax/machparam.h	/^#define	PGSHIFT		9		\/* LOG2(NBPG) *\/$/
PG_FMAX	../vax/pte.h	/^#define	PG_FMAX		(PG_FTEXT)$/
PG_FOD	../vax/pte.h	/^#define	PG_FOD		0x02000000$/
PG_FTEXT	../vax/pte.h	/^#define	PG_FTEXT	1$/
PG_FZERO	../vax/pte.h	/^#define	PG_FZERO	0$/
PG_KR	../vax/pte.h	/^#define	PG_KR		0x18000000$/
PG_KW	../vax/pte.h	/^#define	PG_KW		0x10000000$/
PG_M	../vax/pte.h	/^#define	PG_M		0x04000000$/
PG_NOACC	../vax/pte.h	/^#define	PG_NOACC	0$/
PG_PFNUM	../vax/pte.h	/^#define	PG_PFNUM	0x001fffff$/
PG_PROT	../vax/pte.h	/^#define	PG_PROT		0x78000000$/
PG_URKR	../vax/pte.h	/^#define	PG_URKR		0x78000000$/
PG_URKW	../vax/pte.h	/^#define	PG_URKW		0x70000000$/
PG_UW	../vax/pte.h	/^#define	PG_UW		0x20000000$/
PG_V	../vax/pte.h	/^#define	PG_V		0x80000000$/
PG_VREADM	../vax/pte.h	/^#define	PG_VREADM	0x00800000$/
PHYSADRSHFT	../vax/autoconf.c	/^#define	PHYSADRSHFT	13$/
PHYSMBAMASK750	../vax/autoconf.c	/^#define	PHYSMBAMASK750	0x3$/
PHYSMBAMASK780	../vax/autoconf.c	/^#define	PHYSMBAMASK780	0x7$/
PHYSOFF	../sys/sys_process.c	/^#define	PHYSOFF(p, o) \\$/
PHYSSLOT	../vaxif/if_exreg.h	/^#define	PHYSSLOT	253	\/* physical slot index *\/$/
PI13	../vaxif/if_hy.c	/^#define PI13$/
PIDHASH	../h/proc.h	/^#define	PIDHASH(pid)	((pid) & (PIDHSZ - 1))$/
PIDHSZ	../h/proc.h	/^#define	PIDHSZ		64$/
PINOD	../h/param.h	/^#define	PINOD	10$/
PIOFF	../vaxuba/npreg.h	/^#define PIOFF		0x8000		\/* change this to unique m/
PIPSIZ	../sys/uipc_usrreq.c	/^#define	PIPSIZ	4096$/
PISHMEM	../vaxuba/npreg.h	/^#define	PISHMEM		0x200000$/
PISHMEMSIZE	../vaxuba/npreg.h	/^#define PISHMEMSIZE	2$/
PIWINDOW	../vaxuba/npreg.h	/^#define PIWINDOW	MBUSBUFR + PIOFF$/
PIXEL_CLOCK_RATE_MASK	../vaxuba/ikreg.h	/^#define		PIXEL_CLOCK_RATE_MASK	077$/
PKT_SIZE	../vaxif/if_ddnvar.h	/^#define	PKT_SIZE	0x90		\/* Packet size			*\/$/
PKT_WINDOW	../vaxif/if_ddnvar.h	/^#define	PKT_WINDOW	0x4f		\/* Packet window		*\/$/
PLOCK	../h/param.h	/^#define	PLOCK	35$/
PME_CLR	../vax/pcb.h	/^#define	PME_CLR		0x80000000$/
PMONMIN	../h/vmmeter.h	/^#define	PMONMIN	20$/
PMR	../vax/mtpr.h	/^#define	PMR	0x3d		\/* performance monitor enable */
PND	../vaxuba/dn.c	/^#define	PND	0x010		\/* present next digit *\/$/
POLLSTATS	../vaxuba/uda.c	/^#define	POLLSTATS$/
PORTNUM	../vaxif/if_hy.h	/^#define PORTNUM(p)	(((p)->hys_gen_status >> 6) & 0/
PPDONE	../vaxuba/psreg.h	/^#define PPDONE		0100000$/
PPIPE	../h/param.h	/^#define	PPIPE	26$/
PPQ	../sys/kern_synch.c	/^#define	PPQ	(128 \/ NQS)$/
PRCO_GETOPT	../h/protosw.h	/^#define	PRCO_GETOPT	0$/
PRCO_NCMDS	../h/protosw.h	/^#define	PRCO_NCMDS	2$/
PRCO_SETOPT	../h/protosw.h	/^#define	PRCO_SETOPT	1$/
PRC_HOSTDEAD	../h/protosw.h	/^#define	PRC_HOSTDEAD		6	\/* normally from IMP *\/$/
PRC_HOSTUNREACH	../h/protosw.h	/^#define	PRC_HOSTUNREACH		7	\/* ditto *\/$/
PRC_IFDOWN	../h/protosw.h	/^#define	PRC_IFDOWN		0	\/* interface transition *\//
PRC_MSGSIZE	../h/protosw.h	/^#define	PRC_MSGSIZE		5	\/* message size forced dro/
PRC_NCMDS	../h/protosw.h	/^#define	PRC_NCMDS		21$/
PRC_PARAMPROB	../h/protosw.h	/^#define	PRC_PARAMPROB		20	\/* header incorrect *\//
PRC_QUENCH	../h/protosw.h	/^#define	PRC_QUENCH		4	\/* some said to slow down */
PRC_REDIRECT_HOST	../h/protosw.h	/^#define	PRC_REDIRECT_HOST	15	\/* host routing redi/
PRC_REDIRECT_NET	../h/protosw.h	/^#define	PRC_REDIRECT_NET	14	\/* net routing redire/
PRC_REDIRECT_TOSHOST	../h/protosw.h	/^#define	PRC_REDIRECT_TOSHOST	17	\/* redirect for t/
PRC_REDIRECT_TOSNET	../h/protosw.h	/^#define	PRC_REDIRECT_TOSNET	16	\/* redirect for ty/
PRC_ROUTEDEAD	../h/protosw.h	/^#define	PRC_ROUTEDEAD		1	\/* select new route if p/
PRC_TIMXCEED_INTRANS	../h/protosw.h	/^#define	PRC_TIMXCEED_INTRANS	18	\/* packet lifetim/
PRC_TIMXCEED_REASS	../h/protosw.h	/^#define	PRC_TIMXCEED_REASS	19	\/* lifetime expired/
PRC_UNREACH_HOST	../h/protosw.h	/^#define	PRC_UNREACH_HOST	9	\/* no route to host */
PRC_UNREACH_NEEDFRAG	../h/protosw.h	/^#define	PRC_UNREACH_NEEDFRAG	12	\/* IP_DF caused d/
PRC_UNREACH_NET	../h/protosw.h	/^#define	PRC_UNREACH_NET		8	\/* no route to network/
PRC_UNREACH_PORT	../h/protosw.h	/^#define	PRC_UNREACH_PORT	11	\/* bad port # *\/$/
PRC_UNREACH_PROTOCOL	../h/protosw.h	/^#define	PRC_UNREACH_PROTOCOL	10	\/* dst says bad p/
PRC_UNREACH_SRCFAIL	../h/protosw.h	/^#define	PRC_UNREACH_SRCFAIL	13	\/* source route fa/
PRES	../h/vmmeter.h	/^#define	PRES	50$/
PRIBIO	../h/param.h	/^#define	PRIBIO	20$/
PRIO_MAX	../h/resource.h	/^#define	PRIO_MAX	20$/
PRIO_MIN	../h/resource.h	/^#define	PRIO_MIN	-20$/
PRIO_PGRP	../h/resource.h	/^#define	PRIO_PGRP	1$/
PRIO_PROCESS	../h/resource.h	/^#define	PRIO_PROCESS	0$/
PRIO_USER	../h/resource.h	/^#define	PRIO_USER	2$/
PRIUBA	../h/param.h	/^#define	PRIUBA	24$/
PROC	../vaxuba/ikreg.h	/^#define PROC		041200000$/
PROC_ENABLE	../vaxuba/ikreg.h	/^#define PROC_ENABLE	020000$/
PROTOMASK	../vaxuba/npreg.h	/^#define PROTOMASK(x)	( 1 << (x) )$/
PROT_EXEC	../h/mman.h	/^#define	PROT_EXEC	0x4		\/* pages can be executed */
PROT_READ	../h/mman.h	/^#define	PROT_READ	0x1		\/* pages can be read *\/$/
PROT_WRITE	../h/mman.h	/^#define	PROT_WRITE	0x2		\/* pages can be written */
PRTERA	../h/ioctl.h	/^#define		PRTERA		0x00020000	\/* \\ ... \/ erase */
PRUREQUESTS	../netinet/tcp_debug.c	/^#define PRUREQUESTS$/
PRU_ABORT	../h/protosw.h	/^#define	PRU_ABORT		10	\/* abort (fast DISCONNECT, /
PRU_ACCEPT	../h/protosw.h	/^#define	PRU_ACCEPT		5	\/* accept connection from p/
PRU_ATTACH	../h/protosw.h	/^#define	PRU_ATTACH		0	\/* attach protocol to up */
PRU_BIND	../h/protosw.h	/^#define	PRU_BIND		2	\/* bind socket to address *\//
PRU_CONNECT	../h/protosw.h	/^#define	PRU_CONNECT		4	\/* establish connection to/
PRU_CONNECT2	../h/protosw.h	/^#define	PRU_CONNECT2		17	\/* connect two sockets */
PRU_CONTROL	../h/protosw.h	/^#define	PRU_CONTROL		11	\/* control operations on /
PRU_DETACH	../h/protosw.h	/^#define	PRU_DETACH		1	\/* detach protocol from up /
PRU_DISCONNECT	../h/protosw.h	/^#define	PRU_DISCONNECT		6	\/* disconnect from peer/
PRU_FASTTIMO	../h/protosw.h	/^#define	PRU_FASTTIMO		18	\/* 200ms timeout *\/$/
PRU_LISTEN	../h/protosw.h	/^#define	PRU_LISTEN		3	\/* listen for connection */
PRU_NREQ	../h/protosw.h	/^#define	PRU_NREQ		21$/
PRU_PEERADDR	../h/protosw.h	/^#define	PRU_PEERADDR		16	\/* fetch peer's address /
PRU_PROTORCV	../h/protosw.h	/^#define	PRU_PROTORCV		20	\/* receive from below */
PRU_PROTOSEND	../h/protosw.h	/^#define	PRU_PROTOSEND		21	\/* send to below *\/$/
PRU_RCVD	../h/protosw.h	/^#define	PRU_RCVD		8	\/* have taken data; more room/
PRU_RCVOOB	../h/protosw.h	/^#define	PRU_RCVOOB		13	\/* retrieve out of band da/
PRU_SEND	../h/protosw.h	/^#define	PRU_SEND		9	\/* send this data *\/$/
PRU_SENDOOB	../h/protosw.h	/^#define	PRU_SENDOOB		14	\/* send out of band data /
PRU_SENSE	../h/protosw.h	/^#define	PRU_SENSE		12	\/* return status into m *\//
PRU_SHUTDOWN	../h/protosw.h	/^#define	PRU_SHUTDOWN		7	\/* won't send any more da/
PRU_SLOWTIMO	../h/protosw.h	/^#define	PRU_SLOWTIMO		19	\/* 500ms timeout *\/$/
PRU_SOCKADDR	../h/protosw.h	/^#define	PRU_SOCKADDR		15	\/* fetch socket's addres/
PR_ADDR	../h/protosw.h	/^#define	PR_ADDR		0x02		\/* addresses given with me/
PR_ATOMIC	../h/protosw.h	/^#define	PR_ATOMIC	0x01		\/* exchange atomic messag/
PR_CONNREQUIRED	../h/protosw.h	/^#define	PR_CONNREQUIRED	0x04		\/* connection requi/
PR_FASTHZ	../h/protosw.h	/^#define	PR_FASTHZ	5		\/* 5 fast timeouts per secon/
PR_RIGHTS	../h/protosw.h	/^#define	PR_RIGHTS	0x10		\/* passes capabilities */
PR_SLOWHZ	../h/protosw.h	/^#define	PR_SLOWHZ	2		\/* 2 slow timeouts per secon/
PR_WANTRCVD	../h/protosw.h	/^#define	PR_WANTRCVD	0x08		\/* want PRU_RCVD calls /
PS	../vax/reg.h	/^#define	PS	(-1)$/
PSAHOLD	../vaxuba/psreg.h	/^#define PSAHOLD		040000$/
PSIE	../vaxuba/psreg.h	/^#define PSIE		0400$/
PSIOAUTOMAP	../vaxuba/psreg.h	/^#define PSIOAUTOMAP		_IO('p', 2)		\/* auto map *\//
PSIOAUTOREFRESH	../vaxuba/psreg.h	/^#define PSIOAUTOREFRESH		_IO('p', 0)		\/* auto ref/
PSIODOUBLEBUFFER	../vaxuba/psreg.h	/^#define PSIODOUBLEBUFFER	_IO('p', 4)		\/* double b/
PSIOGETADDR	../vaxuba/psreg.h	/^#define PSIOGETADDR		_IOR('p',11, int)	\/* get Uni/
PSIOSINGLEBUFFER	../vaxuba/psreg.h	/^#define PSIOSINGLEBUFFER	_IO('p', 5)		\/* single b/
PSIOSINGLEMAP	../vaxuba/psreg.h	/^#define PSIOSINGLEMAP		_IO('p', 3)		\/* single map/
PSIOSINGLEREFRESH	../vaxuba/psreg.h	/^#define PSIOSINGLEREFRESH	_IO('p', 1)		\/* single /
PSIOSTOPMAP	../vaxuba/psreg.h	/^#define PSIOSTOPMAP		_IO('p',10)		\/* stop map *\//
PSIOSTOPREFRESH	../vaxuba/psreg.h	/^#define PSIOSTOPREFRESH		_IO('p', 9)		\/* stop ref/
PSIOTIMEREFRESH	../vaxuba/psreg.h	/^#define PSIOTIMEREFRESH		_IO('p',12)		\/* time ref/
PSIOWAITHIT	../vaxuba/psreg.h	/^#define PSIOWAITHIT		_IO('p', 8)		\/* await hit */
PSIOWAITMAP	../vaxuba/psreg.h	/^#define PSIOWAITMAP		_IO('p', 7)		\/* await map */
PSIOWAITREFRESH	../vaxuba/psreg.h	/^#define PSIOWAITREFRESH		_IO('p', 6)		\/* await re/
PSLEP	../h/param.h	/^#define	PSLEP	40$/
PSL_ALLCC	../vax/psl.h	/^#define	PSL_ALLCC	0x0000000f	\/* all cc bits - unl/
PSL_C	../vax/psl.h	/^#define	PSL_C		0x00000001	\/* carry bit *\/$/
PSL_CM	../vax/psl.h	/^#define	PSL_CM		0x80000000	\/* compatibility mode /
PSL_CM_CLR	../vax/psl.h	/^#define	PSL_CM_CLR	(PSL_FPD|PSL_DV|PSL_FU|PSL_IV)$/
PSL_CURMOD	../vax/psl.h	/^#define	PSL_CURMOD	0x03000000	\/* current mode (al/
PSL_DV	../vax/psl.h	/^#define	PSL_DV		0x00000080	\/* decimal overflow en/
PSL_FPD	../vax/psl.h	/^#define	PSL_FPD		0x08000000	\/* first part done */
PSL_FU	../vax/psl.h	/^#define	PSL_FU		0x00000040	\/* floating point unde/
PSL_IPL	../vax/psl.h	/^#define	PSL_IPL		0x001f0000	\/* interrupt priority/
PSL_IS	../vax/psl.h	/^#define	PSL_IS		0x04000000	\/* interrupt stack *\//
PSL_IV	../vax/psl.h	/^#define	PSL_IV		0x00000020	\/* integer overflow en/
PSL_MBZ	../vax/psl.h	/^#define	PSL_MBZ		0x3020ff00	\/* must be zero bits /
PSL_N	../vax/psl.h	/^#define	PSL_N		0x00000008	\/* negative bit *\/$/
PSL_PRVMOD	../vax/psl.h	/^#define	PSL_PRVMOD	0x00c00000	\/* previous mode (a/
PSL_T	../vax/psl.h	/^#define	PSL_T		0x00000010	\/* trace enable bit *\//
PSL_TP	../vax/psl.h	/^#define	PSL_TP		0x40000000	\/* trace pending *\/$/
PSL_USERCLR	../vax/psl.h	/^#define	PSL_USERCLR	(PSL_IS|PSL_IPL|PSL_MBZ)$/
PSL_USERSET	../vax/psl.h	/^#define	PSL_USERSET	(PSL_PRVMOD|PSL_CURMOD)$/
PSL_V	../vax/psl.h	/^#define	PSL_V		0x00000002	\/* overflow bit *\/$/
PSL_Z	../vax/psl.h	/^#define	PSL_Z		0x00000004	\/* zero bit *\/$/
PSPRI	../vaxuba/ps.c	/^#define PSPRI		(PZERO+1)$/
PSRESET	../vaxuba/psreg.h	/^#define PSRESET		020000$/
PSUNIT	../vaxuba/ps.c	/^#define	PSUNIT(dev)	(minor(dev))$/
PSWAIT	../vaxuba/ps.c	/^#define PSWAIT(psaddr) { \\$/
PSWP	../h/param.h	/^#define	PSWP	0$/
PT_CONTINUE	../h/ptrace.h	/^#define PT_CONTINUE	7	\/* continue the child *\/$/
PT_KILL	../h/ptrace.h	/^#define PT_KILL		8	\/* kill the child process *\/$/
PT_READ_D	../h/ptrace.h	/^#define PT_READ_D	2	\/* read word in child's D spa/
PT_READ_I	../h/ptrace.h	/^#define PT_READ_I	1	\/* read word in child's I spa/
PT_READ_U	../h/ptrace.h	/^#define PT_READ_U	3	\/* read word in child's user /
PT_STEP	../h/ptrace.h	/^#define PT_STEP		9	\/* single step the child *\/$/
PT_TRACE_ME	../h/ptrace.h	/^#define PT_TRACE_ME	0	\/* child declares it's bein/
PT_WRITE_D	../h/ptrace.h	/^#define PT_WRITE_D	5	\/* write word in child's D s/
PT_WRITE_I	../h/ptrace.h	/^#define PT_WRITE_I	4	\/* write word in child's I s/
PT_WRITE_U	../h/ptrace.h	/^#define PT_WRITE_U	6	\/* write word in child's use/
PUSER	../h/param.h	/^#define	PUSER	50$/
PWAIT	../h/param.h	/^#define	PWAIT	30$/
PWI	../vaxuba/dn.c	/^#define	PWI	0x8000		\/* power indicate *\/$/
PZERO	../h/param.h	/^#define	PZERO	25$/
P_UNIADDR	../vaxif/if_ex.c	/^#define	P_UNIADDR(x)	((u_long)(x)&0x3FFF0)$/
QBA	../vaxuba/ubareg.h	/^#define	QBA	4		\/* 22-bit Q-bus, no adaptor regs: /
QBAMAP630	../vaxuba/ubareg.h	/^#define	QBAMAP630	((struct pte *)0x20088000)$/
QBAPAGES	../vaxuba/ubareg.h	/^#define	QBAPAGES	UBAPAGES	\/* for now; should be 8/
QEALLOC	../vaxif/if_qereg.h	/^#define QEALLOC 		0	\/* Allocate an mbuf		*\/$/
QEDEALLOC	../vaxif/if_qereg.h	/^#define QEDEALLOC		2	\/* Release an mbuf chain	*\//
QEF_RUNNING	../vaxif/if_qe.c	/^#define	QEF_RUNNING	0x01$/
QEF_SETADDR	../vaxif/if_qe.c	/^#define	QEF_SETADDR	0x02$/
QENOALLOC	../vaxif/if_qereg.h	/^#define QENOALLOC		1	\/* No mbuf allocation		*\/$/
QEUNIT	../vaxif/if_qe.c	/^#define	QEUNIT(x)	minor(x)$/
QE_ABORT	../vaxif/if_qereg.h	/^#define QE_ABORT		0x0200	\/* Transmission abort		*/
QE_CARRIER	../vaxif/if_qereg.h	/^#define QE_CARRIER	0x2000		\/* Carrier detect		*\//
QE_CCNT	../vaxif/if_qereg.h	/^#define QE_CCNT			0x00f0	\/* Collision count this /
QE_CRCERR	../vaxif/if_qereg.h	/^#define QE_CRCERR		0x0002	\/* CRC error			*\/$/
QE_DISCARD	../vaxif/if_qereg.h	/^#define QE_DISCARD		0x1000	\/* Discard the packet	/
QE_ELOOP	../vaxif/if_qereg.h	/^#define QE_ELOOP	0x0200		\/* External loopback		*/
QE_ERROR	../vaxif/if_qereg.h	/^#define QE_ERROR		0x4000	\/* Receiver error		*\/$/
QE_ESETUP	../vaxif/if_qereg.h	/^#define QE_ESETUP		0x2000	\/* Looped back setup or/
QE_FAIL	../vaxif/if_qereg.h	/^#define QE_FAIL			0x0100	\/* Heart beat check fail/
QE_FRAME	../vaxif/if_qereg.h	/^#define QE_FRAME		0x0004	\/* Framing alignment err/
QE_ILOOP	../vaxif/if_qereg.h	/^#define QE_ILOOP 	0x0100		\/* Internal loopback		*/
QE_INT_ENABLE	../vaxif/if_qereg.h	/^#define QE_INT_ENABLE	0x0040		\/* Interrupt enable/
QE_INUSE	../vaxif/if_qereg.h	/^#define QE_INUSE		0x4000	\/* Descriptor being used/
QE_LASTNOT	../vaxif/if_qereg.h	/^#define QE_LASTNOT		0x8000	\/* Not the last in the/
QE_LOAD_ROM	../vaxif/if_qereg.h	/^#define QE_LOAD_ROM	0x0008		\/* Load boot\/diag fr/
QE_LOSS	../vaxif/if_qereg.h	/^#define QE_LOSS			0x1000	\/* Loss of carrier while/
QE_MASK	../vaxif/if_qereg.h	/^#define QE_MASK			0xc000	\/* Lastnot\/error\/used /
QE_NEX_MEM_INT	../vaxif/if_qereg.h	/^#define QE_NEX_MEM_INT	0x0004		\/* Non existant me/
QE_NOCAR	../vaxif/if_qereg.h	/^#define QE_NOCAR		0x0800	\/* No carrier			*\/$/
QE_NOTYET	../vaxif/if_qereg.h	/^#define QE_NOTYET		0x8000	\/* Descriptor not in us/
QE_OVF	../vaxif/if_qereg.h	/^#define QE_OVF			0x0001	\/* Receiver overflow		*\//
QE_POWERUP	../vaxif/if_qereg.h	/^#define QE_POWERUP	0x1000		\/* Tranceiver power on/
QE_RBL_HI	../vaxif/if_qereg.h	/^#define QE_RBL_HI		0x0700	\/* Hi bits of receive l/
QE_RBL_LO	../vaxif/if_qereg.h	/^#define QE_RBL_LO		0x00ff	\/* Low bits of receive /
QE_RCV_ENABLE	../vaxif/if_qereg.h	/^#define QE_RCV_ENABLE	0x0001		\/* Receiver enable	/
QE_RCV_INT	../vaxif/if_qereg.h	/^#define QE_RCV_INT	0x8000		\/* Receiver interrupt	/
QE_RESET	../vaxif/if_qereg.h	/^#define QE_RESET	0x0002		\/* Software reset		*\/$/
QE_RL_INVALID	../vaxif/if_qereg.h	/^#define QE_RL_INVALID	0x0020		\/* Receive list inv/
QE_RUNT	../vaxif/if_qereg.h	/^#define QE_RUNT			0x0800	\/* Runt packet			*\/$/
QE_SHORT	../vaxif/if_qereg.h	/^#define QE_SHORT		0x0008	\/* Packet size < 10 byte/
QE_STE16	../vaxif/if_qereg.h	/^#define QE_STE16		0x0400	\/* Sanity timer default /
QE_STIM_ENABLE	../vaxif/if_qereg.h	/^#define QE_STIM_ENABLE	0x0400		\/* Sanity timer en/
QE_TDR	../vaxif/if_qereg.h	/^#define QE_TDR			0x3fff	\/* Time domain reflectome/
QE_TIMEO	../vaxif/if_qe.c	/^#define QE_TIMEO	(15)$/
QE_XL_INVALID	../vaxif/if_qereg.h	/^#define QE_XL_INVALID	0x0010		\/* Transmit list in/
QE_XMIT_INT	../vaxif/if_qereg.h	/^#define QE_XMIT_INT	0x0080		\/* Transmit interrupt/
QHASH	../sys/quota_kern.c	/^#define	QHASH(uid)	((unsigned)(uid) & (NQHASH-1))$/
QIOPAGE630	../vaxuba/ubareg.h	/^#define	QIOPAGE630	0x20000000$/
QIPCR	../vaxuba/ubareg.h	/^#define	QIPCR		0x1f40		\/* from start of iopage */
QMEM630	../vaxuba/ubareg.h	/^#define	QMEM630		0x30000000$/
QUEUE_AT_HEAD	../vaxif/if_dmc.c	/^#define	QUEUE_AT_HEAD(qp, head, tail) \\$/
QUEUE_AT_TAIL	../vaxif/if_dmc.c	/^#define QUEUE_AT_TAIL(qp, head, tail) \\$/
Q_AUXHLT	../vaxuba/ubareg.h	/^#define	Q_AUXHLT	0x0100		\/* auxiliary processor h/
Q_DBIIE	../vaxuba/ubareg.h	/^#define	Q_DBIIE		0x0040		\/* doorbell interrupt en/
Q_DBIRQ	../vaxuba/ubareg.h	/^#define	Q_DBIRQ		0x0001		\/* doorbell interrupt re/
Q_DMAQPE	../vaxuba/ubareg.h	/^#define	Q_DMAQPE	0x8000		\/* Q22 bus address space/
Q_DOWARN	../h/quota.h	/^#define	Q_DOWARN	26	\/* warn user about excessive /
Q_GETDLIM	../h/quota.h	/^#define	Q_GETDLIM	2	\/* get disc limits & usage */
Q_LMEAE	../vaxuba/ubareg.h	/^#define	Q_LMEAE		0x0020		\/* local mem external ac/
Q_LOCK	../h/quota.h	/^#define	Q_LOCK	0x01		\/* quota struct locked (for /
Q_NDQ	../h/quota.h	/^#define	Q_NDQ	0x08		\/* account has NO disc quota /
Q_NEW	../h/quota.h	/^#define	Q_NEW	0x04		\/* new quota - no proc1 msg s/
Q_SETDLIM	../h/quota.h	/^#define	Q_SETDLIM	1	\/* set disc limits & usage */
Q_SETDUSE	../h/quota.h	/^#define	Q_SETDUSE	3	\/* set disc usage only *\/$/
Q_SETUID	../h/quota.h	/^#define	Q_SETUID	16	\/* change proc to use quotas /
Q_SETWARN	../h/quota.h	/^#define	Q_SETWARN	25	\/* alter inode\/block warnin/
Q_SYNC	../h/quota.h	/^#define	Q_SYNC		4	\/* update disc copy of quota us/
Q_WANT	../h/quota.h	/^#define	Q_WANT	0x02		\/* issue a wakeup when lock /
Qptr	../sys/quota_kern.c	/^typedef	struct quota *Qptr;$/
R0	../vax/reg.h	/^#define	R0	(-18)$/
R1	../vax/reg.h	/^#define	R1	(-17)$/
R10	../vax/reg.h	/^#define	R10	(-8)$/
R100	../vaxuba/lpa.c	/^#define R100	5<<1		\/* 100 Hz rate *\/$/
R100K	../vaxuba/lpa.c	/^#define R100K	2<<1		\/* 100 KHz rate *\/$/
R10K	../vaxuba/lpa.c	/^#define R10K	3<<1		\/* 10 KHz rate *\/$/
R11	../vax/reg.h	/^#define	R11	(-7)$/
R12	../vax/reg.h	/^#define	R12	(-21)$/
R13	../vax/reg.h	/^#define	R13	(-20)$/
R1K	../vaxuba/lpa.c	/^#define R1K	4<<1		\/* 1 KHz rate *\/$/
R1M	../vaxuba/lpa.c	/^#define R1M	1<<1		\/* 1 MHz rate *\/$/
R2	../vax/reg.h	/^#define	R2	(-16)$/
R3	../vax/reg.h	/^#define	R3	(-15)$/
R4	../vax/reg.h	/^#define	R4	(-14)$/
R5	../vax/reg.h	/^#define	R5	(-13)$/
R6	../vax/reg.h	/^#define	R6	(-12)$/
R60	../vaxuba/lpa.c	/^#define R60	7<<1		\/* line frequency rate *\/$/
R7	../vax/reg.h	/^#define	R7	(-11)$/
R8	../vax/reg.h	/^#define	R8	(-10)$/
R9	../vax/reg.h	/^#define	R9	(-9)$/
RATETOSCHEDPAGING	../vax/vmparam.h	/^#define	RATETOSCHEDPAGING	4$/
RAW	../h/ioctl.h	/^#define		RAW		0x00000020	\/* no i\/o processing */
RAWPART	../vaxmba/hp.c	/^#define	RAWPART		2		\/* 'c' partition *\/	\/* XXX /
RAWRCVQ	../net/raw_cb.h	/^#define	RAWRCVQ		2048$/
RAWSNDQ	../net/raw_cb.h	/^#define	RAWSNDQ		2048$/
RAW_DONTROUTE	../net/raw_cb.h	/^#define	RAW_DONTROUTE	04		\/* no routing, default /
RAW_FADDR	../net/raw_cb.h	/^#define	RAW_FADDR	02$/
RAW_LADDR	../net/raw_cb.h	/^#define	RAW_LADDR	01$/
RA_TYPE_RX50	../vaxuba/uda.c	/^#define	RA_TYPE_RX50	7	\/* special: see udaopen */
RB_ASKNAME	../h/reboot.h	/^#define	RB_ASKNAME	0x01	\/* ask for file name to r/
RB_AUTOBOOT	../h/reboot.h	/^#define	RB_AUTOBOOT	0	\/* flags for system auto-bo/
RB_DFLTROOT	../h/reboot.h	/^#define	RB_DFLTROOT	0x20	\/* use compiled-in rootd/
RB_DUMP	../h/reboot.h	/^#define	RB_DUMP		0x100	\/* dump kernel memory befo/
RB_HALT	../h/reboot.h	/^#define	RB_HALT		0x08	\/* don't reboot, just halt /
RB_INITNAME	../h/reboot.h	/^#define	RB_INITNAME	0x10	\/* name given for \/etc/
RB_KDB	../h/reboot.h	/^#define	RB_KDB		0x40	\/* give control to kernel de/
RB_NOSYNC	../h/reboot.h	/^#define	RB_NOSYNC	0x04	\/* dont sync before reboot/
RB_RDONLY	../h/reboot.h	/^#define	RB_RDONLY	0x80	\/* mount root fs read-only/
RB_SINGLE	../h/reboot.h	/^#define	RB_SINGLE	0x02	\/* reboot to single user o/
RCSR0	../vaxuba/npreg.h	/^#define	RCSR0(x)	((x)->CSR0)$/
RCSR1	../vaxuba/npreg.h	/^#define	RCSR1(x)	((x)->CSR1)$/
RCSR2	../vaxuba/npreg.h	/^#define	RCSR2(x)	((x)->CSR2)$/
RCSR3	../vaxuba/npreg.h	/^#define	RCSR3(x)	((x)->CSR3)$/
RDAEXT	../vaxuba/lpa.c	/^#define RDAEXT	0000014		\/* rda address extension /
RDAEXTOFFSET	../vaxuba/lpa.c	/^#define RDAEXTOFFSET	2	\/* offset of RDAEXT from r/
RDBADTBL	../vaxmba/hp.c	/^#define	RDBADTBL	4		\/* reading bad-sector table */
RDLABEL	../vaxmba/hp.c	/^#define	RDLABEL		3		\/* reading pack label *\/$/
RDYSCAN	../vaxif/if_dmc.h	/^#define	RDYSCAN	16	\/* loop delay for RDYI after R/
READY	../vaxif/if_ddnvar.h	/^#define	READY		0x23		\/* flow control ready		*\/$/
READYI	../vaxuba/lpa.c	/^#define	READYI	0000200		\/* ready in *\/$/
READYO	../vaxuba/lpa.c	/^#define READYO	0200		\/* ready out *\/$/
READ_OBJ	../vaxif/if_exreg.h	/^#define	READ_OBJ	2	\/* read the object *\/$/
READ_SELECT	../vaxuba/ikreg.h	/^#define READ_SELECT	0$/
RECVDATASENT	../vaxif/if_hy.h	/^#define	RECVDATASENT	5	\/* input data cmd sent *\//
RECVSENT	../vaxif/if_hy.h	/^#define	RECVSENT	4	\/* input message cmd sent *\/$/
RECV_BITS	../vaxif/if_exreg.h	/^#define	RECV_BITS	"\\7\\7BUFLEN\\6CRC\\5ALIGN\\3TR/
REDUCE	../netinet/in_cksum.c	/^#define REDUCE {l_util.l = sum; sum = l_util.s[0] /
RED_SELECT	../vaxuba/ikreg.h	/^#define RED_SELECT	0$/
REFBIT	../sys/vm_page.c	/^#define REFBIT$/
REPEAT_FIELD	../vaxuba/ikreg.h	/^#define		REPEAT_FIELD		02000$/
REQALOC	../vaxuba/npreg.h	/^#define REQALOC 0x100           \/* Request has be/
REQDONE	../vaxuba/npreg.h	/^#define REQDONE 0x01		\/* Request completed *\/$/
REQUEST_A	../vaxuba/ct.c	/^#define REQUEST_A	0x80$/
REQUEST_B	../vaxuba/ct.c	/^#define	REQUEST_B	0x8000$/
REQUSE	../vaxuba/npreg.h	/^#define REQUSE  0x200           \/* Request is in /
RERR_BITS	../vaxif/if_dereg.h	/^#define	RERR_BITS	"\\20\\20BUFL\\17UBTO\\16NCHN"$/
RERR_BUFL	../vaxif/if_dereg.h	/^#define	RERR_BUFL	0x8000		\/* Buffer length error /
RERR_MLEN	../vaxif/if_dereg.h	/^#define	RERR_MLEN	0x0fff		\/* Message length *\/$/
RERR_NCHN	../vaxif/if_dereg.h	/^#define	RERR_NCHN	0x2000		\/* No data chaining *\//
RERR_UBTO	../vaxif/if_dereg.h	/^#define	RERR_UBTO	0x4000		\/* UNIBUS tiemout *\/$/
RES1024	../vaxuba/ikreg.h	/^#define RES1024		3$/
RES512	../vaxuba/ikreg.h	/^#define RES512		2$/
RESET	../vaxif/if_ddnvar.h	/^#define	RESET		0x20		\/* reset LCN			*\/$/
RESET_ACK	../vaxif/if_ddnvar.h	/^#define RESET_ACK	0x21		\/* reset ack			*\/$/
RESTART	../vaxif/if_ddnvar.h	/^#define RESTART		0x40		\/* X25 restart			*\/$/
RESTARTSYS	../h/user.h	/^#define	RESTARTSYS	2$/
RESTORPSADDR	../vaxuba/ps.c	/^#define RESTORPSADDR(psaddr, savepsaddr) { \\$/
RETURN	../h/tty.h	/^#define	RETURN		6$/
REXT	../vaxuba/lpa.c	/^#define REXT	6<<1		\/* external rate (from st1 inp/
RFAIA	../vaxuba/psreg.h	/^#define RFAIA		0177734$/
RFAIL	../vaxuba/psreg.h	/^#define RFAIL		0177736$/
RFASA	../vaxuba/psreg.h	/^#define RFASA		0177735$/
RFAWA	../vaxuba/psreg.h	/^#define RFAWA		0177732$/
RFAWL	../vaxuba/psreg.h	/^#define RFAWL		0177733$/
RFBLANK	../vaxuba/psreg.h	/^#define RFBLANK		04000$/
RFCSN	../vaxuba/psreg.h	/^#define RFCSN		0177730$/
RFHOLD	../vaxuba/psreg.h	/^#define RFHOLD		040000$/
RFLG_BITS	../vaxif/if_dereg.h	/^#define	RFLG_BITS	"\\10\\10OWN\\7ERRS\\6FRAM\\5OFL/
RFLG_CRC	../vaxif/if_dereg.h	/^#define	RFLG_CRC	0x08		\/* CRC error *\/$/
RFLG_ENP	../vaxif/if_dereg.h	/^#define	RFLG_ENP	0x01		\/* End of packet *\/$/
RFLG_ERRS	../vaxif/if_dereg.h	/^#define	RFLG_ERRS	0x40		\/* Error summary *\/$/
RFLG_FRAM	../vaxif/if_dereg.h	/^#define	RFLG_FRAM	0x20		\/* Framing error *\/$/
RFLG_OFLO	../vaxif/if_dereg.h	/^#define	RFLG_OFLO	0x10		\/* Message overflow *\/$/
RFLG_OWN	../vaxif/if_dereg.h	/^#define	RFLG_OWN	0x80		\/* If 0 then owned by driv/
RFLG_STP	../vaxif/if_dereg.h	/^#define	RFLG_STP	0x02		\/* Start of packet *\/$/
RFNMTIMER	../netimp/if_imp.h	/^#define	RFNMTIMER	(120*PR_SLOWHZ)	 \/* time to wai/
RFSN	../vaxuba/psreg.h	/^#define RFSN		0177731$/
RFSR	../vaxuba/psreg.h	/^#define RFSR		0177737$/
RFSTART	../vaxuba/psreg.h	/^#define RFSTART		020000$/
RFSTOPPED	../vaxuba/psreg.h	/^#define RFSTOPPED	0100000$/
RFSTOP_REQ	../vaxuba/psreg.h	/^#define RFSTOP_REQ	020$/
RIGHT	../vaxuba/psreg.h	/^#define RIGHT		02000$/
RING	../vaxif/if_ddnvar.h	/^#define RING		0x01		\/* incoming call		*\/$/
RING_ARP	../vaxif/if_vv.h	/^#define RING_ARP	3$/
RING_DIAGNOSTICS	../vaxif/if_vv.h	/^#define	RING_DIAGNOSTICS 15	\/* protocol type for /
RING_ECHO	../vaxif/if_vv.h	/^#define	RING_ECHO	16$/
RING_HDLC	../vaxif/if_vv.h	/^#define RING_HDLC	4$/
RING_IP	../vaxif/if_vv.h	/^#define	RING_IP		1$/
RING_NOVELL	../vaxif/if_vv.h	/^#define	RING_NOVELL	10$/
RING_PUP	../vaxif/if_vv.h	/^#define RING_PUP	12$/
RING_RINGWAY	../vaxif/if_vv.h	/^#define RING_RINGWAY	6$/
RING_RINGWAYM	../vaxif/if_vv.h	/^#define RING_RINGWAYM	8$/
RING_TRAILER	../vaxif/if_vv.h	/^#define	RING_TRAILER	2	\/* offset now in vh_info o/
RING_VAXDB	../vaxif/if_vv.h	/^#define RING_VAXDB	5$/
RING_VERSION	../vaxif/if_vv.h	/^#define	RING_VERSION	2	\/* current version of v2ln/
RING_XNS	../vaxif/if_vv.h	/^#define RING_XNS	14$/
RKAS_M1200	../vaxuba/rkreg.h	/^#define	RKAS_M1200	0260		\/* -1200 RK06, -1200 RK0/
RKAS_M400	../vaxuba/rkreg.h	/^#define	RKAS_M400	0220		\/*  -400 RK06,  -200 RK07/
RKAS_M800	../vaxuba/rkreg.h	/^#define	RKAS_M800	0240		\/*  -800 RK06,  -400 RK07/
RKAS_P1200	../vaxuba/rkreg.h	/^#define	RKAS_P1200	0060		\/*  +800 RK06,  +400 RK0/
RKAS_P400	../vaxuba/rkreg.h	/^#define	RKAS_P400	0020		\/*  +400 RK06,  +200 RK07/
RKAS_P800	../vaxuba/rkreg.h	/^#define	RKAS_P800	0040		\/*  +800 RK06,  +400 RK07/
RKCS2_BAI	../vaxuba/rkreg.h	/^#define	RKCS2_BAI	0000020		\/* bus address increme/
RKCS2_BITS	../vaxuba/rkreg.h	/^#define	RKCS2_BITS \\$/
RKCS2_DLT	../vaxuba/rkreg.h	/^#define	RKCS2_DLT	0100000		\/* data late *\/$/
RKCS2_HARD	../vaxuba/rkreg.h	/^#define	RKCS2_HARD		(RKCS2_NED|RKCS2_PGE)$/
RKCS2_IR	../vaxuba/rkreg.h	/^#define	RKCS2_IR	0000100		\/* input ready *\/$/
RKCS2_MDS	../vaxuba/rkreg.h	/^#define	RKCS2_MDS	0001000		\/* multiple drive sele/
RKCS2_NED	../vaxuba/rkreg.h	/^#define	RKCS2_NED	0010000		\/* non-existant drive /
RKCS2_NEM	../vaxuba/rkreg.h	/^#define	RKCS2_NEM	0004000		\/* non-existant memory/
RKCS2_OR	../vaxuba/rkreg.h	/^#define	RKCS2_OR	0000200		\/* output ready *\/$/
RKCS2_PGE	../vaxuba/rkreg.h	/^#define	RKCS2_PGE	0002000		\/* programming error */
RKCS2_RLS	../vaxuba/rkreg.h	/^#define	RKCS2_RLS	0000010		\/* release *\/$/
RKCS2_SCLR	../vaxuba/rkreg.h	/^#define	RKCS2_SCLR	0000040		\/* subsystem clear */
RKCS2_UFE	../vaxuba/rkreg.h	/^#define	RKCS2_UFE	0000400		\/* unit field error */
RKCS2_UPE	../vaxuba/rkreg.h	/^#define	RKCS2_UPE	0020000		\/* unibus parity *\/$/
RKCS2_WCE	../vaxuba/rkreg.h	/^#define	RKCS2_WCE	0040000		\/* write check *\/$/
RKDS_ACLO	../vaxuba/rkreg.h	/^#define	RKDS_ACLO	0000010		\/* ac low *\/$/
RKDS_BITS	../vaxuba/rkreg.h	/^#define	RKDS_BITS \\$/
RKDS_CDA	../vaxuba/rkreg.h	/^#define	RKDS_CDA	0040000		\/* current drive attent/
RKDS_DDT	../vaxuba/rkreg.h	/^#define	RKDS_DDT	0000400		\/* disk drive type *\/$/
RKDS_DRA	../vaxuba/rkreg.h	/^#define	RKDS_DRA	0000001		\/* drive available *\/$/
RKDS_DRDY	../vaxuba/rkreg.h	/^#define	RKDS_DRDY	0000200		\/* drive ready *\/$/
RKDS_DREADY	../vaxuba/rkreg.h	/^#define	RKDS_DREADY	(RKDS_DRA|RKDS_VV|RKDS_DRDY)$/
RKDS_DROT	../vaxuba/rkreg.h	/^#define	RKDS_DROT	0000040		\/* drive off track *\//
RKDS_HARD	../vaxuba/rkreg.h	/^#define	RKDS_HARD	(RKDS_ACLO|RKDS_SPLS)$/
RKDS_OFF	../vaxuba/rkreg.h	/^#define	RKDS_OFF	0000004		\/* offset mode *\/$/
RKDS_PIP	../vaxuba/rkreg.h	/^#define	RKDS_PIP	0020000		\/* positioning in progr/
RKDS_SPLS	../vaxuba/rkreg.h	/^#define	RKDS_SPLS	0000020		\/* speed loss *\/$/
RKDS_SVAL	../vaxuba/rkreg.h	/^#define	RKDS_SVAL	0100000		\/* status valid *\/$/
RKDS_VV	../vaxuba/rkreg.h	/^#define	RKDS_VV		0000100		\/* volume valid *\/$/
RKDS_WRL	../vaxuba/rkreg.h	/^#define	RKDS_WRL	0004000		\/* write lock *\/$/
RKER_BITS	../vaxuba/rkreg.h	/^#define	RKER_BITS \\$/
RKER_BSE	../vaxuba/rkreg.h	/^#define	RKER_BSE	0000200		\/* bad sector error *\//
RKER_COE	../vaxuba/rkreg.h	/^#define	RKER_COE	0001000		\/* cylinder overflow er/
RKER_DCK	../vaxuba/rkreg.h	/^#define	RKER_DCK	0100000		\/* data check *\/$/
RKER_DRPAR	../vaxuba/rkreg.h	/^#define	RKER_DRPAR	0000010		\/* control-to-drive p/
RKER_DTE	../vaxuba/rkreg.h	/^#define	RKER_DTE	0010000		\/* drive timing error */
RKER_DTYE	../vaxuba/rkreg.h	/^#define	RKER_DTYE	0000040		\/* drive type error */
RKER_ECH	../vaxuba/rkreg.h	/^#define	RKER_ECH	0000100		\/* hard ecc error *\/$/
RKER_FMTE	../vaxuba/rkreg.h	/^#define	RKER_FMTE	0000020		\/* format error *\/$/
RKER_HARD	../vaxuba/rkreg.h	/^#define	RKER_HARD	\\$/
RKER_HRVC	../vaxuba/rkreg.h	/^#define	RKER_HRVC	0000400		\/* header vertical red/
RKER_IDAE	../vaxuba/rkreg.h	/^#define	RKER_IDAE	0002000		\/* invalid disk addres/
RKER_ILF	../vaxuba/rkreg.h	/^#define	RKER_ILF		0000001		\/* illegal function */
RKER_NXF	../vaxuba/rkreg.h	/^#define	RKER_NXF	0000004		\/* non-executable funct/
RKER_OPI	../vaxuba/rkreg.h	/^#define	RKER_OPI	0020000		\/* operation incomplete/
RKER_SKI	../vaxuba/rkreg.h	/^#define	RKER_SKI	0000002		\/* seek incomplete *\/$/
RKER_UNS	../vaxuba/rkreg.h	/^#define	RKER_UNS	0040000		\/* drive unsafe *\/$/
RKER_WLE	../vaxuba/rkreg.h	/^#define	RKER_WLE	0004000		\/* write lock error *\//
RK_CCLR	../vaxuba/rkreg.h	/^#define RK_CCLR		0100000		\/* controller clear (al/
RK_CDT	../vaxuba/rkreg.h	/^#define	RK_CDT		0002000		\/* drive type (rk07\/rk0/
RK_CERR	../vaxuba/rkreg.h	/^#define	RK_CERR		RK_CCLR$/
RK_CFMT	../vaxuba/rkreg.h	/^#define	RK_CFMT		0010000		\/* 18 bit word format */
RK_CRDY	../vaxuba/rkreg.h	/^#define	RK_CRDY		0000200		\/* controller ready *\//
RK_CTO	../vaxuba/rkreg.h	/^#define	RK_CTO		0004000		\/* controller timeout */
RK_DCLR	../vaxuba/rkreg.h	/^#define RK_DCLR		004		\/* drive clear *\/$/
RK_DI	../vaxuba/rkreg.h	/^#define	RK_DI		0040000		\/* drive interrupt *\/$/
RK_DTCPAR	../vaxuba/rkreg.h	/^#define	RK_DTCPAR	0020000		\/* drive to controller/
RK_GO	../vaxuba/rkreg.h	/^#define	RK_GO		0000001$/
RK_IE	../vaxuba/rkreg.h	/^#define	RK_IE		0000100		\/* interrupt enable *\/$/
RK_OFFSET	../vaxuba/rkreg.h	/^#define	RK_OFFSET	014		\/* offset *\/$/
RK_PACK	../vaxuba/rkreg.h	/^#define RK_PACK		002		\/* pack acknowledge *\/$/
RK_READ	../vaxuba/rkreg.h	/^#define	RK_READ		020		\/* read data *\/$/
RK_RECAL	../vaxuba/rkreg.h	/^#define	RK_RECAL	012		\/* recalibrate *\/$/
RK_RHDR	../vaxuba/rkreg.h	/^#define	RK_RHDR		026		\/* read header *\/$/
RK_SEEK	../vaxuba/rkreg.h	/^#define	RK_SEEK		016		\/* seek *\/$/
RK_SELECT	../vaxuba/rkreg.h	/^#define RK_SELECT	000		\/* select drive *\/$/
RK_START	../vaxuba/rkreg.h	/^#define	RK_START	010		\/* start spindle *\/$/
RK_UNLOAD	../vaxuba/rkreg.h	/^#define	RK_UNLOAD	006		\/* unload *\/$/
RK_WHDR	../vaxuba/rkreg.h	/^#define	RK_WHDR		030		\/* write header *\/$/
RK_WRITE	../vaxuba/rkreg.h	/^#define	RK_WRITE	022		\/* write data *\/$/
RL02	../vaxuba/rl.c	/^struct	RL02 {$/
RLCS_BITS	../vaxuba/rlreg.h	/^#define	RLCS_BITS \\$/
RLDA_CA	../vaxuba/rlreg.h	/^#define	RLDA_CA		0177600		\/* cylinder address *\//
RLDA_HGH	../vaxuba/rlreg.h	/^#define	RLDA_HGH	0000005		\/* higher cylinder seek/
RLDA_HSB	../vaxuba/rlreg.h	/^#define	RLDA_HSB	0000100		\/* lower head select */
RLDA_HSL	../vaxuba/rlreg.h	/^#define	RLDA_HSL	0000020		\/* lower head select */
RLDA_HST	../vaxuba/rlreg.h	/^#define RLDA_HST	0000000		\/* upper head select */
RLDA_HSU	../vaxuba/rlreg.h	/^#define	RLDA_HSU	0000000		\/* upper head select */
RLDA_LOW	../vaxuba/rlreg.h	/^#define	RLDA_LOW	0000001		\/* lower cylinder seek /
RLDA_SA	../vaxuba/rlreg.h	/^#define	RLDA_SA		0000077		\/* sector address *\/$/
RLER_BITS	../vaxuba/rlreg.h	/^#define	RLER_BITS \\$/
RLIMIT_CORE	../h/resource.h	/^#define	RLIMIT_CORE	4		\/* core file size *\/$/
RLIMIT_CPU	../h/resource.h	/^#define	RLIMIT_CPU	0		\/* cpu time in milliseconds/
RLIMIT_DATA	../h/resource.h	/^#define	RLIMIT_DATA	2		\/* data size *\/$/
RLIMIT_FSIZE	../h/resource.h	/^#define	RLIMIT_FSIZE	1		\/* maximum file size *\/$/
RLIMIT_RSS	../h/resource.h	/^#define	RLIMIT_RSS	5		\/* resident set size *\/$/
RLIMIT_STACK	../h/resource.h	/^#define	RLIMIT_STACK	3		\/* stack size *\/$/
RLIM_INFINITY	../h/resource.h	/^#define	RLIM_INFINITY	0x7fffffff$/
RLIM_NLIMITS	../h/resource.h	/^#define	RLIM_NLIMITS	6		\/* number of resource lim/
RLMP_BH	../vaxuba/rlreg.h	/^#define	RLMP_BH		0000010		\/* set when brushes are/
RLMP_CA	../vaxuba/rlreg.h	/^#define	RLMP_CA		0177600		\/* cylinder address *\//
RLMP_CHE	../vaxuba/rlreg.h	/^#define RLMP_CHE	0040000		\/* current head error */
RLMP_CO	../vaxuba/rlreg.h	/^#define	RLMP_CO		0000040		\/* set when cover open /
RLMP_DSE	../vaxuba/rlreg.h	/^#define	RLMP_DSE	0000400		\/* set on multiple driv/
RLMP_DT	../vaxuba/rlreg.h	/^#define	RLMP_DT		0000200		\/* indicates drive type/
RLMP_HO	../vaxuba/rlreg.h	/^#define	RLMP_HO		0000020		\/* set when brushes ove/
RLMP_HS	../vaxuba/rlreg.h	/^#define	RLMP_HS		0000100		\/* indicates selected h/
RLMP_SA	../vaxuba/rlreg.h	/^#define	RLMP_SA		0000077		\/* sector address *\/$/
RLMP_SKTO	../vaxuba/rlreg.h	/^#define	RLMP_SKTO	0010000		\/*\\* seek time out e/
RLMP_SPE	../vaxuba/rlreg.h	/^#define	RLMP_SPE	0004000		\/* spin speed error *\//
RLMP_STA	../vaxuba/rlreg.h	/^#define	RLMP_STA	0000001		\/* drive state: load ca/
RLMP_STATOK	../vaxuba/rlreg.h	/^#define RLMP_STATOK (RLMP_HO|RLMP_BH|RLMP_STC|RLMP/
RLMP_STATUS	../vaxuba/rlreg.h	/^#define RLMP_STATUS (RLMP_WDE|RLMP_CHE|RLMP_SKTO|R/
RLMP_STB	../vaxuba/rlreg.h	/^#define	RLMP_STB	0000002		\/* drive state: brush c/
RLMP_STC	../vaxuba/rlreg.h	/^#define	RLMP_STC	0000004		\/* drive state: seek */
RLMP_VC	../vaxuba/rlreg.h	/^#define	RLMP_VC		0001000		\/* set on pack mounted /
RLMP_WC	../vaxuba/rlreg.h	/^#define	RLMP_WC		0017777		\/* word count 2's compl/
RLMP_WDE	../vaxuba/rlreg.h	/^#define RLMP_WDE	0100000		\/* write data error *\//
RLMP_WGE	../vaxuba/rlreg.h	/^#define	RLMP_WGE	0002000		\/* write gate error *\//
RLMP_WL	../vaxuba/rlreg.h	/^#define RLMP_WL		0020000		\/* set on protected dri/
RL_BAE	../vaxuba/rlreg.h	/^#define RL_BAE		0000060		\/* UNIBUS address bits 1/
RL_CRDY	../vaxuba/rlreg.h	/^#define	RL_CRDY		0000200		\/* controller ready *\//
RL_DCRC	../vaxuba/rlreg.h	/^#define	RL_DCRC		0004000		\/* CRC error occurred */
RL_DCRDY	../vaxuba/rlreg.h	/^#define	RL_DCRDY	(RL_DRDY | RL_CRDY)$/
RL_DE	../vaxuba/rlreg.h	/^#define	RL_DE		0040000		\/* selected drive flagged/
RL_DLT	../vaxuba/rlreg.h	/^#define	RL_DLT		0010000		\/* data late or header n/
RL_DRDY	../vaxuba/rlreg.h	/^#define RL_DRDY		0000001		\/* When set indicates d/
RL_DS0	../vaxuba/rlreg.h	/^#define RL_DS0		0000400		\/* drive select 0 *\/$/
RL_DS1	../vaxuba/rlreg.h	/^#define RL_DS1		0001000		\/* drive select 1 *\/$/
RL_ERR	../vaxuba/rlreg.h	/^#define	RL_ERR		0100000		\/* composite error *\/$/
RL_GETSTAT	../vaxuba/rlreg.h	/^#define RL_GETSTAT	0000004		\/* get status *\/$/
RL_GSTAT	../vaxuba/rlreg.h	/^#define	RL_GSTAT	0000003		\/* Get status *\/$/
RL_IE	../vaxuba/rlreg.h	/^#define	RL_IE		0000100		\/* interrupt enable *\/$/
RL_NOOP	../vaxuba/rlreg.h	/^#define RL_NOOP		0000000		\/* no-operation *\/$/
RL_NXM	../vaxuba/rlreg.h	/^#define	RL_NXM		0020000		\/* non-existant memory */
RL_OPI	../vaxuba/rlreg.h	/^#define	RL_OPI		0002000		\/* operation incomplete /
RL_RDNCK	../vaxuba/rlreg.h	/^#define	RL_RDNCK	0000016		\/* read data without hd/
RL_READ	../vaxuba/rlreg.h	/^#define	RL_READ		0000014		\/* read data *\/$/
RL_RESET	../vaxuba/rlreg.h	/^#define	RL_RESET	0000013		\/* get status with rese/
RL_RHDR	../vaxuba/rlreg.h	/^#define	RL_RHDR		0000010		\/* read header *\/$/
RL_SEEK	../vaxuba/rlreg.h	/^#define	RL_SEEK		0000006		\/* seek *\/$/
RL_WCHECK	../vaxuba/rlreg.h	/^#define RL_WCHECK	0000002		\/* write check *\/$/
RL_WRITE	../vaxuba/rlreg.h	/^#define	RL_WRITE	0000012		\/* write data *\/$/
RM80	../vaxmba/hp.c	/^#define	RM80(type)	((type) == HPDT_RM80)$/
RMONMIN	../h/vmmeter.h	/^#define	RMONMIN	130$/
RND	../h/buf.h	/^#define RND	(MAXBSIZE\/DEV_BSIZE)$/
RO	../h/seg.h	/^#define	RO	PG_URKR		\/* access abilities *\/$/
ROMI	../vaxuba/lpa.c	/^#define ROMI	0001000		\/* rom I *\/$/
ROMO	../vaxuba/lpa.c	/^#define ROMO	0002000		\/* rom O *\/$/
ROOTINO	../h/fs.h	/^#define	ROOTINO		((ino_t)2)	\/* i number of all ro/
ROUND16	../vaxuba/npreg.h	/^#define ROUND16(x)	(((x) + 15) & (~0x0F)) \/* Roun/
ROUNDDOWN	../h/gprof.h	/^#define ROUNDDOWN(x,y)	(((x)\/(y))*(y))$/
ROUNDUP	../h/gprof.h	/^#define ROUNDUP(x,y)	((((x)+(y)-1)\/(y))*(y))$/
RP06	../vaxmba/hp.c	/^#define	RP06(type)	(hptypes[type] <= MBDT_RP06)$/
RQ_ENDOP	../vaxif/if_hy.h	/^#define RQ_ENDOP	001	\/* end the last adapter func/
RQ_MARKDOWN	../vaxif/if_hy.h	/^#define RQ_MARKDOWN	020	\/* mark this adapter port/
RQ_MARKUP	../vaxif/if_hy.h	/^#define RQ_MARKUP	040	\/* mark this interface up */
RQ_REISSUE	../vaxif/if_hy.h	/^#define RQ_REISSUE	002	\/* reissue previous cmd af/
RQ_STATISTICS	../vaxif/if_hy.h	/^#define RQ_STATISTICS	010	\/* get the statistics o/
RQ_STATUS	../vaxif/if_hy.h	/^#define RQ_STATUS	004	\/* get the status of the ad/
RQ_XASSOC	../vaxif/if_hy.h	/^#define RQ_XASSOC	0100	\/* associated data to tran/
RRENT_OFFSET	../vaxif/if_de.c	/^#define	RRENT_OFFSET	LVAL_OFF(ds_rrent)$/
RRES	../h/vmmeter.h	/^#define	RRES	5$/
RSR_HOLD	../vaxuba/psreg.h	/^#define RSR_HOLD	04$/
RSTATSENT	../vaxif/if_hy.h	/^#define RSTATSENT	11	\/* read statistics cmd sent /
RSTRT_ACK	../vaxif/if_ddnvar.h	/^#define	RSTRT_ACK	0x41		\/* restart ack			*\/$/
RS_0OPEN	../vax/rx50.c	/^#define	RS_0OPEN	0x01	\/* drive 0 open -- must be /
RS_1OPEN	../vax/rx50.c	/^#define	RS_1OPEN	0x02	\/* drive 1 open -- must be /
RS_BUSY	../vax/rx50.c	/^#define	RS_BUSY		0x04	\/* operation in progress */
RS_DONE	../vax/rx50.c	/^#define	RS_DONE		0x20	\/* I\/O operation done *\/$/
RS_ERROR	../vax/rx50.c	/^#define	RS_ERROR	0x40	\/* error bit set at interru/
RS_WANT	../vax/rx50.c	/^#define	RS_WANT		0x08	\/* wakeup when done *\/$/
RTCCNT	../vaxuba/psreg.h	/^#define RTCCNT		0177744$/
RTCIE	../vaxuba/psreg.h	/^#define RTCIE		0177761$/
RTCREQ	../vaxuba/psreg.h	/^#define RTCREQ		0177760$/
RTCSR	../vaxuba/psreg.h	/^#define RTCSR		0177745$/
RTFREE	../net/route.h	/^#define	RTFREE(rt) \\$/
RTF_DYNAMIC	../net/route.h	/^#define	RTF_DYNAMIC	0x10		\/* created dynamically /
RTF_GATEWAY	../net/route.h	/^#define	RTF_GATEWAY	0x2		\/* destination is a gate/
RTF_HOST	../net/route.h	/^#define	RTF_HOST	0x4		\/* host entry (net otherwis/
RTF_MODIFIED	../net/route.h	/^#define	RTF_MODIFIED	0x20		\/* modified dynamicall/
RTF_UP	../net/route.h	/^#define	RTF_UP		0x1		\/* route useable *\/$/
RTHASHMOD	../net/route.h	/^#define RTHASHMOD(h)	((h) & (RTHASHSIZ - 1))$/
RTHASHSIZ	../net/route.h	/^#define	RTHASHSIZ	64$/
RUN	../vaxuba/lpa.c	/^#define RUN	0100000		\/* run *\/$/
RUN_PROCESSOR	../vaxuba/ikreg.h	/^#define RUN_PROCESSOR	01000$/
RUSAGE_CHILDREN	../h/resource.h	/^#define	RUSAGE_CHILDREN	-1$/
RUSAGE_SELF	../h/resource.h	/^#define	RUSAGE_SELF	0$/
RVAL_OFF	../vaxif/if_de.c	/^#define	RVAL_OFF(n)	((char *)&de_softc[0].n - INCO/
RW	../h/seg.h	/^#define	RW	PG_UW$/
RWERR	../vaxuba/tmreg.h	/^#define	RWERR		020000		\/* select read-write error/
RX50MAXSEC	../vax/rx50reg.h	/^#define	RX50MAXSEC	800	\/* 10 sectors times 80 tra/
RX50SEC	../vax/rx50reg.h	/^#define	RX50SEC		10	\/* sectors per track *\/$/
RX50SKEW	../vax/rx50reg.h	/^#define	RX50SKEW(s, t)	(((s) \/ 5) + "\\1\\3\\5\\7/
RXBYSEC	../vax/flp.h	/^#define	RXBYSEC	128		\/* bytes\/sector *\/$/
RXCD	../vax/mtpr.h	/^#define	RXCD	0x5c		\/* receive console data regist/
RXCMD_DONE	../vax/rx50reg.h	/^#define	RXCMD_DONE	0x08	\/* operation done (status/
RXCMD_DRIVE0	../vax/rx50reg.h	/^#define	RXCMD_DRIVE0	0x00	\/* select drive 0 (csa1/
RXCMD_DRIVE1	../vax/rx50reg.h	/^#define	RXCMD_DRIVE1	0x02	\/* select drive 1 (csa2/
RXCMD_ERROR	../vax/rx50reg.h	/^#define	RXCMD_ERROR	0x80	\/* error bit (composite?/
RXCMD_READ	../vax/rx50reg.h	/^#define	RXCMD_READ	0x40	\/* read command *\/$/
RXCMD_RESET	../vax/rx50reg.h	/^#define	RXCMD_RESET	0x20	\/* reset command *\/$/
RXCMD_WRITE	../vax/rx50reg.h	/^#define	RXCMD_WRITE	0x70	\/* write command *\/$/
RXCS	../vax/mtpr.h	/^#define	RXCS	0x20		\/* console receiver control an/
RXCS1	../vax/mtpr.h	/^#define	RXCS1	0x50		\/* receive csr, console line /
RXCS2	../vax/mtpr.h	/^#define	RXCS2	0x54		\/* etc *\/$/
RXCS3	../vax/mtpr.h	/^#define	RXCS3	0x58$/
RXCS_BITS	../vaxuba/rxreg.h	/^#define	RXCS_BITS \\$/
RXCS_DONE	../vax/cons.h	/^#define	RXCS_DONE	0x00000080	\/* receiver done *\//
RXCS_IE	../vax/cons.h	/^#define	RXCS_IE		0x00000040	\/* receiver interrupt/
RXDB	../vax/mtpr.h	/^#define	RXDB	0x21		\/* console receiver data buffe/
RXDB1	../vax/mtpr.h	/^#define	RXDB1	0x51		\/* receive data buffer, conso/
RXDB2	../vax/mtpr.h	/^#define	RXDB2	0x55$/
RXDB3	../vax/mtpr.h	/^#define	RXDB3	0x59$/
RXDB_DATA	../vax/cons.h	/^#define	RXDB_DATA	0x000000ff	\/* received characte/
RXDB_ERR	../vax/cons.h	/^#define	RXDB_ERR	0x80000000	\/* receiver error *\//
RXDB_ID	../vax/cons.h	/^#define	RXDB_ID		0x00000f00	\/* channel id *\/$/
RXES_BITS	../vaxuba/rxreg.h	/^#define	RXES_BITS \\$/
RXES_CRCERR	../vaxuba/rxreg.h	/^#define	RXES_CRCERR	0x0001	\/* CRC error (data rea/
RXES_DBLDEN	../vaxuba/rxreg.h	/^#define	RXES_DBLDEN	0x0020	\/* set if double densi/
RXES_DDMARK	../vaxuba/rxreg.h	/^#define	RXES_DDMARK	0x0040	\/* deleted-data mark */
RXES_DENERR	../vaxuba/rxreg.h	/^#define RXES_DENERR	0x0010	\/* density error *\/$/
RXES_IDONE	../vaxuba/rxreg.h	/^#define	RXES_IDONE	0x0004	\/* reinitialization com/
RXES_READY	../vaxuba/rxreg.h	/^#define	RXES_READY	0x0080	\/* drive is ready *\/$/
RXFTRK	../vax/flp.h	/^#define	RXFTRK	77		\/* tracks\/floppy *\/$/
RXF_BAD	../vaxuba/rx.c	/^#define	RXF_BAD		0x100	\/* drive bad, cannot be us/
RXF_DBLDEN	../vaxuba/rx.c	/^#define	RXF_DBLDEN	0x04	\/* use double density *\//
RXF_DDMK	../vaxuba/rx.c	/^#define	RXF_DDMK	0x20	\/* deleted-data mark detect/
RXF_DEVTYPE	../vaxuba/rx.c	/^#define	RXF_DEVTYPE	0x07	\/* mapping flags *\/$/
RXF_DIRECT	../vaxuba/rx.c	/^#define	RXF_DIRECT	0x01	\/* if set: use direct sec/
RXF_FORMAT	../vaxuba/rx.c	/^#define	RXF_FORMAT	0x80	\/* format in progress *\//
RXF_LOCK	../vaxuba/rx.c	/^#define	RXF_LOCK	0x10	\/* exclusive use *\/$/
RXF_TRKONE	../vaxuba/rx.c	/^#define	RXF_TRKONE	0x02	\/* if set: start mapping /
RXF_USEWDDS	../vaxuba/rx.c	/^#define	RXF_USEWDDS	0x40	\/* write deleted-data se/
RXIOC_FORMAT	../vaxuba/rxreg.h	/^#define RXIOC_FORMAT	_IOW('d', 1, int)	\/* format /
RXIOC_GDENS	../vaxuba/rxreg.h	/^#define	RXIOC_GDENS	_IOR('d', 4, int)	\/* return d/
RXIOC_RDDSMK	../vaxuba/rxreg.h	/^#define RXIOC_RDDSMK	_IOR('d', 3, int)	\/* did las/
RXIOC_WDDS	../vaxuba/rxreg.h	/^#define RXIOC_WDDS	_IOW('d', 2, int)	\/* write `de/
RXSECS	../vaxuba/rx.c	/^#define	RXSECS	2002				\/* # sectors on a floppy */
RXSIZE	../vaxuba/rx.c	/^#define	RXSIZE	(DDSTATE ? 512512 : 256256)	\/* # b/
RXSTRK	../vax/flp.h	/^#define	RXSTRK	26		\/* sectors\/track *\/$/
RXS_EMPTY	../vaxuba/rx.c	/^#define	RXS_EMPTY	2	\/* empty started *\/$/
RXS_FILL	../vaxuba/rx.c	/^#define	RXS_FILL	3	\/* fill started	*\/$/
RXS_FORMAT	../vaxuba/rx.c	/^#define	RXS_FORMAT	5	\/* format started *\/$/
RXS_IDLE	../vaxuba/rx.c	/^#define	RXS_IDLE	8	\/* device is idle *\/$/
RXS_RDERR	../vaxuba/rx.c	/^#define	RXS_RDERR	7	\/* error read started *\/$/
RXS_RDSTAT	../vaxuba/rx.c	/^#define	RXS_RDSTAT	6	\/* status read started *\/$/
RXS_READ	../vaxuba/rx.c	/^#define	RXS_READ	1	\/* read started	*\/$/
RXS_WRITE	../vaxuba/rx.c	/^#define	RXS_WRITE	4	\/* write started *\/$/
RXUNIT	../vaxuba/rx.c	/^#define	RXUNIT(dev)	(minor(dev)>>3)$/
RX_DDEN	../vaxuba/rxreg.h	/^#define	RX_DDEN		0x0100	\/* double density *\/$/
RX_DONE	../vaxuba/rxreg.h	/^#define	RX_DONE		0x0020	\/* function complete *\/$/
RX_DRV0	../vaxuba/rxreg.h	/^#define	RX_DRV0		0x0000	\/* select drive 0 *\/$/
RX_DRV1	../vaxuba/rxreg.h	/^#define	RX_DRV1		0x0010	\/* select drive 1 *\/$/
RX_EMPTY	../vaxuba/rxreg.h	/^#define	RX_EMPTY	0x0003	\/* empty the buffer *\/$/
RX_ERR	../vaxuba/rxreg.h	/^#define	RX_ERR		0x8000	\/* general error bit *\/$/
RX_EXT	../vaxuba/rxreg.h	/^#define	RX_EXT		0x3000	\/* extended address bits */
RX_FILL	../vaxuba/rxreg.h	/^#define	RX_FILL		0x0001	\/* fill the buffer *\/$/
RX_FORMAT	../vaxuba/rxreg.h	/^#define	RX_FORMAT	0x0009	\/* set the media density/
RX_INIT	../vaxuba/rxreg.h	/^#define	RX_INIT		0x4000	\/* initialize RX211 inter/
RX_INTR	../vaxuba/rxreg.h	/^#define	RX_INTR		0x0040	\/* interrupt enable *\/$/
RX_MAXTIMEOUT	../vaxuba/rx.c	/^#define	RX_MAXTIMEOUT	30	\/* # seconds to wait bef/
RX_RDERR	../vaxuba/rxreg.h	/^#define	RX_RDERR	0x000f	\/* read the error registe/
RX_RDSTAT	../vaxuba/rxreg.h	/^#define	RX_RDSTAT	0x000b	\/* read the disk status /
RX_READ	../vaxuba/rxreg.h	/^#define	RX_READ		0x0007	\/* read a disk sector to /
RX_SDEN	../vaxuba/rxreg.h	/^#define	RX_SDEN		0x0000	\/* single density *\/$/
RX_TREQ	../vaxuba/rxreg.h	/^#define	RX_TREQ		0x0080	\/* transfer request (data/
RX_WDDS	../vaxuba/rxreg.h	/^#define	RX_WDDS		0x000d	\/* write a deleted-data s/
RX_WRITE	../vaxuba/rxreg.h	/^#define	RX_WRITE	0x0005	\/* write the buffer to di/
R_OK	../h/file.h	/^#define	R_OK		4	\/* readable by caller *\/$/
R_PC	../vax/kdb_opset.c	/^#define	R_PC		0xF$/
Remrq ../vax/locore.s /^JSBENTRY(Remrq, R0)$/
Resume ../vax/locore.s /^JSBENTRY(Resume, R0)$/
SAFERSS	../vax/vmparam.h	/^#define	SAFERSS		32		\/* nominal ``small'' residen/
SANAMES	../netns/spp_debug.c	/^#define	SANAMES$/
SAVEPSADDR	../vaxuba/ps.c	/^#define SAVEPSADDR(psaddr, savepsaddr) { \\$/
SA_DROP	../netns/spp_debug.h	/^#define	SA_DROP		4$/
SA_INPUT	../netns/spp_debug.h	/^#define	SA_INPUT 	0$/
SA_OFFSET	../vaxif/if_ex.c	/^#define	SA_OFFSET(unit)		RVAL_OFF(unit, xs_xsa)$/
SA_OUTPUT	../netns/spp_debug.h	/^#define	SA_OUTPUT	1$/
SA_RESPOND	../netns/spp_debug.h	/^#define	SA_RESPOND	3$/
SA_USER	../netns/spp_debug.h	/^#define	SA_USER		2$/
SBERROR	../vaxuba/psreg.h	/^#define SBERROR		040000$/
SBIER	../vax/mtpr.h	/^#define	SBIER	0x34		\/* SBI error register *\/$/
SBIFS	../vax/mtpr.h	/^#define	SBIFS	0x30		\/* SBI fault and status *\/$/
SBIMT	../vax/mtpr.h	/^#define	SBIMT	0x33		\/* SBI maintenance *\/$/
SBIQC	../vax/mtpr.h	/^#define	SBIQC	0x36		\/* SBI quadword clear *\/$/
SBIS	../vax/mtpr.h	/^#define	SBIS	0x31		\/* SBI silo *\/$/
SBISC	../vax/mtpr.h	/^#define	SBISC	0x32		\/* SBI silo comparator *\/$/
SBITA	../vax/mtpr.h	/^#define	SBITA	0x35		\/* SBI timeout address *\/$/
SBI_ISQFLT	../vax/nexus.h	/^#define	SBI_ISQFLT	(1<<28)		\/* interlock sequence/
SBI_MXTFLT	../vax/nexus.h	/^#define	SBI_MXTFLT	(1<<27)		\/* multiple transmitt/
SBI_PARFLT	../vax/nexus.h	/^#define	SBI_PARFLT	(1<<31)		\/* sbi parity fault */
SBI_URDFLT	../vax/nexus.h	/^#define	SBI_URDFLT	(1<<29)		\/* unexpected read da/
SBI_WSQFLT	../vax/nexus.h	/^#define	SBI_WSQFLT	(1<<30)		\/* write sequence fau/
SBI_XMTFLT	../vax/nexus.h	/^#define	SBI_XMTFLT	(1<<26)		\/* transmit fault *\//
SBLOCK	../h/fs.h	/^#define	SBLOCK		((daddr_t)(BBLOCK + BBSIZE \/ DEV_/
SBOFF	../h/fs.h	/^#define	SBOFF		((off_t)(BBOFF + BBSIZE))$/
SBR	../vax/mtpr.h	/^#define	SBR	0xc		\/* system segment base register /
SBSIZE	../h/fs.h	/^#define SBSIZE		8192$/
SB_COLL	../h/socketvar.h	/^#define	SB_COLL		0x10		\/* collision selecting *\//
SB_LOCK	../h/socketvar.h	/^#define	SB_LOCK		0x01		\/* lock on data queue (so_/
SB_MAX	../netinet/tcp_var.h	/^#define	SB_MAX	SB_MAXCOUNT	\/* Sun has to be a lit/
SB_SEL	../h/socketvar.h	/^#define	SB_SEL		0x08		\/* buffer is selected *\/$/
SB_WAIT	../h/socketvar.h	/^#define	SB_WAIT		0x04		\/* someone is waiting for /
SB_WANT	../h/socketvar.h	/^#define	SB_WANT		0x02		\/* someone is waiting to l/
SC	../vax/mscp.c	/^#define	SC(m)	sizeof (m) \/ sizeof (m[0]), m$/
SCANINTERVAL	../vaxif/if_hy.c	/^#define SCANINTERVAL	10	\/* seconds *\/$/
SCANNING	../vaxuba/npreg.h	/^#define SCANNING        0x1000          \/* We are/
SCBB	../vax/mtpr.h	/^#define	SCBB	0x11		\/* system control block base */
SCB_HALT	../vax/scb.h	/^#define	SCB_HALT	3$/
SCB_ISTACK	../vax/scb.h	/^#define	SCB_ISTACK	1$/
SCB_KSTACK	../vax/scb.h	/^#define	SCB_KSTACK	0$/
SCB_WCS	../vax/scb.h	/^#define	SCB_WCS		2$/
SCHAN	../vaxuba/lpa.c	/^#define SCHAN	1<<8		\/* single channel *\/$/
SCHAR_MAX	../vax/machparam.h	/^#define	SCHAR_MAX	0x7f$/
SCHAR_MIN	../vax/machparam.h	/^#define	SCHAR_MIN	0x80$/
SCOM	../vaxuba/tm.c	/^#define	SCOM	3		\/* sending control command *\/$/
SCRPAD	../vaxuba/ikreg.h	/^#define SCRPAD		040400000$/
SC_DOWAKE	../vaxuba/uda.c	/^#define	SC_DOWAKE	0x10	\/* wakeup when ctlr init d/
SC_ESCAPED	../net/if_sl.c	/^#define	SC_ESCAPED	0x0001	\/* saw a FRAME_ESCAPE */
SC_GRIPED	../vaxuba/uda.c	/^#define	SC_GRIPED	0x04	\/* griped about cmd ring t/
SC_INSLAVE	../vaxuba/uda.c	/^#define	SC_INSLAVE	0x08	\/* inside udaslave() *\/$/
SC_INSTART	../vaxuba/uda.c	/^#define	SC_INSTART	0x02	\/* inside udastart() *\/$/
SC_MAPPED	../vaxuba/uda.c	/^#define	SC_MAPPED	0x01	\/* mapped in Unibus I\/O s/
SC_STARTPOLL	../vaxuba/uda.c	/^#define	SC_STARTPOLL	0x20	\/* need to initiate pol/
SEARCH	../vaxuba/psreg.h	/^#define SEARCH		020$/
SEARCH_MODE	../vaxuba/psreg.h	/^#define SEARCH_MODE	03$/
SECDAY	../vax/clock.h	/^#define	SECDAY		((unsigned)(24*60*60))		\/* second/
SECMASK	../vaxuba/rx.c	/^#define	SECMASK	(DDSTATE ? 0xff : 0x7f)		\/* shift/
SECYR	../vax/clock.h	/^#define	SECYR		((unsigned)(365*SECDAY))	\/* per co/
SEQ_GEQ	../netinet/tcp_seq.h	/^#define	SEQ_GEQ(a,b)	((int)((a)-(b)) >= 0)$/
SEQ_GT	../netinet/tcp_seq.h	/^#define	SEQ_GT(a,b)	((int)((a)-(b)) > 0)$/
SEQ_LEQ	../netinet/tcp_seq.h	/^#define	SEQ_LEQ(a,b)	((int)((a)-(b)) <= 0)$/
SEQ_LT	../netinet/tcp_seq.h	/^#define	SEQ_LT(a,b)	((int)((a)-(b)) < 0)$/
SERASE	../vaxuba/ut.c	/^#define	SERASE		5	\/* erase inter-record gap *\/$/
SERASED	../vaxuba/ut.c	/^#define	SERASED		6	\/* erased inter-record gap *\//
SETBP	../vax/kdbparam.h	/^#define	SETBP(ins)	(BPT | ((ins) & ~0xff))$/
SF_ACKNOW	../netns/spp_var.h	/^#define	SF_ACKNOW	0x01		\/* Ack peer immediately */
SF_DELACK	../netns/spp_var.h	/^#define	SF_DELACK	0x02		\/* Ack, but try to delay /
SF_HI	../netns/spp_var.h	/^#define	SF_HI	0x04			\/* Show headers on input *\//
SF_HO	../netns/spp_var.h	/^#define	SF_HO	0x08			\/* Show headers on output */
SF_IOOB	../netns/spp_var.h	/^#define SF_IOOB 0x10			\/* receiving out of band d/
SF_PI	../netns/spp_var.h	/^#define	SF_PI	0x10			\/* Packet (datagram) interfa/
SF_RVD	../netns/spp_var.h	/^#define SF_RVD	0x80			\/* Calling from read usrreq/
SF_RXT	../netns/spp_var.h	/^#define SF_RXT	0x40			\/* Rxt info changed *\/$/
SF_SOOB	../netns/spp_var.h	/^#define SF_SOOB	0x08			\/* sending out of band dat/
SF_WIN	../netns/spp_var.h	/^#define SF_WIN	0x20			\/* Window info changed *\/$/
SHRT_MAX	../vax/machparam.h	/^#define	SHRT_MAX	0x7fff$/
SHRT_MIN	../vax/machparam.h	/^#define	SHRT_MIN	0x8000$/
SI	../netns/spidp.h	/^#define SI(x)	((struct spidp *)x)$/
SI9730D	../vaxmba/hpreg.h	/^#define	SI9730D	0x0b00		\/* 9730 direct *\/$/
SI9730M	../vaxmba/hpreg.h	/^#define	SI9730M	0x0d00		\/* 9730 mapped *\/$/
SI9751D	../vaxmba/hpreg.h	/^#define	SI9751D	0x0f00		\/* Eagle direct *\/$/
SI9762	../vaxmba/hpreg.h	/^#define	SI9762	0x0100		\/* 9762 *\/$/
SI9766	../vaxmba/hpreg.h	/^#define	SI9766	0x0300		\/* 9766 *\/$/
SI9775D	../vaxmba/hpreg.h	/^#define	SI9775D	0x0700		\/* 9775 direct *\/$/
SI9775M	../vaxmba/hpreg.h	/^#define	SI9775M	0x0e00		\/* 9775 mapped *\/$/
SICAPD	../vaxmba/hpreg.h	/^#define	SICAPD	0x0500		\/* Capricorn direct *\/$/
SICAPN	../vaxmba/hpreg.h	/^#define	SICAPN	0x0400		\/* Capricorn mapped *\/$/
SID	../vax/mtpr.h	/^#define	SID	0x3e		\/* system identification *\/$/
SIDL	../h/proc.h	/^#define	SIDL	4		\/* intermediate state in process /
SIGABRT	../h/signal.h	/^#define	SIGABRT	SIGIOT	\/* compatibility *\/$/
SIGALRM	../h/signal.h	/^#define	SIGALRM	14	\/* alarm clock *\/$/
SIGBUS	../h/signal.h	/^#define	SIGBUS	10	\/* bus error *\/$/
SIGCHLD	../h/signal.h	/^#define	SIGCHLD	20	\/* to parent on child stop or /
SIGCLD	../h/signal.h	/^#define	SIGCLD	SIGCHLD	\/* compatibility *\/$/
SIGCONT	../h/signal.h	/^#define	SIGCONT	19	\/* continue a stopped process /
SIGEMT	../h/signal.h	/^#define	SIGEMT	7	\/* EMT instruction *\/$/
SIGFPE	../h/signal.h	/^#define	SIGFPE	8	\/* floating point exception *\/$/
SIGHUP	../h/signal.h	/^#define	SIGHUP	1	\/* hangup *\/$/
SIGILL	../h/signal.h	/^#define	SIGILL	4	\/* illegal instruction (not rese/
SIGINT	../h/signal.h	/^#define	SIGINT	2	\/* interrupt *\/$/
SIGIO	../h/signal.h	/^#define	SIGIO	23	\/* input\/output possible signal/
SIGIOT	../h/signal.h	/^#define	SIGIOT	6	\/* IOT instruction *\/$/
SIGKILL	../h/signal.h	/^#define	SIGKILL	9	\/* kill (cannot be caught or ig/
SIGNBIT	../vax/asnumber.h	/^#define SIGNBIT		0x80000000$/
SIGPIPE	../h/signal.h	/^#define	SIGPIPE	13	\/* write on a pipe with no one/
SIGPROF	../h/signal.h	/^#define	SIGPROF	27	\/* profiling time alarm *\/$/
SIGQUIT	../h/signal.h	/^#define	SIGQUIT	3	\/* quit *\/$/
SIGSEGV	../h/signal.h	/^#define	SIGSEGV	11	\/* segmentation violation *\/$/
SIGSTOP	../h/signal.h	/^#define	SIGSTOP	17	\/* sendable stop signal not fr/
SIGSYS	../h/signal.h	/^#define	SIGSYS	12	\/* bad argument to system call /
SIGTERM	../h/signal.h	/^#define	SIGTERM	15	\/* software termination signal/
SIGTRAP	../h/signal.h	/^#define	SIGTRAP	5	\/* trace trap (not reset when c/
SIGTSTP	../h/signal.h	/^#define	SIGTSTP	18	\/* stop signal from tty *\/$/
SIGTTIN	../h/signal.h	/^#define	SIGTTIN	21	\/* to readers pgrp upon backgr/
SIGTTOU	../h/signal.h	/^#define	SIGTTOU	22	\/* like TTIN for output if (tp/
SIGURG	../h/signal.h	/^#define	SIGURG	16	\/* urgent condition on IO chann/
SIGUSR1	../h/signal.h	/^#define SIGUSR1 30	\/* user defined signal 1 *\/$/
SIGUSR2	../h/signal.h	/^#define SIGUSR2 31	\/* user defined signal 2 *\/$/
SIGVTALRM	../h/signal.h	/^#define	SIGVTALRM 26	\/* virtual time alarm *\/$/
SIGWINCH	../h/signal.h	/^#define SIGWINCH 28	\/* window size changes *\/$/
SIGXCPU	../h/signal.h	/^#define	SIGXCPU	24	\/* exceeded CPU time limit *\//
SIGXFSZ	../h/signal.h	/^#define	SIGXFSZ	25	\/* exceeded file size limit */
SIG_CATCH	../h/signal.h	/^#define	SIG_CATCH	(int (*)())2$/
SIG_DFL	../h/signal.h	/^#define	SIG_DFL		(int (*)())0$/
SIG_HOLD	../h/signal.h	/^#define	SIG_HOLD	(int (*)())3$/
SIG_IGN	../h/signal.h	/^#define	SIG_IGN		(int (*)())1$/
SIMB_LU	../vaxmba/hpreg.h	/^#define	SIMB_LU	0x0007		\/* logical unit (should =/
SIMB_MB	../vaxmba/hpreg.h	/^#define	SIMB_MB	0xff00		\/* model byte value *\/$/
SIMB_S6	../vaxmba/hpreg.h	/^#define	SIMB_S6	0x2000		\/* switch s6 *\/$/
SINCR	../vax/machparam.h	/^#define	SINCR		4		\/* increment of stack\/NBPG *\//
SINGLE	../sys/ufs_inode.c	/^#define	SINGLE	0	\/* index of single indirect bloc/
SIO	../vaxuba/tm.c	/^#define	SIO	2		\/* doing seq i\/o *\/$/
SIOCADDRT	../h/ioctl.h	/^#define	SIOCADDRT	_IOW('r', 10, struct rtentry)	\//
SIOCATMARK	../h/ioctl.h	/^#define	SIOCATMARK	_IOR('s',  7, int)		\/* at oob /
SIOCDARP	../h/ioctl.h	/^#define	SIOCDARP	_IOW('i', 32, struct arpreq)	\/* /
SIOCDELRT	../h/ioctl.h	/^#define	SIOCDELRT	_IOW('r', 11, struct rtentry)	\//
SIOCGARP	../h/ioctl.h	/^#define	SIOCGARP	_IOWR('i',31, struct arpreq)	\/* /
SIOCGHIWAT	../h/ioctl.h	/^#define	SIOCGHIWAT	_IOR('s',  1, int)		\/* get hig/
SIOCGIFADDR	../h/ioctl.h	/^#define	SIOCGIFADDR	_IOWR('i',13, struct ifreq)	\//
SIOCGIFBRDADDR	../h/ioctl.h	/^#define	SIOCGIFBRDADDR	_IOWR('i',18, struct ifreq)/
SIOCGIFCONF	../h/ioctl.h	/^#define	SIOCGIFCONF	_IOWR('i',20, struct ifconf)	/
SIOCGIFDSTADDR	../h/ioctl.h	/^#define	SIOCGIFDSTADDR	_IOWR('i',15, struct ifreq)/
SIOCGIFFLAGS	../h/ioctl.h	/^#define	SIOCGIFFLAGS	_IOWR('i',17, struct ifreq)	/
SIOCGIFMETRIC	../h/ioctl.h	/^#define	SIOCGIFMETRIC	_IOWR('i',23, struct ifreq)	/
SIOCGIFNETMASK	../h/ioctl.h	/^#define	SIOCGIFNETMASK	_IOWR('i',21, struct ifreq)/
SIOCGLOWAT	../h/ioctl.h	/^#define	SIOCGLOWAT	_IOR('s',  3, int)		\/* get low/
SIOCGPGRP	../h/ioctl.h	/^#define	SIOCGPGRP	_IOR('s',  9, int)		\/* get proc/
SIOCSARP	../h/ioctl.h	/^#define	SIOCSARP	_IOW('i', 30, struct arpreq)	\/* /
SIOCSHIWAT	../h/ioctl.h	/^#define	SIOCSHIWAT	_IOW('s',  0, int)		\/* set hig/
SIOCSIFADDR	../h/ioctl.h	/^#define	SIOCSIFADDR	_IOW('i', 12, struct ifreq)	\//
SIOCSIFBRDADDR	../h/ioctl.h	/^#define	SIOCSIFBRDADDR	_IOW('i',19, struct ifreq)	/
SIOCSIFDSTADDR	../h/ioctl.h	/^#define	SIOCSIFDSTADDR	_IOW('i', 14, struct ifreq)/
SIOCSIFFLAGS	../h/ioctl.h	/^#define	SIOCSIFFLAGS	_IOW('i', 16, struct ifreq)	/
SIOCSIFMETRIC	../h/ioctl.h	/^#define	SIOCSIFMETRIC	_IOW('i',24, struct ifreq)	/
SIOCSIFNETMASK	../h/ioctl.h	/^#define	SIOCSIFNETMASK	_IOW('i',22, struct ifreq)	/
SIOCSLOWAT	../h/ioctl.h	/^#define	SIOCSLOWAT	_IOW('s',  2, int)		\/* set low/
SIOCSPGRP	../h/ioctl.h	/^#define	SIOCSPGRP	_IOW('s',  8, int)		\/* set proc/
SIRM03	../vaxmba/hpreg.h	/^#define	SIRM03	0x8000		\/* RM03 indication *\/$/
SIRM05	../vaxmba/hpreg.h	/^#define	SIRM05	0x0000		\/* RM05 pseudo-indication /
SIRR	../vax/mtpr.h	/^#define	SIRR	0x14		\/* software interrupt request /
SISR	../vax/mtpr.h	/^#define	SISR	0x15		\/* software interrupt summary /
SKEEP	../h/proc.h	/^#define	SKEEP	0x0000100	\/* another flag to preven/
SKIPSEG	../vaxuba/psreg.h	/^#define SKIPSEG		0100$/
SLEEP	../vaxuba/lpa.c	/^#define SLEEP	020		\/* sleeping *\/$/
SLIPDISC	../h/ioctl.h	/^#define	SLIPDISC	4		\/* serial IP discipline *\/$/
SLIP_HIWAT	../net/if_sl.c	/^#define	SLIP_HIWAT	1000	\/* don't start a new pack/
SLMTU	../net/if_sl.c	/^#define	SLMTU	1006$/
SLOAD	../h/proc.h	/^#define	SLOAD	0x0000001	\/* in core *\/$/
SLOCK	../h/proc.h	/^#define	SLOCK	0x0000004	\/* process being swapped /
SLOGIN	../h/proc.h	/^#define	SLOGIN	0x0800000	\/* a login process (legi/
SLR	../vax/mtpr.h	/^#define	SLR	0xd		\/* system segment length registe/
SMICRO	../vaxuba/lpa.c	/^#define SMICRO	0000400		\/* step microprocessor */
SNOVM	../h/proc.h	/^#define	SNOVM	0x0004000	\/* no vm, parent in a vfo/
SOCK_DGRAM	../h/socket.h	/^#define	SOCK_DGRAM	2		\/* datagram socket *\/$/
SOCK_RAW	../h/socket.h	/^#define	SOCK_RAW	3		\/* raw-protocol interface *\//
SOCK_RDM	../h/socket.h	/^#define	SOCK_RDM	4		\/* reliably-delivered message/
SOCK_SEQPACKET	../h/socket.h	/^#define	SOCK_SEQPACKET	5		\/* sequenced packet str/
SOCK_STREAM	../h/socket.h	/^#define	SOCK_STREAM	1		\/* stream socket *\/$/
SOL_SOCKET	../h/socket.h	/^#define	SOL_SOCKET	0xffff		\/* options for socket /
SOMASK	../h/proc.h	/^#define	SOMASK	0x0000200	\/* restore old mask afte/
SOMAXCONN	../h/socket.h	/^#define	SOMAXCONN	5$/
SOUSIG	../h/proc.h	/^#define	SOUSIG	0x0100000	\/* using old signal mech/
SOWEUPC	../h/proc.h	/^#define	SOWEUPC	0x0200000	\/* owe process an addup/
SO_ACCEPTCONN	../h/socket.h	/^#define	SO_ACCEPTCONN	0x0002		\/* socket has had l/
SO_ALL_PACKETS	../netns/ns.h	/^#define	SO_ALL_PACKETS		7$/
SO_BROADCAST	../h/socket.h	/^#define	SO_BROADCAST	0x0020		\/* permit sending of/
SO_DEBUG	../h/socket.h	/^#define	SO_DEBUG	0x0001		\/* turn on debugging inf/
SO_DEFAULT_HEADERS	../netns/ns.h	/^#define	SO_DEFAULT_HEADERS	3$/
SO_DONTROUTE	../h/socket.h	/^#define	SO_DONTROUTE	0x0010		\/* just use interfac/
SO_ERROR	../h/socket.h	/^#define	SO_ERROR	0x1007		\/* get error status and /
SO_HEADERS_ON_INPUT	../netns/ns.h	/^#define	SO_HEADERS_ON_INPUT	1$/
SO_HEADERS_ON_OUTPUT	../netns/ns.h	/^#define	SO_HEADERS_ON_OUTPUT	2$/
SO_KEEPALIVE	../h/socket.h	/^#define	SO_KEEPALIVE	0x0008		\/* keep connections /
SO_LAST_HEADER	../netns/ns.h	/^#define	SO_LAST_HEADER		4$/
SO_LINGER	../h/socket.h	/^#define	SO_LINGER	0x0080		\/* linger on close if d/
SO_MTU	../netns/ns.h	/^#define SO_MTU			8$/
SO_NSIP_ROUTE	../netns/ns.h	/^#define	SO_NSIP_ROUTE		5$/
SO_OOBINLINE	../h/socket.h	/^#define	SO_OOBINLINE	0x0100		\/* leave received OO/
SO_RCVBUF	../h/socket.h	/^#define SO_RCVBUF	0x1002		\/* receive buffer size /
SO_RCVLOWAT	../h/socket.h	/^#define SO_RCVLOWAT	0x1004		\/* receive low-water /
SO_RCVTIMEO	../h/socket.h	/^#define SO_RCVTIMEO	0x1006		\/* receive timeout */
SO_REUSEADDR	../h/socket.h	/^#define	SO_REUSEADDR	0x0004		\/* allow local addre/
SO_SEQNO	../netns/ns.h	/^#define SO_SEQNO		6$/
SO_SNDBUF	../h/socket.h	/^#define SO_SNDBUF	0x1001		\/* send buffer size *\//
SO_SNDLOWAT	../h/socket.h	/^#define SO_SNDLOWAT	0x1003		\/* send low-water mar/
SO_SNDTIMEO	../h/socket.h	/^#define SO_SNDTIMEO	0x1005		\/* send timeout *\/$/
SO_TYPE	../h/socket.h	/^#define	SO_TYPE		0x1008		\/* get socket type *\/$/
SO_USELOOPBACK	../h/socket.h	/^#define	SO_USELOOPBACK	0x0040		\/* bypass hardware/
SP	../vax/reg.h	/^#define	SP	(-5)$/
SPAD_MDECC	../vax/ka860.c	/^#define SPAD_MDECC	0x27		\/* scratch pad mdecc reg/
SPAD_MEAR	../vax/ka860.c	/^#define SPAD_MEAR	0x2a		\/* scratch pad mear regis/
SPAD_MSTAT1	../vax/ka860.c	/^#define	SPAD_MSTAT1	0x25		\/* scratch pad mstat1 r/
SPAD_MSTAT2	../vax/ka860.c	/^#define SPAD_MSTAT2	0x26		\/* scratch pad mstat2 r/
SPAGE	../h/proc.h	/^#define	SPAGE	0x0000080	\/* process in page wait s/
SPAGI	../h/proc.h	/^#define	SPAGI	0x0008000	\/* init data space on dem/
SPHYSIO	../h/proc.h	/^#define	SPHYSIO	0x0000800	\/* doing physical i\/o /
SPINC	../netns/spp_usrreq.c	/^#define SPINC sizeof(struct sphdr)$/
SPPTIMERS	../netns/spp_debug.c	/^#define SPPTIMERS$/
SPPTV_KEEP	../netns/spp_timer.h	/^#define	SPPTV_KEEP	( 75*PR_SLOWHZ)		\/* keep alive/
SPPTV_MAXIDLE	../netns/spp_timer.h	/^#define	SPPTV_MAXIDLE	(  8*SPPTV_KEEP)	\/* maximum/
SPPTV_MIN	../netns/spp_timer.h	/^#define	SPPTV_MIN	(  1*PR_SLOWHZ)		\/* minimum all/
SPPTV_MSL	../netns/spp_timer.h	/^#define	SPPTV_MSL	( 15*PR_SLOWHZ)		\/* max seg lif/
SPPTV_PERSMAX	../netns/spp_timer.h	/^#define	SPPTV_PERSMAX	( 60*PR_SLOWHZ)		\/* maximum/
SPPTV_PERSMIN	../netns/spp_timer.h	/^#define	SPPTV_PERSMIN	(  5*PR_SLOWHZ)		\/* retrans/
SPPTV_REXMTMAX	../netns/spp_timer.h	/^#define	SPPTV_REXMTMAX	( 64*PR_SLOWHZ)		\/* max al/
SPPTV_SRTTBASE	../netns/spp_timer.h	/^#define	SPPTV_SRTTBASE	0			\/* base roundtrip time/
SPPTV_SRTTDFLT	../netns/spp_timer.h	/^#define	SPPTV_SRTTDFLT	(  3*PR_SLOWHZ)		\/* assume/
SPPT_2MSL	../netns/spp_timer.h	/^#define	SPPT_2MSL	3		\/* 2*msl quiet time timer */
SPPT_KEEP	../netns/spp_timer.h	/^#define	SPPT_KEEP	2		\/* keep alive *\/$/
SPPT_NTIMERS	../netns/spp_timer.h	/^#define	SPPT_NTIMERS	4$/
SPPT_PERSIST	../netns/spp_timer.h	/^#define	SPPT_PERSIST	1		\/* retransmit persistance/
SPPT_RANGESET	../netns/spp_timer.h	/^#define	SPPT_RANGESET(tv, value, tvmin, tvmax) { /
SPPT_REXMT	../netns/spp_timer.h	/^#define	SPPT_REXMT	0		\/* retransmit *\/$/
SPP_ISSINCR	../netns/spp_var.h	/^#define	SPP_ISSINCR	128$/
SPP_LINGERTIME	../netns/spp_timer.h	/^#define	SPP_LINGERTIME	120			\/* linger at most 2 /
SPP_MAXRXTSHIFT	../netns/spp_timer.h	/^#define	SPP_MAXRXTSHIFT	12			\/* maximum retransmi/
SPP_NDEBUG	../netns/spp_debug.h	/^#define	SPP_NDEBUG 100$/
SPP_TTL	../netns/spp_timer.h	/^#define	SPP_TTL		30		\/* default time to live for /
SPTECHG	../h/proc.h	/^#define	SPTECHG	0x1000000	\/* pte's for process ha/
SP_EM	../netns/sp.h	/^#define	SP_EM	0x10		\/* end of message *\/$/
SP_OB	../netns/sp.h	/^#define	SP_OB	0x20		\/* attention (out of band dat/
SP_SA	../netns/sp.h	/^#define	SP_SA	0x40		\/* send acknowledgement *\/$/
SP_SP	../netns/sp.h	/^#define	SP_SP	0x80		\/* system packet *\/$/
SQSIZE	../sys/kern_synch.c	/^#define SQSIZE 0100	\/* Must be power of 2 *\/$/
SRES	../h/vmmeter.h	/^#define	SRES	5$/
SREW	../vaxuba/tm.c	/^#define	SREW	4		\/* sending a drive rewind *\/$/
SRUN	../h/proc.h	/^#define	SRUN	3		\/* running *\/$/
SSE	../h/dkbad.h	/^#define	SSE	1$/
SSEEK	../vaxuba/tm.c	/^#define	SSEEK	1		\/* seeking *\/$/
SSEL	../h/proc.h	/^#define	SSEL	0x0400000	\/* selecting; wakeup\/wait/
SSEQL	../h/proc.h	/^#define	SSEQL	0x0010000	\/* user warned of sequent/
SSEQ_GEQ	../netns/spp_var.h	/^#define	SSEQ_GEQ(a,b)	((xnsCbug = (short)((a)-(b))/
SSEQ_GT	../netns/spp_var.h	/^#define	SSEQ_GT(a,b)	((xnsCbug = (short)((a)-(b)))/
SSEQ_LEQ	../netns/spp_var.h	/^#define	SSEQ_LEQ(a,b)	((xnsCbug = (short)((a)-(b))/
SSEQ_LT	../netns/spp_var.h	/^#define	SSEQ_LT(a,b)	((xnsCbug = (short)((a)-(b)))/
SSIZE	../vax/machparam.h	/^#define	SSIZE		4		\/* initial stack size\/NBPG *\//
SSLEEP	../h/proc.h	/^#define	SSLEEP	1		\/* awaiting an event *\/$/
SSP	../vax/mtpr.h	/^#define	SSP	0x2		\/* supervisor stack pointer *\/$/
SSTOP	../h/proc.h	/^#define	SSTOP	6		\/* process being traced *\/$/
SSWAP	../h/proc.h	/^#define	SSWAP	0x0000008	\/* save area flag *\/$/
SSYS	../h/proc.h	/^#define	SSYS	0x0000002	\/* swapper or pager proces/
SS_ASYNC	../h/socketvar.h	/^#define	SS_ASYNC		0x200	\/* async i\/o notify *\/$/
SS_CANTRCVMORE	../h/socketvar.h	/^#define	SS_CANTRCVMORE		0x020	\/* can't receive mo/
SS_CANTSENDMORE	../h/socketvar.h	/^#define	SS_CANTSENDMORE		0x010	\/* can't send more/
SS_ISCONNECTED	../h/socketvar.h	/^#define	SS_ISCONNECTED		0x002	\/* socket connected/
SS_ISCONNECTING	../h/socketvar.h	/^#define	SS_ISCONNECTING		0x004	\/* in process of c/
SS_ISDISCONNECTING	../h/socketvar.h	/^#define	SS_ISDISCONNECTING	0x008	\/* in process of/
SS_NBIO	../h/socketvar.h	/^#define	SS_NBIO			0x100	\/* non-blocking ops *\/$/
SS_NOFDREF	../h/socketvar.h	/^#define	SS_NOFDREF		0x001	\/* no file table ref an/
SS_PRIV	../h/socketvar.h	/^#define	SS_PRIV			0x080	\/* privileged for broadca/
SS_RCVATMARK	../h/socketvar.h	/^#define	SS_RCVATMARK		0x040	\/* at mark on input */
ST1EC	../vaxuba/lpa.c	/^#define ST1EC	020000		\/* st1 enable counter *\/$/
ST1IE	../vaxuba/lpa.c	/^#define ST1IE	040000		\/* st1 interrupt enable *\//
STARTUP	../vaxif/if_hy.h	/^#define	STARTUP		0	\/* initial state (before fully/
STATSENT	../vaxif/if_hy.h	/^#define	STATSENT	2	\/* status cmd sent to adapter /
STAT_NIHALT	../vaxif/if_dereg.h	/^#define	STAT_NIHALT	0x6		\/* NI halted *\/$/
STAT_NIUHALT	../vaxif/if_dereg.h	/^#define	STAT_NIUHALT	0x7		\/* NI and UNIBUS Halted/
STAT_PRIMLD	../vaxif/if_dereg.h	/^#define	STAT_PRIMLD	0x1		\/* Primary load *\/$/
STAT_READY	../vaxif/if_dereg.h	/^#define	STAT_READY	0x2$/
STAT_RESET	../vaxif/if_dereg.h	/^#define	STAT_RESET	0x0$/
STAT_RUN	../vaxif/if_dereg.h	/^#define	STAT_RUN	0x3$/
STAT_UHALT	../vaxif/if_dereg.h	/^#define	STAT_UHALT	0x5		\/* UNIBUS halted *\/$/
STEP	../vaxif/if_en.c	/^#define	STEP	{temp = *from++;*to++ = *from++;*to++/
STEP0MASK	../vaxuba/uda.c	/^#define	STEP0MASK	(UDA_ERR | UDA_STEP4 | UDA_STEP3/
STEP1GOOD	../vaxuba/uda.c	/^#define	STEP1GOOD	(UDA_STEP2 | UDA_IE | (NCMDL2 <</
STEP1MASK	../vaxuba/uda.c	/^#define	STEP1MASK	(ALLSTEPS | UDA_IE | UDA_NCNRMAS/
STEP2GOOD	../vaxuba/uda.c	/^#define	STEP2GOOD	(UDA_STEP3 | UDA_IE | (sc->sc_iv/
STEP2MASK	../vaxuba/uda.c	/^#define	STEP2MASK	(ALLSTEPS | UDA_IE | UDA_IVECMAS/
STEP3GOOD	../vaxuba/uda.c	/^#define	STEP3GOOD	UDA_STEP4$/
STEP3MASK	../vaxuba/uda.c	/^#define	STEP3MASK	ALLSTEPS$/
STIMO	../h/proc.h	/^#define	STIMO	0x0040000	\/* timing out during slee/
STK_PARAMS	../sys/sys_generic.c	/^#define STK_PARAMS	128$/
STOP	../vaxuba/lpa.c	/^#define STOP	0040000		\/* stop data transfer *\/$/
STRC	../h/proc.h	/^#define	STRC	0x0000010	\/* process is being traced/
STTY	../vaxuba/lpa.c	/^#define STTY	010		\/* stty call and device initial/
STXCS	../vax/mtpr.h	/^#define STXCS	0x4c		\/* Console block storage C\/S/
STXCS_IE	../vax/crl.h	/^#define STXCS_IE	0x00000040	\/* interrupt enable */
STXCS_RDY	../vax/crl.h	/^#define STXCS_RDY	0x00000080	\/* ready bit *\/$/
STXDB	../vax/mtpr.h	/^#define STXDB	0x4d		\/* Console block storage D\/B/
ST_IDLE	../vaxuba/uda.c	/^#define	ST_IDLE		0	\/* uninitialised *\/$/
ST_RUN	../vaxuba/uda.c	/^#define	ST_RUN		5	\/* up and running *\/$/
ST_SETCHAR	../vaxuba/uda.c	/^#define	ST_SETCHAR	4	\/* in `Set Controller Charac/
ST_STEP1	../vaxuba/uda.c	/^#define	ST_STEP1	1	\/* in `STEP 1' *\/$/
ST_STEP2	../vaxuba/uda.c	/^#define	ST_STEP2	2	\/* in `STEP 2' *\/$/
ST_STEP3	../vaxuba/uda.c	/^#define	ST_STEP3	3	\/* in `STEP 3' *\/$/
SUANOM	../h/proc.h	/^#define	SUANOM	0x0020000	\/* user warned of random/
SUBNETSARELOCAL	../netinet/in.c	/^#define	SUBNETSARELOCAL	1$/
SULOCK	../h/proc.h	/^#define	SULOCK	0x0000040	\/* user settable lock in/
SUPR	../vaxif/if_hdh.c	/^#define SUPR	0		\/* supervisor channel *\/$/
SVFDONE	../h/proc.h	/^#define	SVFDONE	0x0002000	\/* another vfork flag */
SVFORK	../h/proc.h	/^#define	SVFORK	0x0001000	\/* process resulted from/
SV_INTERRUPT	../h/signal.h	/^#define SV_INTERRUPT	0x0002	\/* do not restart sys/
SV_ONSTACK	../h/signal.h	/^#define SV_ONSTACK	0x0001	\/* take signal on signa/
SWAIT	../h/proc.h	/^#define	SWAIT	2		\/* (abandoned state) *\/$/
SWEXIT	../h/proc.h	/^#define	SWEXIT	0x0000400	\/* working on exiting */
SWTED	../h/proc.h	/^#define	SWTED	0x0000020	\/* another tracing flag */
SYNC	../vaxuba/psreg.h	/^#define SYNC		010$/
SYSIE	../vaxuba/psreg.h	/^#define SYSIE		0177763$/
SYSPTSIZE	../vax/vmparam.h	/^#define	SYSPTSIZE	((20+MAXUSERS)*NPTEPG)$/
SYSREQ	../vaxuba/psreg.h	/^#define SYSREQ		0177762$/
SYS_STATUS	../vaxif/if_ddnvar.h	/^#define SYS_STATUS	0x42		\/* system status msg		*/
SYS_accept	../h/syscall.h	/^#define	SYS_accept	99$/
SYS_access	../h/syscall.h	/^#define	SYS_access	33$/
SYS_acct	../h/syscall.h	/^#define	SYS_acct	51$/
SYS_adjtime	../h/syscall.h	/^#define	SYS_adjtime	140$/
SYS_bind	../h/syscall.h	/^#define	SYS_bind	104$/
SYS_chdir	../h/syscall.h	/^#define	SYS_chdir	12$/
SYS_chmod	../h/syscall.h	/^#define	SYS_chmod	15$/
SYS_chown	../h/syscall.h	/^#define	SYS_chown	16$/
SYS_chroot	../h/syscall.h	/^#define	SYS_chroot	61$/
SYS_close	../h/syscall.h	/^#define	SYS_close	6$/
SYS_connect	../h/syscall.h	/^#define	SYS_connect	98$/
SYS_creat	../h/syscall.h	/^#define	SYS_creat	8$/
SYS_dup	../h/syscall.h	/^#define	SYS_dup		41$/
SYS_dup2	../h/syscall.h	/^#define	SYS_dup2	90$/
SYS_execv	../h/syscall.h	/^#define	SYS_execv	11$/
SYS_execve	../h/syscall.h	/^#define	SYS_execve	59$/
SYS_exit	../h/syscall.h	/^#define	SYS_exit	1$/
SYS_fchmod	../h/syscall.h	/^#define	SYS_fchmod	124$/
SYS_fchown	../h/syscall.h	/^#define	SYS_fchown	123$/
SYS_fcntl	../h/syscall.h	/^#define	SYS_fcntl	92$/
SYS_flock	../h/syscall.h	/^#define	SYS_flock	131$/
SYS_fork	../h/syscall.h	/^#define	SYS_fork	2$/
SYS_fstat	../h/syscall.h	/^#define	SYS_fstat	62$/
SYS_fsync	../h/syscall.h	/^#define	SYS_fsync	95$/
SYS_ftruncate	../h/syscall.h	/^#define	SYS_ftruncate	130$/
SYS_getdopt	../h/syscall.h	/^#define	SYS_getdopt	91$/
SYS_getdtablesize	../h/syscall.h	/^#define	SYS_getdtablesize 89$/
SYS_getgid	../h/syscall.h	/^#define	SYS_getgid	47$/
SYS_getgroups	../h/syscall.h	/^#define	SYS_getgroups	79$/
SYS_gethostid	../h/syscall.h	/^#define	SYS_gethostid	142$/
SYS_gethostname	../h/syscall.h	/^#define	SYS_gethostname	87$/
SYS_getitimer	../h/syscall.h	/^#define	SYS_getitimer	86$/
SYS_getpagesize	../h/syscall.h	/^#define	SYS_getpagesize 64$/
SYS_getpeername	../h/syscall.h	/^#define	SYS_getpeername	141$/
SYS_getpgrp	../h/syscall.h	/^#define	SYS_getpgrp	81$/
SYS_getpid	../h/syscall.h	/^#define	SYS_getpid	20$/
SYS_getpriority	../h/syscall.h	/^#define	SYS_getpriority	100$/
SYS_getrlimit	../h/syscall.h	/^#define	SYS_getrlimit	144$/
SYS_getrusage	../h/syscall.h	/^#define	SYS_getrusage	117$/
SYS_getsockname	../h/syscall.h	/^#define	SYS_getsockname	150$/
SYS_getsockopt	../h/syscall.h	/^#define	SYS_getsockopt	118$/
SYS_gettimeofday	../h/syscall.h	/^#define	SYS_gettimeofday 116$/
SYS_getuid	../h/syscall.h	/^#define	SYS_getuid	24$/
SYS_ioctl	../h/syscall.h	/^#define	SYS_ioctl	54$/
SYS_kill	../h/syscall.h	/^#define	SYS_kill	37$/
SYS_killpg	../h/syscall.h	/^#define	SYS_killpg	146$/
SYS_link	../h/syscall.h	/^#define	SYS_link	9$/
SYS_listen	../h/syscall.h	/^#define	SYS_listen	106$/
SYS_lseek	../h/syscall.h	/^#define	SYS_lseek	19$/
SYS_lstat	../h/syscall.h	/^#define	SYS_lstat	40$/
SYS_madvise	../h/syscall.h	/^#define	SYS_madvise	75$/
SYS_mincore	../h/syscall.h	/^#define	SYS_mincore	78$/
SYS_mkdir	../h/syscall.h	/^#define	SYS_mkdir	136$/
SYS_mknod	../h/syscall.h	/^#define	SYS_mknod	14$/
SYS_mmap	../h/syscall.h	/^#define	SYS_mmap	71$/
SYS_mount	../h/syscall.h	/^#define	SYS_mount	21$/
SYS_mprotect	../h/syscall.h	/^#define	SYS_mprotect	74$/
SYS_mremap	../h/syscall.h	/^#define	SYS_mremap	65$/
SYS_munmap	../h/syscall.h	/^#define	SYS_munmap	73$/
SYS_open	../h/syscall.h	/^#define	SYS_open	5$/
SYS_pipe	../h/syscall.h	/^#define	SYS_pipe	42$/
SYS_profil	../h/syscall.h	/^#define	SYS_profil	44$/
SYS_ptrace	../h/syscall.h	/^#define	SYS_ptrace	26$/
SYS_quota	../h/syscall.h	/^#define	SYS_quota	149$/
SYS_read	../h/syscall.h	/^#define	SYS_read	3$/
SYS_readlink	../h/syscall.h	/^#define	SYS_readlink	58$/
SYS_readv	../h/syscall.h	/^#define	SYS_readv	120$/
SYS_reboot	../h/syscall.h	/^#define	SYS_reboot	55$/
SYS_recv	../h/syscall.h	/^#define	SYS_recv	102$/
SYS_recvfrom	../h/syscall.h	/^#define	SYS_recvfrom	125$/
SYS_recvmsg	../h/syscall.h	/^#define	SYS_recvmsg	113$/
SYS_rename	../h/syscall.h	/^#define	SYS_rename	128$/
SYS_rmdir	../h/syscall.h	/^#define	SYS_rmdir	137$/
SYS_sbrk	../h/syscall.h	/^#define	SYS_sbrk	69$/
SYS_select	../h/syscall.h	/^#define	SYS_select	93$/
SYS_send	../h/syscall.h	/^#define	SYS_send	101$/
SYS_sendmsg	../h/syscall.h	/^#define	SYS_sendmsg	114$/
SYS_sendto	../h/syscall.h	/^#define	SYS_sendto	133$/
SYS_setdopt	../h/syscall.h	/^#define	SYS_setdopt	94$/
SYS_setgroups	../h/syscall.h	/^#define	SYS_setgroups	80$/
SYS_sethostid	../h/syscall.h	/^#define	SYS_sethostid	143$/
SYS_sethostname	../h/syscall.h	/^#define	SYS_sethostname	88$/
SYS_setitimer	../h/syscall.h	/^#define	SYS_setitimer	83$/
SYS_setpgrp	../h/syscall.h	/^#define	SYS_setpgrp	82$/
SYS_setpriority	../h/syscall.h	/^#define	SYS_setpriority	96$/
SYS_setquota	../h/syscall.h	/^#define	SYS_setquota	148$/
SYS_setregid	../h/syscall.h	/^#define	SYS_setregid	127$/
SYS_setreuid	../h/syscall.h	/^#define	SYS_setreuid	126$/
SYS_setrlimit	../h/syscall.h	/^#define	SYS_setrlimit	145$/
SYS_setsockopt	../h/syscall.h	/^#define	SYS_setsockopt	105$/
SYS_settimeofday	../h/syscall.h	/^#define	SYS_settimeofday 122$/
SYS_shutdown	../h/syscall.h	/^#define	SYS_shutdown	134$/
SYS_sigblock	../h/syscall.h	/^#define	SYS_sigblock	109$/
SYS_sigpause	../h/syscall.h	/^#define	SYS_sigpause	111$/
SYS_sigreturn	../h/syscall.h	/^#define	SYS_sigreturn	103$/
SYS_sigsetmask	../h/syscall.h	/^#define	SYS_sigsetmask	110$/
SYS_sigstack	../h/syscall.h	/^#define	SYS_sigstack	112$/
SYS_sigvec	../h/syscall.h	/^#define	SYS_sigvec	108$/
SYS_socket	../h/syscall.h	/^#define	SYS_socket	97$/
SYS_socketpair	../h/syscall.h	/^#define	SYS_socketpair	135$/
SYS_sstk	../h/syscall.h	/^#define	SYS_sstk	70$/
SYS_stat	../h/syscall.h	/^#define	SYS_stat	38$/
SYS_swapon	../h/syscall.h	/^#define	SYS_swapon	85$/
SYS_symlink	../h/syscall.h	/^#define	SYS_symlink	57$/
SYS_sync	../h/syscall.h	/^#define	SYS_sync	36$/
SYS_truncate	../h/syscall.h	/^#define	SYS_truncate	129$/
SYS_umask	../h/syscall.h	/^#define	SYS_umask	60$/
SYS_umount	../h/syscall.h	/^#define	SYS_umount	22$/
SYS_unlink	../h/syscall.h	/^#define	SYS_unlink	10$/
SYS_utimes	../h/syscall.h	/^#define	SYS_utimes	138$/
SYS_vhangup	../h/syscall.h	/^#define	SYS_vhangup	76$/
SYS_wait	../h/syscall.h	/^#define	SYS_wait	84$/
SYS_write	../h/syscall.h	/^#define	SYS_write	4$/
SYS_writev	../h/syscall.h	/^#define	SYS_writev	121$/
SZOMB	../h/proc.h	/^#define	SZOMB	5		\/* intermediate state in process/
SZ_CMAP	../h/cmap.h	/^#define	SZ_CMAP		16		\/* sizeof(struct cmap) *\/$/
S_A	../vaxif/if_hyreg.h	/^#define	S_A	   0004000	\/* device status A (reciev/
S_ATTN	../vaxif/if_hyreg.h	/^#define	S_ATTN	   0020000	\/* attn (always zero) */
S_B	../vaxif/if_hyreg.h	/^#define	S_B	   0002000	\/* device status B (normal/
S_BURST	../vaxif/if_hyreg.h	/^#define	S_BURST	   0000002	\/* burst mode DMA (not/
S_C	../vaxif/if_hyreg.h	/^#define	S_C	   0001000	\/* device status C (abnorm/
S_CLRINT	../vaxif/if_hyreg.h	/^#define S_CLRINT   0000014	\/* clear stacked inter/
S_CYCLE	../vaxif/if_hyreg.h	/^#define	S_CYCLE	   0000400	\/* cycle (not used) */
S_ERROR	../vaxif/if_hyreg.h	/^#define	S_ERROR	   0100000	\/* error *\/$/
S_GO	../vaxif/if_hyreg.h	/^#define	S_GO	   0000001	\/* go *\/$/
S_IATTN	../vaxif/if_hyreg.h	/^#define	S_IATTN    0000010	\/* interrupt on attent/
S_IATTNWC	../vaxif/if_hyreg.h	/^#define S_IATTNWC  0000000	\/* interrupt on word c/
S_IDLE	../vaxuba/tmscp.c	/^#define S_IDLE  0               \/* hasn't been in/
S_IE	../vaxif/if_hyreg.h	/^#define	S_IE	   0000100	\/* interrupt enable *\/$/
S_IEXEC	../h/stat.h	/^#define	S_IEXEC	0000100		\/* execute\/search permi/
S_IFBLK	../h/stat.h	/^#define		S_IFBLK	0060000	\/* block special *\/$/
S_IFCHR	../h/stat.h	/^#define		S_IFCHR	0020000	\/* character special *\//
S_IFDIR	../h/stat.h	/^#define		S_IFDIR	0040000	\/* directory *\/$/
S_IFLNK	../h/stat.h	/^#define		S_IFLNK	0120000	\/* symbolic link *\/$/
S_IFMT	../h/stat.h	/^#define	S_IFMT	0170000		\/* type of file *\/$/
S_IFREG	../h/stat.h	/^#define		S_IFREG	0100000	\/* regular *\/$/
S_IFSOCK	../h/stat.h	/^#define		S_IFSOCK 0140000\/* socket *\/$/
S_IREAD	../h/stat.h	/^#define	S_IREAD	0000400		\/* read permission, owne/
S_ISGID	../h/stat.h	/^#define	S_ISGID	0002000		\/* set group id on execu/
S_ISUID	../h/stat.h	/^#define	S_ISUID	0004000		\/* set user id on execut/
S_ISVTX	../h/stat.h	/^#define	S_ISVTX	0001000		\/* save swapped text eve/
S_IWRITE	../h/stat.h	/^#define	S_IWRITE 0000200	\/* write permission, own/
S_MAINT	../vaxif/if_hyreg.h	/^#define	S_MAINT	   0010000	\/* maintenance (not us/
S_NEX	../vaxif/if_hyreg.h	/^#define	S_NEX	   0040000	\/* non-existent memory e/
S_POWEROFF	../vaxif/if_hyreg.h	/^#define S_POWEROFF 0000400	\/* power off indicator/
S_READY	../vaxif/if_hyreg.h	/^#define	S_READY	   0000200	\/* ready *\/$/
S_RUN	../vaxuba/tmscp.c	/^#define S_RUN   5               \/* running *\/$/
S_SCHAR	../vaxuba/tmscp.c	/^#define S_SCHAR 4               \/* doing "set con/
S_STEP1	../vaxuba/tmscp.c	/^#define S_STEP1 1               \/* doing step 1 i/
S_STEP2	../vaxuba/tmscp.c	/^#define S_STEP2 2               \/* doing step 2 i/
S_STEP3	../vaxuba/tmscp.c	/^#define S_STEP3 3               \/* doing step 3 i/
S_STKINTR	../vaxif/if_hyreg.h	/^#define S_STKINTR  0010000	\/* stacked interrupt */
S_WC	../vaxif/if_hyreg.h	/^#define S_WC       0000004	\/* interrupt on word c/
S_XBA	../vaxif/if_hyreg.h	/^#define	S_XBA	   0000060	\/* bus address bit bits /
Setjmp ../vax/locore.s /^JSBENTRY(Setjmp, R0)$/
Setrq ../vax/locore.s /^JSBENTRY(Setrq, R0)$/
Subyte ../vax/locore.s /^JSBENTRY(Subyte, R0|R1)$/
Suword ../vax/locore.s /^JSBENTRY(Suword, R0|R1)$/
Swtch ../vax/locore.s /^JSBENTRY(Swtch, 0)$/
TAB	../h/tty.h	/^#define	TAB		4$/
TAB0	../h/ioctl.h	/^#define			TAB0	0x00000000$/
TAB1	../h/ioctl.h	/^#define			TAB1	0x00000400	\/* tty 37 *\/$/
TAB2	../h/ioctl.h	/^#define			TAB2	0x00000800$/
TABLDISC	../h/ioctl.h	/^#define	TABLDISC	3		\/* tablet discipline *\/$/
TAKE	../vaxuba/psreg.h	/^#define TAKE		02000$/
TANAMES	../netinet/tcp_debug.c	/^#define	TANAMES$/
TANDEM	../h/ioctl.h	/^#define		TANDEM		0x00000001	\/* send stopc on out /
TA_DROP	../netinet/tcp_debug.h	/^#define	TA_DROP		4$/
TA_INPUT	../netinet/tcp_debug.h	/^#define	TA_INPUT 	0$/
TA_OUTPUT	../netinet/tcp_debug.h	/^#define	TA_OUTPUT	1$/
TA_RESPOND	../netinet/tcp_debug.h	/^#define	TA_RESPOND	3$/
TA_USER	../netinet/tcp_debug.h	/^#define	TA_USER		2$/
TB	../vax/mtpr.h	/^#define	TB	0x3b		\/* translation buffer *\/$/
TBCHK	../vax/mtpr.h	/^#define TBCHK	0x3f		\/* Translation Buffer Check */
TBDELAY	../h/ioctl.h	/^#define		TBDELAY		0x00000c00	\/* horizontal tab de/
TBDIGI	../h/tablet.h	/^#define		TBDIGI		0x7		\/* gtco digi-pad, low res */
TBDIGIHIRES	../h/tablet.h	/^#define		TBDIGIHIRES	0x8		\/* gtco digi-pad, high /
TBDR	../vax/mtpr.h	/^#define	TBDR	0x24		\/* translation buffer disable /
TBF_INPROX	../sys/tty_tb.c	/^#define	TBF_INPROX	0x2	\/* tablet has proximity in/
TBF_POL	../sys/tty_tb.c	/^#define	TBF_POL		0x1	\/* polhemus hack *\/$/
TBGO	../h/tablet.h	/^#define		TBGO		0x0000		\/* ~TBSTOP *\/$/
TBGTCO	../h/tablet.h	/^#define		TBGTCO		0x3		\/* gtco *\/$/
TBHDG	../h/tablet.h	/^#define		TBHDG		0x5		\/* hdg-1111b, low res *\/$/
TBHDGHIRES	../h/tablet.h	/^#define		TBHDGHIRES	0x6		\/* hdg-1111b, high res */
TBHITACHI	../h/tablet.h	/^#define		TBHITACHI	0x1		\/* hitachi tablet *\/$/
TBIA	../vax/mtpr.h	/^#define	TBIA	0x39		\/* translation buffer invalida/
TBINPROX	../h/tablet.h	/^#define	TBINPROX	0100000		\/* pen in proximity of /
TBIS	../vax/mtpr.h	/^#define	TBIS	0x3a		\/* translation buffer invalida/
TBIT	../vax/kdbparam.h	/^#define TBIT	020$/
TBMAXREC	../sys/tty_tb.c	/^#define	TBMAXREC	17	\/* max input record size *\/$/
TBMODE	../h/tablet.h	/^#define	TBMODE		0xfff0		\/* mode bits: *\/$/
TBPOINT	../h/tablet.h	/^#define		TBPOINT		0x0010		\/* single point *\/$/
TBPOL	../h/tablet.h	/^#define		TBPOL		0x4		\/* polhemus 3space *\/$/
TBRUN	../h/tablet.h	/^#define		TBRUN		0x0000		\/* runs contin. *\/$/
TBSTOP	../h/tablet.h	/^#define		TBSTOP		0x0020		\/* shut-up *\/$/
TBTIGER	../h/tablet.h	/^#define		TBTIGER		0x2		\/* hitachi tiger *\/$/
TBTYPE	../h/tablet.h	/^#define	TBTYPE		0x000f		\/* tablet type: *\/$/
TBUNUSED	../h/tablet.h	/^#define		TBUNUSED	0x0$/
TCPOOB_HADDATA	../netinet/tcp_var.h	/^#define	TCPOOB_HADDATA	0x02$/
TCPOOB_HAVEDATA	../netinet/tcp_var.h	/^#define	TCPOOB_HAVEDATA	0x01$/
TCPOPT_EOL	../netinet/tcp.h	/^#define	TCPOPT_EOL	0$/
TCPOPT_MAXSEG	../netinet/tcp.h	/^#define	TCPOPT_MAXSEG	2$/
TCPOPT_NOP	../netinet/tcp.h	/^#define	TCPOPT_NOP	1$/
TCPOUTFLAGS	../netinet/tcp_output.c	/^#define	TCPOUTFLAGS$/
TCPSTATES	../netinet/tcp_debug.c	/^#define TCPSTATES$/
TCPS_CLOSED	../netinet/tcp_fsm.h	/^#define	TCPS_CLOSED		0	\/* closed *\/$/
TCPS_CLOSE_WAIT	../netinet/tcp_fsm.h	/^#define	TCPS_CLOSE_WAIT		5	\/* rcvd fin, waiting f/
TCPS_CLOSING	../netinet/tcp_fsm.h	/^#define	TCPS_CLOSING		7	\/* closed xchd FIN; await/
TCPS_ESTABLISHED	../netinet/tcp_fsm.h	/^#define	TCPS_ESTABLISHED	4	\/* established *\/$/
TCPS_FIN_WAIT_1	../netinet/tcp_fsm.h	/^#define	TCPS_FIN_WAIT_1		6	\/* have closed, sent f/
TCPS_FIN_WAIT_2	../netinet/tcp_fsm.h	/^#define	TCPS_FIN_WAIT_2		9	\/* have closed, fin is/
TCPS_HAVERCVDFIN	../netinet/tcp_fsm.h	/^#define	TCPS_HAVERCVDFIN(s)	((s) >= TCPS_TIME_WAIT/
TCPS_HAVERCVDSYN	../netinet/tcp_fsm.h	/^#define	TCPS_HAVERCVDSYN(s)	((s) >= TCPS_SYN_RECEI/
TCPS_LAST_ACK	../netinet/tcp_fsm.h	/^#define	TCPS_LAST_ACK		8	\/* had fin and close; aw/
TCPS_LISTEN	../netinet/tcp_fsm.h	/^#define	TCPS_LISTEN		1	\/* listening for connectio/
TCPS_SYN_RECEIVED	../netinet/tcp_fsm.h	/^#define	TCPS_SYN_RECEIVED	3	\/* have send and rece/
TCPS_SYN_SENT	../netinet/tcp_fsm.h	/^#define	TCPS_SYN_SENT		2	\/* active, have sent syn/
TCPS_TIME_WAIT	../netinet/tcp_fsm.h	/^#define	TCPS_TIME_WAIT		10	\/* in 2*msl quiet wait/
TCPTIMERS	../netinet/tcp_debug.c	/^#define	TCPTIMERS$/
TCPTV_KEEPCNT	../netinet/tcp_timer.h	/^#define	TCPTV_KEEPCNT	8			\/* max probes before dr/
TCPTV_KEEPINTVL	../netinet/tcp_timer.h	/^#define	TCPTV_KEEPINTVL	( 75*PR_SLOWHZ)		\/* defau/
TCPTV_KEEP_IDLE	../netinet/tcp_timer.h	/^#define	TCPTV_KEEP_IDLE	(120*60*PR_SLOWHZ)	\/* dfl/
TCPTV_KEEP_INIT	../netinet/tcp_timer.h	/^#define	TCPTV_KEEP_INIT	( 75*PR_SLOWHZ)		\/* initi/
TCPTV_MIN	../netinet/tcp_timer.h	/^#define	TCPTV_MIN	(  1*PR_SLOWHZ)		\/* minimum all/
TCPTV_MSL	../netinet/tcp_timer.h	/^#define	TCPTV_MSL	( 30*PR_SLOWHZ)		\/* max seg lif/
TCPTV_PERSMAX	../netinet/tcp_timer.h	/^#define	TCPTV_PERSMAX	( 60*PR_SLOWHZ)		\/* maximum/
TCPTV_PERSMIN	../netinet/tcp_timer.h	/^#define	TCPTV_PERSMIN	(  5*PR_SLOWHZ)		\/* retrans/
TCPTV_REXMTMAX	../netinet/tcp_timer.h	/^#define	TCPTV_REXMTMAX	( 64*PR_SLOWHZ)		\/* max al/
TCPTV_SRTTBASE	../netinet/tcp_timer.h	/^#define	TCPTV_SRTTBASE	0			\/* base roundtrip time/
TCPTV_SRTTDFLT	../netinet/tcp_timer.h	/^#define	TCPTV_SRTTDFLT	(  3*PR_SLOWHZ)		\/* assume/
TCPT_2MSL	../netinet/tcp_timer.h	/^#define	TCPT_2MSL	3		\/* 2*msl quiet time timer */
TCPT_KEEP	../netinet/tcp_timer.h	/^#define	TCPT_KEEP	2		\/* keep alive *\/$/
TCPT_NTIMERS	../netinet/tcp_timer.h	/^#define	TCPT_NTIMERS	4$/
TCPT_PERSIST	../netinet/tcp_timer.h	/^#define	TCPT_PERSIST	1		\/* retransmit persistance/
TCPT_RANGESET	../netinet/tcp_timer.h	/^#define	TCPT_RANGESET(tv, value, tvmin, tvmax) { /
TCPT_REXMT	../netinet/tcp_timer.h	/^#define	TCPT_REXMT	0		\/* retransmit *\/$/
TCP_COMPAT_42	../netinet/tcp_var.h	/^#define TCP_COMPAT_42	\/* set if we have to intero/
TCP_ISSINCR	../netinet/tcp_seq.h	/^#define	TCP_ISSINCR	(125*1024)	\/* increment for t/
TCP_LINGERTIME	../netinet/tcp_timer.h	/^#define	TCP_LINGERTIME	120			\/* linger at most 2 /
TCP_MAXRXTSHIFT	../netinet/tcp_timer.h	/^#define	TCP_MAXRXTSHIFT	12			\/* maximum retransmi/
TCP_MAXSEG	../netinet/tcp.h	/^#define	TCP_MAXSEG	0x02	\/* set maximum segment si/
TCP_MSS	../netinet/tcp.h	/^#define	TCP_MSS	536$/
TCP_NDEBUG	../netinet/tcp_debug.h	/^#define	TCP_NDEBUG 100$/
TCP_NODELAY	../netinet/tcp.h	/^#define	TCP_NODELAY	0x01	\/* don't delay send to c/
TCP_NSTATES	../netinet/tcp_fsm.h	/^#define	TCP_NSTATES	11$/
TCP_REASS	../netinet/tcp_input.c	/^#define	TCP_REASS(tp, ti, m, so, flags) { \\$/
TCP_TTL	../netinet/tcp_timer.h	/^#define	TCP_TTL		30		\/* default time to live for /
TENSEC	../vaxuba/tmscp.c	/^#define TENSEC	(1000)$/
TEUNIT	../vaxuba/tm.c	/^#define	TEUNIT(dev)	(minor(dev)&03)$/
TF_ACKNOW	../netinet/tcp_var.h	/^#define	TF_ACKNOW	0x01		\/* ack peer immediately */
TF_DELACK	../netinet/tcp_var.h	/^#define	TF_DELACK	0x02		\/* ack, but try to delay /
TF_NODELAY	../netinet/tcp_var.h	/^#define	TF_NODELAY	0x04		\/* don't delay packets t/
TF_NOOPT	../netinet/tcp_var.h	/^#define	TF_NOOPT	0x08		\/* don't use tcp options */
TF_SENTFIN	../netinet/tcp_var.h	/^#define	TF_SENTFIN	0x10		\/* have sent FIN *\/$/
THREEWAYSHAKE	../netns/spp_usrreq.c	/^#define THREEWAYSHAKE$/
TH_ACK	../netinet/tcp.h	/^#define	TH_ACK	0x10$/
TH_FIN	../netinet/tcp.h	/^#define	TH_FIN	0x01$/
TH_PUSH	../netinet/tcp.h	/^#define	TH_PUSH	0x08$/
TH_RST	../netinet/tcp.h	/^#define	TH_RST	0x04$/
TH_SYN	../netinet/tcp.h	/^#define	TH_SYN	0x02$/
TH_URG	../netinet/tcp.h	/^#define	TH_URG	0x20$/
TILDE	../h/ioctl.h	/^#define		TILDE		0x00080000	\/* hazeltine tilde klu/
TIOCCBRK	../h/ioctl.h	/^#define	TIOCCBRK	_IO('t', 122)		\/* clear break bi/
TIOCCDTR	../h/ioctl.h	/^#define	TIOCCDTR	_IO('t', 120)		\/* clear data ter/
TIOCCONS	../h/ioctl.h	/^#define	TIOCCONS	_IO('t', 98)		\/* become virtual /
TIOCEXCL	../h/ioctl.h	/^#define	TIOCEXCL	_IO('t', 13)		\/* set exclusive u/
TIOCFLUSH	../h/ioctl.h	/^#define	TIOCFLUSH	_IOW('t', 16, int)	\/* flush buf/
TIOCGETC	../h/ioctl.h	/^#define	TIOCGETC	_IOR('t',18,struct tchars)\/* get/
TIOCGETD	../h/ioctl.h	/^#define	TIOCGETD	_IOR('t', 0, int)		\/* get line d/
TIOCGETP	../h/ioctl.h	/^#define	TIOCGETP	_IOR('t', 8,struct sgttyb)\/* get/
TIOCGLTC	../h/ioctl.h	/^#define	TIOCGLTC	_IOR('t',116,struct ltchars)\/* g/
TIOCGPGRP	../h/ioctl.h	/^#define	TIOCGPGRP	_IOR('t', 119, int)	\/* get pgrp/
TIOCGSIZE	../h/ioctl.h	/^#define	TIOCGSIZE	TIOCGWINSZ$/
TIOCGWINSZ	../h/ioctl.h	/^#define	TIOCGWINSZ	_IOR('t', 104, struct winsize)	/
TIOCHPCL	../h/ioctl.h	/^#define	TIOCHPCL	_IO('t', 2)		\/* hang up on last /
TIOCLBIC	../h/ioctl.h	/^#define	TIOCLBIC	_IOW('t', 126, int)	\/* bic local/
TIOCLBIS	../h/ioctl.h	/^#define	TIOCLBIS	_IOW('t', 127, int)	\/* bis local/
TIOCLGET	../h/ioctl.h	/^#define	TIOCLGET	_IOR('t', 124, int)	\/* get local/
TIOCLSET	../h/ioctl.h	/^#define	TIOCLSET	_IOW('t', 125, int)	\/* set entir/
TIOCMBIC	../h/ioctl.h	/^#define	TIOCMBIC	_IOW('t', 107, int)	\/* bic modem/
TIOCMBIS	../h/ioctl.h	/^#define	TIOCMBIS	_IOW('t', 108, int)	\/* bis modem/
TIOCMGET	../h/ioctl.h	/^#define	TIOCMGET	_IOR('t', 106, int)	\/* get all m/
TIOCMODG	../h/ioctl.h	/^#define	TIOCMODG	_IOR('t', 3, int)		\/* get modem /
TIOCMODS	../h/ioctl.h	/^#define	TIOCMODS	_IOW('t', 4, int)		\/* set modem /
TIOCMSET	../h/ioctl.h	/^#define	TIOCMSET	_IOW('t', 109, int)	\/* set all m/
TIOCM_CAR	../h/ioctl.h	/^#define		TIOCM_CAR	0100		\/* carrier detect *\/$/
TIOCM_CD	../h/ioctl.h	/^#define		TIOCM_CD	TIOCM_CAR$/
TIOCM_CTS	../h/ioctl.h	/^#define		TIOCM_CTS	0040		\/* clear to send *\/$/
TIOCM_DSR	../h/ioctl.h	/^#define		TIOCM_DSR	0400		\/* data set ready *\/$/
TIOCM_DTR	../h/ioctl.h	/^#define		TIOCM_DTR	0002		\/* data terminal ready */
TIOCM_LE	../h/ioctl.h	/^#define		TIOCM_LE	0001		\/* line enable *\/$/
TIOCM_RI	../h/ioctl.h	/^#define		TIOCM_RI	TIOCM_RNG$/
TIOCM_RNG	../h/ioctl.h	/^#define		TIOCM_RNG	0200		\/* ring *\/$/
TIOCM_RTS	../h/ioctl.h	/^#define		TIOCM_RTS	0004		\/* request to send *\/$/
TIOCM_SR	../h/ioctl.h	/^#define		TIOCM_SR	0020		\/* secondary receive *\/$/
TIOCM_ST	../h/ioctl.h	/^#define		TIOCM_ST	0010		\/* secondary transmit *\//
TIOCNOTTY	../h/ioctl.h	/^#define	TIOCNOTTY	_IO('t', 113)		\/* void tty asso/
TIOCNXCL	../h/ioctl.h	/^#define	TIOCNXCL	_IO('t', 14)		\/* reset exclusive/
TIOCOUTQ	../h/ioctl.h	/^#define	TIOCOUTQ	_IOR('t', 115, int)	\/* output qu/
TIOCPKT	../h/ioctl.h	/^#define	TIOCPKT		_IOW('t', 112, int)	\/* pty: set/
TIOCPKT_DATA	../h/ioctl.h	/^#define		TIOCPKT_DATA		0x00	\/* data packet *\/$/
TIOCPKT_DOSTOP	../h/ioctl.h	/^#define		TIOCPKT_DOSTOP		0x20	\/* now do ^S ^Q *\//
TIOCPKT_FLUSHREAD	../h/ioctl.h	/^#define		TIOCPKT_FLUSHREAD	0x01	\/* flush packet */
TIOCPKT_FLUSHWRITE	../h/ioctl.h	/^#define		TIOCPKT_FLUSHWRITE	0x02	\/* flush packet /
TIOCPKT_NOSTOP	../h/ioctl.h	/^#define		TIOCPKT_NOSTOP		0x10	\/* no more ^S, ^Q */
TIOCPKT_START	../h/ioctl.h	/^#define		TIOCPKT_START		0x08	\/* start output *\/$/
TIOCPKT_STOP	../h/ioctl.h	/^#define		TIOCPKT_STOP		0x04	\/* stop output *\/$/
TIOCREMOTE	../h/ioctl.h	/^#define	TIOCREMOTE	_IOW('t', 105, int)	\/* remote /
TIOCSBRK	../h/ioctl.h	/^#define	TIOCSBRK	_IO('t', 123)		\/* set break bit /
TIOCSDTR	../h/ioctl.h	/^#define	TIOCSDTR	_IO('t', 121)		\/* set data termi/
TIOCSETC	../h/ioctl.h	/^#define	TIOCSETC	_IOW('t',17,struct tchars)\/* set/
TIOCSETD	../h/ioctl.h	/^#define	TIOCSETD	_IOW('t', 1, int)		\/* set line d/
TIOCSETN	../h/ioctl.h	/^#define	TIOCSETN	_IOW('t',10,struct sgttyb)\/* as /
TIOCSETP	../h/ioctl.h	/^#define	TIOCSETP	_IOW('t', 9,struct sgttyb)\/* set/
TIOCSLTC	../h/ioctl.h	/^#define	TIOCSLTC	_IOW('t',117,struct ltchars)\/* s/
TIOCSPGRP	../h/ioctl.h	/^#define	TIOCSPGRP	_IOW('t', 118, int)	\/* set pgrp/
TIOCSSIZE	../h/ioctl.h	/^#define	TIOCSSIZE	TIOCSWINSZ$/
TIOCSTART	../h/ioctl.h	/^#define	TIOCSTART	_IO('t', 110)		\/* start output,/
TIOCSTI	../h/ioctl.h	/^#define	TIOCSTI		_IOW('t', 114, char)	\/* simulate/
TIOCSTOP	../h/ioctl.h	/^#define	TIOCSTOP	_IO('t', 111)		\/* stop output, l/
TIOCSWINSZ	../h/ioctl.h	/^#define	TIOCSWINSZ	_IOW('t', 103, struct winsize)	/
TIOCUCNTL	../h/ioctl.h	/^#define	TIOCUCNTL	_IOW('t', 102, int)	\/* pty: set/
TJUNIT	../vaxuba/ut.c	/^#define	TJUNIT(dev)	(minor(dev)&03)$/
TMER_BGL	../vaxuba/tmreg.h	/^#define	TMER_BGL	0004000		\/* bus grant late *\/$/
TMER_BITS	../vaxuba/tmreg.h	/^#define	TMER_BITS	\\$/
TMER_BOT	../vaxuba/tmreg.h	/^#define	TMER_BOT	0000040		\/* at beginning of tape/
TMER_BTE	../vaxuba/tmreg.h	/^#define	TMER_BTE	0000400		\/* bad tape error *\/$/
TMER_CH7	../vaxuba/tmreg.h	/^#define	TMER_CH7	0000020		\/* 7 channel tape *\/$/
TMER_CRE	../vaxuba/tmreg.h	/^#define	TMER_CRE	0020000		\/* cyclic redundancy er/
TMER_EOF	../vaxuba/tmreg.h	/^#define	TMER_EOF	0040000		\/* end of file *\/$/
TMER_EOT	../vaxuba/tmreg.h	/^#define	TMER_EOT	0002000		\/* at end of tape *\/$/
TMER_HARD	../vaxuba/tmreg.h	/^#define	TMER_HARD	(TMER_ILC|TMER_EOT)$/
TMER_ILC	../vaxuba/tmreg.h	/^#define	TMER_ILC	0100000		\/* illegal command *\/$/
TMER_NXM	../vaxuba/tmreg.h	/^#define	TMER_NXM	0000200		\/* non-existant memory /
TMER_PAE	../vaxuba/tmreg.h	/^#define	TMER_PAE	0010000		\/* parity error *\/$/
TMER_RLE	../vaxuba/tmreg.h	/^#define	TMER_RLE	0001000		\/* record length error /
TMER_RWS	../vaxuba/tmreg.h	/^#define	TMER_RWS	0000002		\/* tape unit rewinding /
TMER_SDWN	../vaxuba/tmreg.h	/^#define	TMER_SDWN	0000010		\/* gap settling down */
TMER_SELR	../vaxuba/tmreg.h	/^#define	TMER_SELR	0000100		\/* tape unit properly /
TMER_SOFT	../vaxuba/tmreg.h	/^#define	TMER_SOFT	(TMER_CRE|TMER_PAE|TMER_BGL|TMER/
TMER_TUR	../vaxuba/tmreg.h	/^#define	TMER_TUR	0000001		\/* tape unit ready *\/$/
TMER_WRL	../vaxuba/tmreg.h	/^#define	TMER_WRL	0000004		\/* tape unit write prot/
TMO_CALL_PENDING	../vaxif/if_ddnvar.h	/^#define	TMO_CALL_PENDING (180\/DDN_TIMEOUT)	\/* ca/
TMO_CLR_PENDING	../vaxif/if_ddnvar.h	/^#define	TMO_CLR_PENDING	 ( 30\/DDN_TIMEOUT)	\/* cl/
TMO_DATA_IDLE	../vaxif/if_ddnvar.h	/^#define	TMO_DATA_IDLE	 ( 30\/DDN_TIMEOUT)	\/* idle/
TMO_OFF	../vaxif/if_ddnvar.h	/^#define	TMO_OFF		   0			\/* timer off		*\/$/
TMO_RESTART	../vaxif/if_ddnvar.h	/^#define	TMO_RESTART	 ( 90\/DDN_TIMEOUT)	\/* restar/
TMSCPCTLR	../vaxuba/tmscp.c	/^#define TMSCPCTLR(dev)	(utoctlr[TMSUNIT(dev)])$/
TMSCP_DI	../vaxuba/tmscpreg.h	/^#define	TMSCP_DI		0000400	\/* controller implement/
TMSCP_ERR	../vaxuba/tmscpreg.h	/^#define	TMSCP_ERR		0100000	\/* error bit *\/$/
TMSCP_GO	../vaxuba/tmscpreg.h	/^#define	TMSCP_GO		0000001	\/* start operation, aft/
TMSCP_IE	../vaxuba/tmscpreg.h	/^#define	TMSCP_IE		0000200	\/* interrupt enable *\//
TMSCP_INT	../vaxuba/tmscpreg.h	/^#define	TMSCP_INT	0x40000000	\/* allow interrupt o/
TMSCP_LF	../vaxuba/tmscpreg.h	/^#define	TMSCP_LF		0000002	\/* host requests last f/
TMSCP_MAP	../vaxuba/tmscpreg.h	/^#define	TMSCP_MAP	0x80000000	\/* modifier for mapp/
TMSCP_MP	../vaxuba/tmscpreg.h	/^#define	TMSCP_MP		0000100	\/* port supports addres/
TMSCP_NV	../vaxuba/tmscpreg.h	/^#define	TMSCP_NV		0002000	\/* no host settable int/
TMSCP_OD	../vaxuba/tmscpreg.h	/^#define	TMSCP_OD		0000200	\/* port allows odd host/
TMSCP_OWN	../vaxuba/tmscpreg.h	/^#define	TMSCP_OWN	0x80000000	\/* port owns this de/
TMSCP_PI	../vaxuba/tmscpreg.h	/^#define	TMSCP_PI		0000001	\/* host requests adapte/
TMSCP_QB	../vaxuba/tmscpreg.h	/^#define	TMSCP_QB		0001000	\/* controller supports /
TMSCP_STEP1	../vaxuba/tmscpreg.h	/^#define	TMSCP_STEP1	0004000	\/* step 1 has started/
TMSCP_STEP2	../vaxuba/tmscpreg.h	/^#define	TMSCP_STEP2	0010000	\/* step 2 has started/
TMSCP_STEP3	../vaxuba/tmscpreg.h	/^#define	TMSCP_STEP3	0020000	\/* step 3 has started/
TMSCP_STEP4	../vaxuba/tmscpreg.h	/^#define	TMSCP_STEP4	0040000	\/* step 4 has started/
TMSUNIT	../vaxuba/tmscp.c	/^#define	TMSUNIT(dev)	(minor(dev)&03)$/
TMS_BSF	../vaxuba/tmscp.c	/^#define TMS_BSF		2		\/* backward space file *\/$/
TMS_BSR	../vaxuba/tmscp.c	/^#define TMS_BSR		4		\/* backward space record *\/$/
TMS_CACHE	../vaxuba/tmscp.c	/^#define TMS_CACHE	8		\/* enable cache *\/$/
TMS_CSE	../vaxuba/tmscp.c	/^#define TMS_CSE		10		\/* clear serious exception */
TMS_FSF	../vaxuba/tmscp.c	/^#define TMS_FSF		1		\/* forward space file *\/$/
TMS_FSR	../vaxuba/tmscp.c	/^#define TMS_FSR		3		\/* forward space record *\/$/
TMS_HIDENSITY	../vaxuba/tmscp.c	/^#define TMS_HIDENSITY	12		\/* set unit to high den/
TMS_LOWDENSITY	../vaxuba/tmscp.c	/^#define TMS_LOWDENSITY	11		\/* set unit to low den/
TMS_NOCACHE	../vaxuba/tmscp.c	/^#define TMS_NOCACHE	9		\/* disable cache *\/$/
TMS_OFFL	../vaxuba/tmscp.c	/^#define TMS_OFFL	6		\/* rewind tape & mark unit of/
TMS_PRI	../vaxuba/tmscp.c	/^#define	TMS_PRI	LOG_INFO$/
TMS_REW	../vaxuba/tmscp.c	/^#define TMS_REW		5		\/* rewind tape *\/$/
TMS_SENSE	../vaxuba/tmscp.c	/^#define TMS_SENSE	7		\/* noop - do a get unit stat/
TMS_WRITM	../vaxuba/tmscp.c	/^#define TMS_WRITM	0		\/* write tape mark *\/$/
TMUNIT	../vaxuba/tm.c	/^#define	TMUNIT(dev)	(tetotm[TEUNIT(dev)])$/
TM_CUR	../vaxuba/tmreg.h	/^#define	TM_CUR		0000200		\/* control unit is ready/
TM_D800	../vaxuba/tmreg.h	/^#define	TM_D800		0060000		\/* select 800 bpi densi/
TM_DCLR	../vaxuba/tmreg.h	/^#define	TM_DCLR		0010000		\/* drive clear *\/$/
TM_ERR	../vaxuba/tmreg.h	/^#define	TM_ERR		0100000		\/* drive error summary */
TM_GO	../vaxuba/tmreg.h	/^#define	TM_GO		0000001$/
TM_IE	../vaxuba/tmreg.h	/^#define	TM_IE		0000100		\/* interrupt enable *\/$/
TM_OFFL	../vaxuba/tmreg.h	/^#define	TM_OFFL		0000000		\/* offline *\/$/
TM_RCOM	../vaxuba/tmreg.h	/^#define	TM_RCOM		0000002		\/* read *\/$/
TM_REW	../vaxuba/tmreg.h	/^#define	TM_REW		0000016		\/* rewind *\/$/
TM_SENSE	../vaxuba/tmreg.h	/^#define	TM_SENSE	TM_IE		\/* sense (internal to dri/
TM_SFORW	../vaxuba/tmreg.h	/^#define	TM_SFORW	0000010		\/* space forward *\/$/
TM_SREV	../vaxuba/tmreg.h	/^#define	TM_SREV		0000012		\/* space backwards *\/$/
TM_WCOM	../vaxuba/tmreg.h	/^#define	TM_WCOM		0000004		\/* write *\/$/
TM_WEOF	../vaxuba/tmreg.h	/^#define	TM_WEOF		0000006		\/* write-eof *\/$/
TM_WIRG	../vaxuba/tmreg.h	/^#define	TM_WIRG		0000014		\/* write with xtra inte/
TOCONS	../sys/subr_prf.c	/^#define TOCONS	0x1$/
TODR	../vax/mtpr.h	/^#define	TODR	0x1b		\/* time of year (day) *\/$/
TODRZERO	../vax/clock.h	/^#define	TODRZERO	((unsigned)(1<<28))$/
TOLOG	../sys/subr_prf.c	/^#define TOLOG	0x4$/
TOSTOP	../h/ioctl.h	/^#define		TOSTOP		0x00400000	\/* SIGSTOP on backgro/
TOTTY	../sys/subr_prf.c	/^#define TOTTY	0x2$/
TOUT	../vaxuba/lp.c	/^#define	TOUT		2	\/* timeout is active *\/$/
TRANS_FRAME_END	../net/if_sl.c	/^#define TRANS_FRAME_END	 	0334		\/* transposed fra/
TRANS_FRAME_ESCAPE	../net/if_sl.c	/^#define TRANS_FRAME_ESCAPE 	0335		\/* transposed f/
TRCSIZ	../h/trace.h	/^#define	TRCSIZ		4096$/
TRIPLE	../sys/ufs_inode.c	/^#define	TRIPLE	2	\/* index of triple indirect bloc/
TRUE	../vaxuba/npreg.h	/^#define TRUE		1$/
TR_BREADHIT	../h/trace.h	/^#define	TR_BREADHIT	0	\/* buffer read found in cac/
TR_BREADHITRA	../h/trace.h	/^#define	TR_BREADHITRA	3	\/* buffer read-ahead foun/
TR_BREADMISS	../h/trace.h	/^#define	TR_BREADMISS	1	\/* buffer read not in cach/
TR_BREADMISSRA	../h/trace.h	/^#define	TR_BREADMISSRA	4	\/* buffer read-ahead not/
TR_BREALLOC	../h/trace.h	/^#define	TR_BREALLOC	8	\/* expand\/contract a buffe/
TR_BRELSE	../h/trace.h	/^#define	TR_BRELSE	7	\/* brelse *\/$/
TR_BWRITE	../h/trace.h	/^#define	TR_BWRITE	2	\/* buffer written *\/$/
TR_CACHEFOD	../h/trace.h	/^#define	TR_CACHEFOD	31	\/* fod in file system cach/
TR_EINTRANS	../h/trace.h	/^#define	TR_EINTRANS	21	\/* page intransit wait don/
TR_EWAITMEM	../h/trace.h	/^#define	TR_EWAITMEM	27	\/* end memory wait in page/
TR_EXFOD	../h/trace.h	/^#define	TR_EXFOD	29	\/* exec fod page fault *\/$/
TR_FRECLAIM	../h/trace.h	/^#define	TR_FRECLAIM	22	\/* reclaim from free list /
TR_INTRANS	../h/trace.h	/^#define	TR_INTRANS	20	\/* page intransit block *\//
TR_MALL	../h/trace.h	/^#define	TR_MALL		10	\/* memory allocated *\/$/
TR_NFLAGS	../h/trace.h	/^#define	TR_NFLAGS	100	\/* generous *\/$/
TR_PGINDONE	../h/trace.h	/^#define	TR_PGINDONE	33	\/* page in done *\/$/
TR_RECLAIM	../h/trace.h	/^#define	TR_RECLAIM	23	\/* reclaim from loop *\/$/
TR_STAMP	../h/trace.h	/^#define	TR_STAMP	45	\/* user said vtrace(VTR_STAMP/
TR_SWAPIN	../h/trace.h	/^#define	TR_SWAPIN	32	\/* drum page fault *\/$/
TR_SWAPIO	../h/trace.h	/^#define	TR_SWAPIO	34	\/* swap i\/o request arrives/
TR_VADVISE	../h/trace.h	/^#define	TR_VADVISE	40	\/* vadvise occurred with <a/
TR_VRFOD	../h/trace.h	/^#define	TR_VRFOD	30	\/* vread fod page fault *\/$/
TR_WAITMEM	../h/trace.h	/^#define	TR_WAITMEM	26	\/* wait for memory in pagei/
TR_XFODHIT	../h/trace.h	/^#define	TR_XFODHIT	6	\/* exe fod read *\/$/
TR_XFODMISS	../h/trace.h	/^#define	TR_XFODMISS	5	\/* exe fod read *\/$/
TR_XIFREC	../h/trace.h	/^#define	TR_XIFREC	25	\/* reclaim from free list in/
TR_XSFREC	../h/trace.h	/^#define	TR_XSFREC	24	\/* reclaim from free list in/
TR_ZFOD	../h/trace.h	/^#define	TR_ZFOD		28	\/* zfod page fault *\/$/
TSSR_BITS	../vaxuba/tsreg.h	/^#define	TSSR_BITS	\\$/
TSUNIT	../vaxuba/ts.c	/^#define	TSUNIT(dev)	(minor(dev)&03)$/
TSXS0_BITS	../vaxuba/tsreg.h	/^#define	TSXS0_BITS	\\$/
TSXS1_BITS	../vaxuba/tsreg.h	/^#define	TSXS1_BITS	\\$/
TSXS2_BITS	../vaxuba/tsreg.h	/^#define	TSXS2_BITS	\\$/
TSXS3_BITS	../vaxuba/tsreg.h	/^#define	TSXS3_BITS	\\$/
TS_ACK	../vaxuba/tsreg.h	/^#define	TS_ACK		0100000		\/* ack - release command/
TS_ALERT	../vaxuba/tsreg.h	/^#define	TS_ALERT 004		\/* tape status alert *\/$/
TS_ASLEEP	../h/tty.h	/^#define	TS_ASLEEP	0x000040	\/* wakeup when output /
TS_ASYNC	../h/tty.h	/^#define	TS_ASYNC	0x004000	\/* tty in async i\/o mo/
TS_ATTN	../vaxuba/tsreg.h	/^#define	TS_ATTN	002		\/* attention *\/$/
TS_BKSL	../h/tty.h	/^#define	TS_BKSL		0x010000	\/* state for lowercase /
TS_BOT	../vaxuba/tsreg.h	/^#define	TS_BOT	0000002		\/* beginning of tape *\/$/
TS_BPE	../vaxuba/tsreg.h	/^#define	TS_BPE	0020000		\/* serial bus parity erro/
TS_BUSY	../h/tty.h	/^#define	TS_BUSY		0x000020	\/* output in progress */
TS_CAF	../vaxuba/tsreg.h	/^#define	TS_CAF	0010000		\/* capstan acceleration f/
TS_CARR_ON	../h/tty.h	/^#define	TS_CARR_ON	0x000010	\/* software copy of c/
TS_CNTTB	../h/tty.h	/^#define	TS_CNTTB	0x200000	\/* counting tab width; /
TS_COR	../vaxuba/tsreg.h	/^#define	TS_COR	0020000		\/* correctable data *\/$/
TS_CRF	../vaxuba/tsreg.h	/^#define	TS_CRF	0000020		\/* capstan response fail /
TS_CRS	../vaxuba/tsreg.h	/^#define	TS_CRS	0010000		\/* crease detected *\/$/
TS_CVC	../vaxuba/tsreg.h	/^#define	TS_CVC		0040000		\/* clear volume check */
TS_DBF	../vaxuba/tsreg.h	/^#define	TS_DBF	0002000		\/* deskew buffer full *\//
TS_DCK	../vaxuba/tsreg.h	/^#define	TS_DCK	0000010		\/* density check *\/$/
TS_DLT	../vaxuba/tsreg.h	/^#define	TS_DLT	0100000		\/* data late *\/$/
TS_DT	../vaxuba/tsreg.h	/^#define	TS_DT	0000377		\/* dead tracks *\/$/
TS_DTP	../vaxuba/tsreg.h	/^#define	TS_DTP	0000400		\/* dead track parity *\/$/
TS_EAI	../vaxuba/tsreg.h	/^#define	TS_EAI	0040		\/* enable attention interrup/
TS_ENB	../vaxuba/tsreg.h	/^#define	TS_ENB	0100		\/* enable skip stop BOT *\/$/
TS_EOT	../vaxuba/tsreg.h	/^#define	TS_EOT	0000001		\/* end of tape *\/$/
TS_ERASE	../h/tty.h	/^#define	TS_ERASE	0x040000	\/* within a \\...\/ for/
TS_ERI	../vaxuba/tsreg.h	/^#define	TS_ERI	0020		\/* enable message buffer rel/
TS_ESS	../vaxuba/tsreg.h	/^#define	TS_ESS	0200		\/* enable skip tape marks st/
TS_FATAL	../vaxuba/tsreg.h	/^#define	TS_FATAL 016		\/* fatal error *\/$/
TS_FLUSH	../h/tty.h	/^#define	TS_FLUSH	0x000008	\/* outq has been flushe/
TS_FTC	../vaxuba/tsreg.h	/^#define	TS_FTC	0000060		\/* fatal termination clas/
TS_HUPCLS	../h/tty.h	/^#define	TS_HUPCLS	0x000200	\/* hang up upon last c/
TS_IE	../vaxuba/tsreg.h	/^#define	TS_IE		0000200$/
TS_IED	../vaxuba/tsreg.h	/^#define	TS_IED	0000020		\/* invalid end of data */
TS_IES	../vaxuba/tsreg.h	/^#define	TS_IES	0000040		\/* interrupt enable statu/
TS_ILA	../vaxuba/tsreg.h	/^#define	TS_ILA	0000400		\/* illegal address *\/$/
TS_ILC	../vaxuba/tsreg.h	/^#define	TS_ILC	0001000		\/* illegal command *\/$/
TS_IPO	../vaxuba/tsreg.h	/^#define	TS_IPO	0000040		\/* invalid postamble *\/$/
TS_IPR	../vaxuba/tsreg.h	/^#define	TS_IPR	0000200		\/* invalid preamble *\/$/
TS_ISOPEN	../h/tty.h	/^#define	TS_ISOPEN	0x000004	\/* device is open *\/$/
TS_LET	../vaxuba/tsreg.h	/^#define	TS_LET	0020000		\/* logical end of tape */
TS_LMX	../vaxuba/tsreg.h	/^#define	TS_LMX	0000200		\/* limit exceeded *\/$/
TS_LNCH	../h/tty.h	/^#define	TS_LNCH		0x080000	\/* next character is li/
TS_LOCAL	../h/tty.h	/^#define	TS_LOCAL	(TS_BKSL|TS_QUOT|TS_ERASE|TS_LNCH/
TS_LXS	../vaxuba/tsreg.h	/^#define	TS_LXS	0000002		\/* limit exceeded statica/
TS_MEC	../vaxuba/tsreg.h	/^#define	TS_MEC	0177400		\/* microdiagnostic error /
TS_MOT	../vaxuba/tsreg.h	/^#define	TS_MOT	0000200		\/* capstan is moving *\/$/
TS_MTE	../vaxuba/tsreg.h	/^#define	TS_MTE	0000001		\/* multitrack error *\/$/
TS_NBA	../vaxuba/tsreg.h	/^#define	TS_NBA	0002000		\/* need buffer address */
TS_NBIO	../h/tty.h	/^#define	TS_NBIO		0x002000	\/* tty in non-blocking /
TS_NEF	../vaxuba/tsreg.h	/^#define	TS_NEF	0002000		\/* non-executable functio/
TS_NOI	../vaxuba/tsreg.h	/^#define	TS_NOI	0000004		\/* noise record *\/$/
TS_NRZI	../vaxuba/tsreg.h	/^#define	TS_NRZI	0001		\/* select NRZI (800bpi) rat/
TS_NXM	../vaxuba/tsreg.h	/^#define	TS_NXM	0004000		\/* nonexistant memory *\//
TS_OFFL	../vaxuba/tsreg.h	/^#define	TS_OFFL		0000412		\/* unload *\/$/
TS_OFL	../vaxuba/tsreg.h	/^#define	TS_OFL	0000100		\/* off-line *\/$/
TS_ONL	../vaxuba/tsreg.h	/^#define	TS_ONL	0000100		\/* on-line *\/$/
TS_OPI	../vaxuba/tsreg.h	/^#define	TS_OPI	0000100		\/* operation incomplete */
TS_OPM	../vaxuba/tsreg.h	/^#define	TS_OPM	0100000		\/* operation in progress /
TS_PED	../vaxuba/tsreg.h	/^#define	TS_PED	0000010		\/* phase-encoded drive */
TS_POL	../vaxuba/tsreg.h	/^#define	TS_POL	0000004		\/* postamble long *\/$/
TS_POS	../vaxuba/tsreg.h	/^#define	TS_POS	0000010		\/* postamble short *\/$/
TS_QUOT	../h/tty.h	/^#define	TS_QUOT		0x020000	\/* last character input/
TS_RCOLL	../h/tty.h	/^#define	TS_RCOLL	0x000800	\/* collision in read se/
TS_RCOM	../vaxuba/tsreg.h	/^#define	TS_RCOM		0000001$/
TS_RECNM	../vaxuba/tsreg.h	/^#define	TS_RECNM 012		\/* recoverable error, no ta/
TS_RECOV	../vaxuba/tsreg.h	/^#define	TS_RECOV 010		\/* recoverable error *\/$/
TS_REJECT	../vaxuba/tsreg.h	/^#define	TS_REJECT 06		\/* function reject *\/$/
TS_REREAD	../vaxuba/tsreg.h	/^#define	TS_REREAD	0001001		\/* read data retry *\//
TS_RETRY	../vaxuba/tsreg.h	/^#define	TS_RETRY	0001000		\/* retry bit for read a/
TS_REV	../vaxuba/tsreg.h	/^#define	TS_REV	0000040		\/* reverse *\/$/
TS_REW	../vaxuba/tsreg.h	/^#define	TS_REW		0002010		\/* rewind *\/$/
TS_REWRITE	../vaxuba/tsreg.h	/^#define	TS_REWRITE	0001005		\/* write data retry */
TS_RIB	../vaxuba/tsreg.h	/^#define	TS_RIB	0000001		\/* reverse into BOT *\/$/
TS_RLL	../vaxuba/tsreg.h	/^#define	TS_RLL	0010000		\/* record length long *\//
TS_RLS	../vaxuba/tsreg.h	/^#define	TS_RLS	0040000		\/* record length short */
TS_RMR	../vaxuba/tsreg.h	/^#define	TS_RMR	0010000		\/* register modification /
TS_SC	../vaxuba/tsreg.h	/^#define	TS_SC	0100000		\/* special condition (erro/
TS_SCK	../vaxuba/tsreg.h	/^#define	TS_SCK	0001000		\/* speed check *\/$/
TS_SENSE	../vaxuba/tsreg.h	/^#define	TS_SENSE	0000017		\/* get status *\/$/
TS_SETCHR	../vaxuba/tsreg.h	/^#define	TS_SETCHR	0000004		\/* set characteristics/
TS_SFORW	../vaxuba/tsreg.h	/^#define	TS_SFORW	0000010		\/* forward space record/
TS_SFORWF	../vaxuba/tsreg.h	/^#define	TS_SFORWF	0001010		\/* forward space file /
TS_SIP	../vaxuba/tsreg.h	/^#define	TS_SIP	0040000		\/* silo parity error *\/$/
TS_SPE	../vaxuba/tsreg.h	/^#define	TS_SPE	0020000		\/* serial bus parity erro/
TS_SREV	../vaxuba/tsreg.h	/^#define	TS_SREV		0000410		\/* reverse space record/
TS_SREVF	../vaxuba/tsreg.h	/^#define	TS_SREVF	0001410		\/* reverse space file */
TS_SSR	../vaxuba/tsreg.h	/^#define	TS_SSR	0000200		\/* subsytem ready *\/$/
TS_SUCC	../vaxuba/tsreg.h	/^#define	TS_SUCC	000		\/* successful termination */
TS_SYN	../vaxuba/tsreg.h	/^#define	TS_SYN	0000100		\/* synchronization failur/
TS_TBLOCK	../h/tty.h	/^#define	TS_TBLOCK	0x000400	\/* tandem queue blocke/
TS_TC	../vaxuba/tsreg.h	/^#define	TS_TC	0000016		\/* termination class *\/$/
TS_TIG	../vaxuba/tsreg.h	/^#define	TS_TIG	0004000		\/* trash in the gap *\/$/
TS_TIMEOUT	../h/tty.h	/^#define	TS_TIMEOUT	0x000001	\/* delay timeout in p/
TS_TMK	../vaxuba/tsreg.h	/^#define	TS_TMK	0100000		\/* tape mark detected *\//
TS_TTSTOP	../h/tty.h	/^#define	TS_TTSTOP	0x000100	\/* output stopped by c/
TS_TYPEN	../h/tty.h	/^#define	TS_TYPEN	0x100000	\/* retyping suspended i/
TS_UNC	../vaxuba/tsreg.h	/^#define	TS_UNC	0000002		\/* uncorrectable data *\//
TS_UNREC	../vaxuba/tsreg.h	/^#define	TS_UNREC 014		\/* unrecoverable error *\/$/
TS_UPE	../vaxuba/tsreg.h	/^#define	TS_UPE	0040000		\/* Unibus parity error */
TS_VCK	../vaxuba/tsreg.h	/^#define	TS_VCK	0000020		\/* volume check *\/$/
TS_WCF	../vaxuba/tsreg.h	/^#define	TS_WCF	0002000		\/* write card fail *\/$/
TS_WCOLL	../h/tty.h	/^#define	TS_WCOLL	0x001000	\/* collision in write s/
TS_WCOM	../vaxuba/tsreg.h	/^#define	TS_WCOM		0000005$/
TS_WEOF	../vaxuba/tsreg.h	/^#define	TS_WEOF		0000011		\/* write tape mark *\/$/
TS_WLE	../vaxuba/tsreg.h	/^#define	TS_WLE	0004000		\/* write lock error *\/$/
TS_WLK	../vaxuba/tsreg.h	/^#define	TS_WLK	0000004		\/* write locked *\/$/
TS_WOPEN	../h/tty.h	/^#define	TS_WOPEN	0x000002	\/* waiting for open to /
TS_XCLUDE	../h/tty.h	/^#define	TS_XCLUDE	0x000080	\/* exclusive-use flag /
TS_XMEM	../vaxuba/tsreg.h	/^#define	TS_XMEM	0001400		\/* Unibus xmem bits *\/$/
TTHIWAT	../h/tty.h	/^#define	TTHIWAT(tp)	tthiwat[(tp)->t_ospeed&TTMASK]/
TTIPRI	../h/tty.h	/^#define	TTIPRI	28$/
TTLOWAT	../h/tty.h	/^#define	TTLOWAT(tp)	ttlowat[(tp)->t_ospeed&TTMASK]/
TTMASK	../h/tty.h	/^#define	TTMASK	15$/
TTOPRI	../h/tty.h	/^#define	TTOPRI	29$/
TTYHOG	../h/tty.h	/^#define	TTYHOG	255$/
TUF_CMD	../vax/rsp.h	/^#define	TUF_CMD		2		\/* command packet *\/$/
TUF_CONT	../vax/rsp.h	/^#define	TUF_CONT	020		\/* continue *\/$/
TUF_DATA	../vax/rsp.h	/^#define	TUF_DATA	1		\/* data packet *\/$/
TUF_INITF	../vax/rsp.h	/^#define	TUF_INITF	4		\/* initialize *\/$/
TUF_XOFF	../vax/rsp.h	/^#define	TUF_XOFF	023		\/* flow control *\/$/
TUMD_WRV	../vax/rsp.h	/^#define TUMD_WRV        1               \/* write /
TUOP_DIAGNOSE	../vax/rsp.h	/^#define TUOP_DIAGNOSE	7		\/* run micro-diagnostics/
TUOP_END	../vax/rsp.h	/^#define	TUOP_END	0100		\/* end packet *\/$/
TUOP_INIT	../vax/rsp.h	/^#define	TUOP_INIT	1		\/* initialize *\/$/
TUOP_NOOP	../vax/rsp.h	/^#define	TUOP_NOOP	0		\/* no operation *\/$/
TUOP_READ	../vax/rsp.h	/^#define	TUOP_READ	2		\/* read block *\/$/
TUOP_SEEK	../vax/rsp.h	/^#define	TUOP_SEEK	5		\/* seek to block *\/$/
TUOP_WRITE	../vax/rsp.h	/^#define	TUOP_WRITE	3		\/* write block *\/$/
TUSW_MRSP	../vax/rsp.h	/^#define	TUSW_MRSP	010		\/* use Modified RSP *\/$/
TUS_CHKERR	../vax/rsp.h	/^#define	TUS_CHKERR	14	\/* checksum error in pseudo/
TUS_GET	../vax/rsp.h	/^#define	TUS_GET		11	\/* reading an entire packet */
TUS_GETC	../vax/rsp.h	/^#define	TUS_GETC	10	\/* reading checksum *\/$/
TUS_GETD	../vax/rsp.h	/^#define	TUS_GETD	9	\/* reading data *\/$/
TUS_GETH	../vax/rsp.h	/^#define	TUS_GETH	8	\/* reading header *\/$/
TUS_IDLE	../vax/rsp.h	/^#define	TUS_IDLE	2	\/* initialized, no transfer in/
TUS_INIT1	../vax/rsp.h	/^#define	TUS_INIT1	0	\/* sending nulls *\/$/
TUS_INIT2	../vax/rsp.h	/^#define	TUS_INIT2	1	\/* sending inits *\/$/
TUS_NSTATES	../vax/rsp.h	/^#define	TUS_NSTATES	15$/
TUS_RCVERR	../vax/rsp.h	/^#define	TUS_RCVERR	13	\/* receiver error in pseudo/
TUS_SENDC	../vax/rsp.h	/^#define	TUS_SENDC	5	\/* sending checksum *\/$/
TUS_SENDD	../vax/rsp.h	/^#define	TUS_SENDD	4	\/* sending data *\/$/
TUS_SENDH	../vax/rsp.h	/^#define	TUS_SENDH	3	\/* sending header *\/$/
TUS_SENDR	../vax/rsp.h	/^#define	TUS_SENDR	6	\/* sending read command packe/
TUS_SENDW	../vax/rsp.h	/^#define	TUS_SENDW	7	\/* sending write command pack/
TUS_WAIT	../vax/rsp.h	/^#define	TUS_WAIT	12	\/* waiting for continue *\/$/
TUUNIT	../vaxmba/ht.c	/^#define	TUUNIT(dev)	(minor(dev)&03)$/
TWOSB	../vaxuba/dhreg.h	/^#define	TWOSB	04$/
TXCS	../vax/mtpr.h	/^#define	TXCS	0x22		\/* console transmitter control/
TXCS1	../vax/mtpr.h	/^#define	TXCS1	0x52		\/* transmit csr, console line/
TXCS2	../vax/mtpr.h	/^#define	TXCS2	0x56$/
TXCS3	../vax/mtpr.h	/^#define	TXCS3	0x5a$/
TXCS_CTERM	../vax/cons.h	/^#define	TXCS_CTERM	0x00010000	\/*	console terminal/
TXCS_EMM	../vax/cons.h	/^#define	TXCS_EMM	0x00040000	\/*	Environmental Moni/
TXCS_ID	../vax/cons.h	/^#define	TXCS_ID		0x00000300	\/* interrupt ID field/
TXCS_IE	../vax/cons.h	/^#define	TXCS_IE		0x00000040	\/* transmitter interr/
TXCS_LCONS	../vax/cons.h	/^#define	TXCS_LCONS	0x00080000	\/*	Logical console /
TXCS_RDY	../vax/cons.h	/^#define	TXCS_RDY	0x00000080	\/* transmitter ready /
TXCS_RTERM	../vax/cons.h	/^#define	TXCS_RTERM	0x00020000	\/*	remote diagnosti/
TXCS_TXMASK	../vax/cons.h	/^#define	TXCS_TXMASK	0x00ff0000	\/* transmit enable/
TXCS_WMASK	../vax/cons.h	/^#define	TXCS_WMASK	0x00008000	\/* enable mask writ/
TXDB	../vax/mtpr.h	/^#define	TXDB	0x23		\/* console transmitter data bu/
TXDB1	../vax/mtpr.h	/^#define	TXDB1	0x53		\/* transmit data buffer, cons/
TXDB2	../vax/mtpr.h	/^#define	TXDB2	0x57$/
TXDB3	../vax/mtpr.h	/^#define	TXDB3	0x5b$/
TXDB_BOOT	../vax/cons.h	/^#define	TXDB_BOOT	0x02		\/* reboot *\/$/
TXDB_CCSI	../vax/cons.h	/^#define	TXDB_CCSI	0x04		\/* clear cold-start inhib/
TXDB_CONS	../vax/cons.h	/^#define	TXDB_CONS	0x00000f00	\/* channel id for co/
TXDB_CWSI	../vax/cons.h	/^#define	TXDB_CWSI	0x03		\/* clear warm start inhib/
TXDB_DATA	../vax/cons.h	/^#define	TXDB_DATA	0x000000ff	\/* transmitter byte /
TXDB_DONE	../vax/cons.h	/^#define	TXDB_DONE	0x01		\/* software done *\/$/
TXDB_ID	../vax/cons.h	/^#define	TXDB_ID		0x00000f00	\/* channel id- not on/
TYPB	../vax/kdb_opset.c	/^#define	TYPB		000	\/* byte integer *\/$/
TYPD	../vax/kdb_opset.c	/^#define	TYPD		006	\/* D float *\/$/
TYPE	../vax/kdb_machdep.c	/^#define	TYPE	SP+1$/
TYPF	../vax/kdb_opset.c	/^#define	TYPF		005	\/* F float *\/$/
TYPG	../vax/kdb_opset.c	/^#define	TYPG		007	\/* G float *\/$/
TYPH	../vax/kdb_opset.c	/^#define	TYPH		010	\/* H float *\/$/
TYPL	../vax/kdb_opset.c	/^#define	TYPL		002	\/* long integer *\/$/
TYPLG	../vax/kdb_opset.c	/^#define	TYPLG		4	\/* number of bits the above take/
TYPMASK	../vax/kdb_opset.c	/^#define	TYPMASK	((1<<TYPLG)-1)	\/* the mask (assum/
TYPNONE	../vax/kdb_opset.c	/^#define	TYPNONE		012	\/* when nothing *\/$/
TYPO	../vax/kdb_opset.c	/^#define	TYPO		004	\/* octa integer *\/$/
TYPQ	../vax/kdb_opset.c	/^#define	TYPQ		003	\/* quad integer *\/$/
TYPUNPACKED	../vax/kdb_opset.c	/^#define	TYPUNPACKED	011	\/* when unpacked into man/
TYPW	../vax/kdb_opset.c	/^#define	TYPW		001	\/* word integer *\/$/
T_1600BPI	../vaxuba/tm.c	/^#define	T_1600BPI	0x8$/
T_6250BPI	../vaxuba/ut.c	/^#define	T_6250BPI	020$/
T_ARITHTRAP	../vax/trap.h	/^#define	T_ARITHTRAP	6		\/* arithmetic trap *\/$/
T_ASTFLT	../vax/trap.h	/^#define	T_ASTFLT	7		\/* software level 2 trap (ast/
T_BPTFLT	../vax/trap.h	/^#define	T_BPTFLT	3		\/* bpt instruction fault *\/$/
T_COMPATFLT	../vax/trap.h	/^#define	T_COMPATFLT	11		\/* compatibility mode fau/
T_HIDENSITY	../vaxuba/tmscp.c	/^#define	T_HIDENSITY	010$/
T_KDBTRAP	../vax/trap.h	/^#define	T_KDBTRAP	14		\/* kernel debugger trap *\//
T_NOREWIND	../vaxuba/tm.c	/^#define	T_NOREWIND	04$/
T_PAGEFLT	../vax/trap.h	/^#define	T_PAGEFLT	12		\/* page fault *\/$/
T_PRIVINFLT	../vax/trap.h	/^#define	T_PRIVINFLT	1		\/* privileged instruction /
T_PROTFLT	../vax/trap.h	/^#define	T_PROTFLT	9		\/* protection fault *\/$/
T_RESADFLT	../vax/trap.h	/^#define	T_RESADFLT	0		\/* reserved addressing faul/
T_RESOPFLT	../vax/trap.h	/^#define	T_RESOPFLT	2		\/* reserved operand fault */
T_SEGFLT	../vax/trap.h	/^#define	T_SEGFLT	8		\/* segmentation fault *\/$/
T_SYSCALL	../vax/trap.h	/^#define	T_SYSCALL	5		\/* chmk instruction (syscall/
T_TABLEFLT	../vax/trap.h	/^#define	T_TABLEFLT	13		\/* page table fault *\/$/
T_TRCTRAP	../vax/trap.h	/^#define	T_TRCTRAP	10		\/* trace trap *\/$/
T_XFCFLT	../vax/trap.h	/^#define	T_XFCFLT	4		\/* xfc instruction fault *\/$/
UAMSIZ	../vaxuba/ubavar.h	/^#define	UAMSIZ	100$/
UBABRRVR_AIRI	../vaxuba/ubareg.h	/^#define	UBABRRVR_AIRI	0x80000000	\/* adapter inter/
UBABRRVR_DIV	../vaxuba/ubareg.h	/^#define	UBABRRVR_DIV	0x0000ffff	\/* device interru/
UBACNFGR_BITS	../vaxuba/ubareg.h	/^#define UBACNFGR_BITS \\$/
UBACNFGR_UBIC	../vaxuba/ubareg.h	/^#define	UBACNFGR_UBIC	0x00010000	\/* unibus init c/
UBACNFGR_UBINIT	../vaxuba/ubareg.h	/^#define	UBACNFGR_UBINIT	0x00040000	\/* unibus init/
UBACNFGR_UBPDN	../vaxuba/ubareg.h	/^#define	UBACNFGR_UBPDN	0x00020000	\/* unibus power/
UBACR_ADINIT	../vaxuba/ubareg.h	/^#define	UBACR_ADINIT	0x00000001	\/* adapter init */
UBACR_BRIE	../vaxuba/ubareg.h	/^#define	UBACR_BRIE	0x00000020	\/* BR interrupt ena/
UBACR_CNFIE	../vaxuba/ubareg.h	/^#define	UBACR_CNFIE	0x00000004	\/* configuration I/
UBACR_IFS	../vaxuba/ubareg.h	/^#define	UBACR_IFS	0x00000040	\/* interrupt field s/
UBACR_MRD1	../vaxuba/ubareg.h	/^#define	UBACR_MRD1	0x04000000	\/* map reg disable /
UBACR_MRD16	../vaxuba/ubareg.h	/^#define	UBACR_MRD16	0x40000000	\/* map reg disable/
UBACR_MRD2	../vaxuba/ubareg.h	/^#define	UBACR_MRD2	0x08000000	\/* map reg disable /
UBACR_MRD4	../vaxuba/ubareg.h	/^#define	UBACR_MRD4	0x10000000	\/* map reg disable /
UBACR_MRD8	../vaxuba/ubareg.h	/^#define	UBACR_MRD8	0x20000000	\/* map reg disable /
UBACR_SUEFIE	../vaxuba/ubareg.h	/^#define	UBACR_SUEFIE	0x00000008	\/* SBI to UNIBUS /
UBACR_UPF	../vaxuba/ubareg.h	/^#define	UBACR_UPF	0x00000002	\/* UNIBUS power fail/
UBACR_USEFIE	../vaxuba/ubareg.h	/^#define	UBACR_USEFIE	0x00000010	\/* UNIBUS to SBI /
UBACVT	../vaxuba/dh.c	/^#define	UBACVT(x, uban)		(cbase[uban] + ((x)-(char/
UBADDRMASK	../vaxuba/npreg.h	/^#define UBADDRMASK	0x3FFFF \/* 18 bit UNIBUS addre/
UBADPR_BNE	../vaxuba/ubareg.h	/^#define	UBADPR_BNE	0x80000000	\/* buffer not empty/
UBADPR_BS	../vaxuba/ubareg.h	/^#define	UBADPR_BS	0x007f0000	\/* buffer state fiel/
UBADPR_BTE	../vaxuba/ubareg.h	/^#define	UBADPR_BTE	0x40000000	\/* buffer transfer /
UBADPR_BUBA	../vaxuba/ubareg.h	/^#define	UBADPR_BUBA	0x0000ffff	\/* buffered UNIBUS/
UBADPR_DPF	../vaxuba/ubareg.h	/^#define	UBADPR_DPF	0x20000000	\/* DP function (RO)/
UBADPR_ERROR	../vaxuba/ubareg.h	/^#define	UBADPR_ERROR	0x80000000	\/* error occurred/
UBADPR_NXM	../vaxuba/ubareg.h	/^#define	UBADPR_NXM	0x40000000	\/* nxm from memory /
UBADPR_PURGE	../vaxuba/ubareg.h	/^#define	UBADPR_PURGE	0x00000001	\/* purge bdp *\/$/
UBADPR_UCE	../vaxuba/ubareg.h	/^#define	UBADPR_UCE	0x20000000	\/* uncorrectable er/
UBAIOADDR	../vaxuba/ubareg.h	/^#define	UBAIOADDR	0760000		\/* start of I\/O page /
UBAIOPAGES	../vaxuba/ubareg.h	/^#define	UBAIOPAGES	16$/
UBAI_ADDR	../vaxuba/ubavar.h	/^#define	UBAI_ADDR(i)	((int)((i)&0x3ffff))	\/* uba /
UBAI_BDP	../vaxuba/ubavar.h	/^#define	UBAI_BDP(i)	((int)(((unsigned)(i))>>28))$/
UBAI_BOFF	../vaxuba/ubavar.h	/^#define	UBAI_BOFF(i)	((int)((i)&0x1ff))$/
UBAI_MR	../vaxuba/ubavar.h	/^#define	UBAI_MR(i)	((int)((i)>>9)&0x1ff)$/
UBAI_NMR	../vaxuba/ubavar.h	/^#define	UBAI_NMR(i)	((int)((i)>>18)&0x3ff)$/
UBAMR_BO	../vaxuba/ubareg.h	/^#define	UBAMR_BO	0x02000000	\/* byte offset bit */
UBAMR_DPDB	../vaxuba/ubareg.h	/^#define	UBAMR_DPDB	0x01e00000	\/* data path design/
UBAMR_DPSHIFT	../vaxuba/ubareg.h	/^#define	UBAMR_DPSHIFT	21		\/* shift to data path d/
UBAMR_MRV	../vaxuba/ubareg.h	/^#define	UBAMR_MRV	0x80000000	\/* map register vali/
UBAMR_SBIPFN	../vaxuba/ubareg.h	/^#define	UBAMR_SBIPFN	0x001fffff	\/* SBI page addre/
UBAPAGES	../vaxuba/ubareg.h	/^#define	UBAPAGES	496$/
UBAPURGE	../vaxuba/ubareg.h	/^#define	UBAPURGE(uba, bdp) { \\$/
UBASR_BITS	../vaxuba/ubareg.h	/^#define	UBASR_BITS \\$/
UBASR_BR4FULL	../vaxuba/ubareg.h	/^#define	UBASR_BR4FULL	0x01000000	\/* BR4 receive v/
UBASR_BR5FULL	../vaxuba/ubareg.h	/^#define	UBASR_BR5FULL	0x02000000	\/* BR5 receive v/
UBASR_BR6FULL	../vaxuba/ubareg.h	/^#define	UBASR_BR6FULL	0x04000000	\/* BR6 receive v/
UBASR_BR7FULL	../vaxuba/ubareg.h	/^#define	UBASR_BR7FULL	0x08000000	\/* BR7 receive v/
UBASR_CRD	../vaxuba/ubareg.h	/^#define	UBASR_CRD	0x00000100	\/* corrected read da/
UBASR_CXTER	../vaxuba/ubareg.h	/^#define	UBASR_CXTER	0x00000080	\/* command transmi/
UBASR_CXTMO	../vaxuba/ubareg.h	/^#define	UBASR_CXTMO	0x00000040	\/* command transmi/
UBASR_DPPE	../vaxuba/ubareg.h	/^#define	UBASR_DPPE	0x00000020	\/* data path parity/
UBASR_IVMR	../vaxuba/ubareg.h	/^#define	UBASR_IVMR	0x00000010	\/* invalid map regi/
UBASR_LEB	../vaxuba/ubareg.h	/^#define	UBASR_LEB	0x00000004	\/* lost error *\/$/
UBASR_MRPF	../vaxuba/ubareg.h	/^#define	UBASR_MRPF	0x00000008	\/* map register par/
UBASR_RDS	../vaxuba/ubareg.h	/^#define	UBASR_RDS	0x00000200	\/* read data substit/
UBASR_RDTO	../vaxuba/ubareg.h	/^#define	UBASR_RDTO	0x00000400	\/* UNIBUS to SBI re/
UBASR_UBSSYNTO	../vaxuba/ubareg.h	/^#define	UBASR_UBSSYNTO	0x00000001	\/* UNIBUS slave/
UBASR_UBSTO	../vaxuba/ubareg.h	/^#define	UBASR_UBSTO	0x00000002	\/* UNIBUS select t/
UBA_CANTWAIT	../vaxuba/ubavar.h	/^#define	UBA_CANTWAIT	0x02		\/* don't block me *\/$/
UBA_HAVEBDP	../vaxuba/ubavar.h	/^#define	UBA_HAVEBDP	0x08		\/* use bdp specified in/
UBA_NEED16	../vaxuba/ubavar.h	/^#define	UBA_NEED16	0x04		\/* need 16 bit addresses/
UBA_NEEDBDP	../vaxuba/ubavar.h	/^#define	UBA_NEEDBDP	0x01		\/* transfer needs a bdp/
UBA_PURGE750	../vaxuba/ubareg.h	/^#define	UBA_PURGE750(uba, bdp) { \\$/
UBA_PURGE780	../vaxuba/ubareg.h	/^#define	UBA_PURGE780(uba, bdp) \\$/
UBA_PURGEBUA	../vaxuba/ubareg.h	/^#define	UBA_PURGEBUA(uba, bdp) \\$/
UBA_UBIC	../vax/nexus.h	/^#define	UBA_UBIC	(1<<16)		\/* unibus initializatio/
UBA_UBINIT	../vax/nexus.h	/^#define	UBA_UBINIT	(1<<18)		\/* unibus init *\/$/
UBA_UBPDN	../vax/nexus.h	/^#define	UBA_UBPDN	(1<<17)		\/* unibus power down */
UCHAR_MAX	../vax/machparam.h	/^#define	UCHAR_MAX	0xff$/
UDASR_BITS	../vaxuba/udareg.h	/^#define	UDASR_BITS \\$/
UDA_DI	../vaxuba/udareg.h	/^#define	UDA_DI		0x0100	\/* controller implements d/
UDA_ERR	../vaxuba/udareg.h	/^#define	UDA_ERR		0x8000	\/* error *\/$/
UDA_GO	../vaxuba/udareg.h	/^#define	UDA_GO		0x0001	\/* run *\/$/
UDA_IE	../vaxuba/udareg.h	/^#define	UDA_IE		0x0080	\/* interrupt enable *\/$/
UDA_IVECMASK	../vaxuba/udareg.h	/^#define	UDA_IVECMASK	0x007f	\/* in STEP2, bits 0-6/
UDA_NCNRMASK	../vaxuba/udareg.h	/^#define	UDA_NCNRMASK	0x003f	\/* in STEP1, bits 0-2/
UDA_NV	../vaxuba/udareg.h	/^#define	UDA_NV		0x0400	\/* no host settable interr/
UDA_PI	../vaxuba/udareg.h	/^#define	UDA_PI		0x0001	\/* host requests adapter p/
UDA_QB	../vaxuba/udareg.h	/^#define	UDA_QB		0x0200	\/* controller supports Q22/
UDA_STEP1	../vaxuba/udareg.h	/^#define	UDA_STEP1	0x0800	\/* step 1 has started */
UDA_STEP2	../vaxuba/udareg.h	/^#define	UDA_STEP2	0x1000	\/* step 2 has started */
UDA_STEP3	../vaxuba/udareg.h	/^#define	UDA_STEP3	0x2000	\/* step 3 has started */
UDA_STEP4	../vaxuba/udareg.h	/^#define	UDA_STEP4	0x4000	\/* step 4 has started */
UDBBUF_OFFSET	../vaxif/if_de.c	/^#define	UDBBUF_OFFSET	RVAL_OFF(ds_udbbuf)$/
UDP_TTL	../netinet/udp_var.h	/^#define	UDP_TTL		30		\/* deflt time to live for UD/
UF_EXCLOSE	../h/user.h	/^#define	UF_EXCLOSE 	0x1		\/* auto-close on exec */
UF_MAPPED	../h/user.h	/^#define	UF_MAPPED 	0x2		\/* mapped from device *\//
UINDEX	../vaxuba/lpa.c	/^#define UINDEX	0007		\/* user index *\/$/
UINT_MAX	../vax/machparam.h	/^#define	UINT_MAX	0xffffffff$/
UIOCCMD	../h/ioctl.h	/^#define		UIOCCMD(n)	_IO('u', n)		\/* usr cntl op "/
UIO_SYSSPACE	../h/uio.h	/^#define UIO_SYSSPACE	1		\/* from system space *\/$/
UIO_USERISPACE	../h/uio.h	/^#define UIO_USERISPACE	2		\/* from user I space */
UIO_USERSPACE	../h/uio.h	/^#define UIO_USERSPACE	0		\/* from user data space /
ULONG_MAX	../vax/machparam.h	/^#define	ULONG_MAX	0xffffffff$/
UMASK	../vaxuba/uu.c	/^#define	UMASK	01		\/* unit number mask *\/$/
UMEM	../vaxuba/ikreg.h	/^#define UMEM		040000000$/
UMEM730	../vaxuba/ubareg.h	/^#define	UMEM730		0xfc0000$/
UMEM750	../vaxuba/ubareg.h	/^#define	UMEM750(i)	(0xfc0000-(i)*0x40000)$/
UMEM780	../vaxuba/ubareg.h	/^#define	UMEM780(i)	(0x20100000+(i)*0x40000)$/
UMEM8200	../vaxuba/ubareg.h	/^#define	UMEM8200(i)	(0x20400000+(i)*0x40000)$/
UMEMA8600	../vaxuba/ubareg.h	/^#define	UMEMA8600(i)	(0x20100000+(i)*0x40000)$/
UMEMB8600	../vaxuba/ubareg.h	/^#define	UMEMB8600(i)	(0x22100000+(i)*0x40000)$/
UNIADDR	../vaxif/if_ex.c	/^#define	UNIADDR(x)	((u_long)(x)&0x3FFFF)$/
UNIT	../vaxuba/dhu.c	/^#define	UNIT(x)	(minor(x))$/
UNITMASK	../vaxuba/uda.c	/^#define	UNITMASK	7$/
UNITSHIFT	../vaxuba/uda.c	/^#define	UNITSHIFT	3$/
UNIT_HAVESTATUS	../vax/mscpvar.h	/^#define	UNIT_HAVESTATUS	0x02	\/* got unit status */
UNIT_ONLINE	../vax/mscpvar.h	/^#define	UNIT_ONLINE	0x01	\/* drive is on line *\/$/
UNIT_REQUEUE	../vax/mscpvar.h	/^#define	UNIT_REQUEUE	0x04	\/* requeue after respon/
UNIcpy	../vax/mem.c	/^UNIcpy(uniadd, usradd, n, rw)$/
UNVRSSLOT	../vaxif/if_exreg.h	/^#define	UNVRSSLOT	254	\/* universal slot index *\//
UPAGES	../vax/machparam.h	/^#define	UPAGES		10		\/* pages of u-area *\/$/
UPCS2_BAI	../vaxuba/upreg.h	/^#define	UPCS2_BAI	0000010		\/* address increment i/
UPCS2_BITS	../vaxuba/upreg.h	/^#define	UPCS2_BITS \\$/
UPCS2_CLR	../vaxuba/upreg.h	/^#define	UPCS2_CLR	0000040		\/* controller clear */
UPCS2_DLT	../vaxuba/upreg.h	/^#define	UPCS2_DLT	0100000		\/* data late *\/$/
UPCS2_IR	../vaxuba/upreg.h	/^#define	UPCS2_IR	0000100		\/* input ready *\/$/
UPCS2_MDPE	../vaxuba/upreg.h	/^#define	UPCS2_MDPE	0000400		\/* massbus data parit/
UPCS2_MXF	../vaxuba/upreg.h	/^#define	UPCS2_MXF	0001000		\/* missed transfer *\//
UPCS2_NED	../vaxuba/upreg.h	/^#define	UPCS2_NED	0010000		\/* nonexistent drive */
UPCS2_NEM	../vaxuba/upreg.h	/^#define	UPCS2_NEM	0004000		\/* nonexistent memory /
UPCS2_OR	../vaxuba/upreg.h	/^#define	UPCS2_OR	0000200		\/* output ready *\/$/
UPCS2_PAT	../vaxuba/upreg.h	/^#define	UPCS2_PAT	0000020		\/* parity test *\/$/
UPCS2_PGE	../vaxuba/upreg.h	/^#define	UPCS2_PGE	0002000		\/* programming error */
UPCS2_UPE	../vaxuba/upreg.h	/^#define	UPCS2_UPE	0020000		\/* UNIBUS parity error/
UPCS2_WCE	../vaxuba/upreg.h	/^#define	UPCS2_WCE	0040000		\/* write check error */
UPDS_ATA	../vaxuba/upreg.h	/^#define	UPDS_ATA	0100000		\/* attention active *\//
UPDS_BITS	../vaxuba/upreg.h	/^#define	UPDS_BITS \\$/
UPDS_DPR	../vaxuba/upreg.h	/^#define	UPDS_DPR	0000400		\/* drive present *\/$/
UPDS_DREADY	../vaxuba/upreg.h	/^#define	UPDS_DREADY	(UPDS_DPR|UPDS_DRY|UPDS_MOL|UP/
UPDS_DRY	../vaxuba/upreg.h	/^#define	UPDS_DRY	0000200		\/* drive ready *\/$/
UPDS_ERR	../vaxuba/upreg.h	/^#define	UPDS_ERR	0040000		\/* composite drive erro/
UPDS_LST	../vaxuba/upreg.h	/^#define	UPDS_LST	0002000		\/* last sector transfer/
UPDS_MOL	../vaxuba/upreg.h	/^#define	UPDS_MOL	0010000		\/* medium on line *\/$/
UPDS_OM	../vaxuba/upreg.h	/^#define	UPDS_OM		0000001		\/* offset mode *\/$/
UPDS_PGM	../vaxuba/upreg.h	/^#define	UPDS_PGM	0001000		\/* programmable *\/$/
UPDS_PIP	../vaxuba/upreg.h	/^#define	UPDS_PIP	0020000		\/* positioning in progr/
UPDS_VV	../vaxuba/upreg.h	/^#define	UPDS_VV		0000100		\/* volume valid *\/$/
UPDS_WRL	../vaxuba/upreg.h	/^#define	UPDS_WRL	0004000		\/* write locked *\/$/
UPER1_AOE	../vaxuba/upreg.h	/^#define	UPER1_AOE	0001000		\/* address overflow er/
UPER1_BITS	../vaxuba/upreg.h	/^#define	UPER1_BITS \\$/
UPER1_DCK	../vaxuba/upreg.h	/^#define	UPER1_DCK	0100000		\/* data check *\/$/
UPER1_DTE	../vaxuba/upreg.h	/^#define	UPER1_DTE	0010000		\/* drive timing error /
UPER1_ECH	../vaxuba/upreg.h	/^#define	UPER1_ECH	0000100		\/* ecc hard error *\/$/
UPER1_FER	../vaxuba/upreg.h	/^#define	UPER1_FER	0000020		\/* format error *\/$/
UPER1_HCE	../vaxuba/upreg.h	/^#define	UPER1_HCE	0000200		\/* header compare erro/
UPER1_HCRC	../vaxuba/upreg.h	/^#define	UPER1_HCRC	0000400		\/* header crc error */
UPER1_IAE	../vaxuba/upreg.h	/^#define	UPER1_IAE	0002000		\/* invalid address err/
UPER1_ILF	../vaxuba/upreg.h	/^#define	UPER1_ILF	0000001		\/* illegal function */
UPER1_ILR	../vaxuba/upreg.h	/^#define	UPER1_ILR	0000002		\/* illegal register */
UPER1_OPI	../vaxuba/upreg.h	/^#define	UPER1_OPI	0020000		\/* operation incomplet/
UPER1_PAR	../vaxuba/upreg.h	/^#define	UPER1_PAR	0000010		\/* parity error *\/$/
UPER1_RMR	../vaxuba/upreg.h	/^#define	UPER1_RMR	0000004		\/* register modificati/
UPER1_UNS	../vaxuba/upreg.h	/^#define	UPER1_UNS	0040000		\/* drive unsafe *\/$/
UPER1_WCF	../vaxuba/upreg.h	/^#define	UPER1_WCF	0000040		\/* write clock fail (0/
UPER1_WLE	../vaxuba/upreg.h	/^#define	UPER1_WLE	0004000		\/* write lock error */
UPER2_ACU	../vaxuba/upreg.h	/^#define	UPER2_ACU	0000100		\/* ac power unsafe *\//
UPER2_BITS	../vaxuba/upreg.h	/^#define	UPER2_BITS \\$/
UPER2_BSE	../vaxuba/upreg.h	/^#define	UPER2_BSE	0100000		\/* bad sector error */
UPER2_DCU	../vaxuba/upreg.h	/^#define	UPER2_DCU	0000400		\/* dc power unsafe *\//
UPER2_DPE	../vaxuba/upreg.h	/^#define	UPER2_DPE	0000010		\/* data parity error (/
UPER2_DVC	../vaxuba/upreg.h	/^#define	UPER2_DVC	0000200		\/* device check *\/$/
UPER2_IVC	../vaxuba/upreg.h	/^#define	UPER2_IVC	0010000		\/* invalid command *\//
UPER2_LBC	../vaxuba/upreg.h	/^#define	UPER2_LBC	0002000		\/* loss of bit clock */
UPER2_LSC	../vaxuba/upreg.h	/^#define	UPER2_LSC	0004000		\/* loss of sector cloc/
UPER2_MDS	../vaxuba/upreg.h	/^#define	UPER2_MDS	0001000		\/* multiple drive sele/
UPER2_OPE	../vaxuba/upreg.h	/^#define	UPER2_OPE	0020000		\/* operator plug error/
UPER2_SKI	../vaxuba/upreg.h	/^#define	UPER2_SKI	0040000		\/* seek incomplete *\//
UPHR_MAXCYL	../vaxuba/upreg.h	/^#define	UPHR_MAXCYL	0100027		\/* max cyl address */
UPHR_MAXSECT	../vaxuba/upreg.h	/^#define	UPHR_MAXSECT	0100031		\/* max sector addre/
UPHR_MAXTRAK	../vaxuba/upreg.h	/^#define	UPHR_MAXTRAK	0100030		\/* max track addres/
UPIPUNITS	../vaxuba/up.c	/^#define	UPIPUNITS	8$/
UPOF_ECI	../vaxuba/upreg.h	/^#define	UPOF_ECI	0004000		\/* ecc inhibit *\/$/
UPOF_FMT22	../vaxuba/upreg.h	/^#define	UPOF_FMT22	0010000		\/* 16 bit format *\/$/
UPOF_HCI	../vaxuba/upreg.h	/^#define	UPOF_HCI	0002000		\/* header compare inhib/
UPOF_M1200	../vaxuba/upreg.h	/^#define	UPOF_M1200	0260		\/* -1200 uinches *\/$/
UPOF_M400	../vaxuba/upreg.h	/^#define	UPOF_M400	0220		\/*  -400 uinches *\/$/
UPOF_M800	../vaxuba/upreg.h	/^#define	UPOF_M800	0240		\/*  -800 uinches *\/$/
UPOF_P1200	../vaxuba/upreg.h	/^#define	UPOF_P1200	0060		\/* +1200 uinches *\/$/
UPOF_P400	../vaxuba/upreg.h	/^#define	UPOF_P400	0020		\/*  +400 uinches *\/$/
UPOF_P800	../vaxuba/upreg.h	/^#define	UPOF_P800	0040		\/*  +800 uinches *\/$/
UP_BOOT	../vaxuba/upreg.h	/^#define	UP_BOOT		074		\/* boot *\/$/
UP_DCLR	../vaxuba/upreg.h	/^#define	UP_DCLR		010		\/* drive clear *\/$/
UP_DMABAND	../vaxuba/upreg.h	/^#define	UP_DMABAND	024		\/* dma bandwidth set *\/$/
UP_DVA	../vaxuba/upreg.h	/^#define	UP_DVA	0004000		\/* drive available *\/$/
UP_FORMAT	../vaxuba/upreg.h	/^#define	UP_FORMAT	076		\/* format *\/$/
UP_GO	../vaxuba/upreg.h	/^#define	UP_GO	0000001$/
UP_IE	../vaxuba/upreg.h	/^#define	UP_IE	0000100		\/* interrupt enable *\/$/
UP_NOP	../vaxuba/upreg.h	/^#define	UP_NOP		000$/
UP_OFFSET	../vaxuba/upreg.h	/^#define	UP_OFFSET	014		\/* offset *\/$/
UP_PACK	../vaxuba/upreg.h	/^#define	UP_PACK		022		\/* pack acknowledge *\/$/
UP_PRESET	../vaxuba/upreg.h	/^#define	UP_PRESET	020		\/* read-in preset *\/$/
UP_PSEL	../vaxuba/upreg.h	/^#define	UP_PSEL	0010000		\/* port select *\/$/
UP_RCOM	../vaxuba/upreg.h	/^#define	UP_RCOM		070		\/* read data *\/$/
UP_RDY	../vaxuba/upreg.h	/^#define	UP_RDY	0000200		\/* controller ready *\/$/
UP_RECAL	../vaxuba/upreg.h	/^#define	UP_RECAL	006		\/* recalibrate *\/$/
UP_RELEASE	../vaxuba/upreg.h	/^#define	UP_RELEASE	012		\/* release *\/$/
UP_RHDR	../vaxuba/upreg.h	/^#define	UP_RHDR		072		\/* read header and data *\//
UP_RTC	../vaxuba/upreg.h	/^#define	UP_RTC		016		\/* return to center-line *\//
UP_SC	../vaxuba/upreg.h	/^#define	UP_SC	0100000		\/* special condition *\/$/
UP_SEARCH	../vaxuba/upreg.h	/^#define	UP_SEARCH	030		\/* search *\/$/
UP_SEEK	../vaxuba/upreg.h	/^#define	UP_SEEK		004		\/* seek *\/$/
UP_TRE	../vaxuba/upreg.h	/^#define	UP_TRE	0040000		\/* transfer error *\/$/
UP_WCDATA	../vaxuba/upreg.h	/^#define	UP_WCDATA	050		\/* write check data *\/$/
UP_WCHDR	../vaxuba/upreg.h	/^#define	UP_WCHDR	052		\/* write check header and d/
UP_WCOM	../vaxuba/upreg.h	/^#define	UP_WCOM		060		\/* write *\/$/
UP_WHDR	../vaxuba/upreg.h	/^#define	UP_WHDR		062		\/* write header and data */
USER	../vax/kdb_machdep.c	/^#define	USER	040$/
USERMODE	../vax/machparam.h	/^#define	USERMODE(ps)	(((ps) & PSL_CURMOD) == PSL_C/
USHRT_MAX	../vax/machparam.h	/^#define	USHRT_MAX	0xffff$/
USP	../vax/mtpr.h	/^#define	USP	0x3		\/* user stack pointer *\/$/
USRPTSIZE	../vax/vmparam.h	/^#define	USRPTSIZE 	(32*NPTEPG)$/
USRSTACK	../vax/vmparam.h	/^#define	USRSTACK	(0x80000000-UPAGES*NBPG) \/* Star/
USRTEXT	../vax/vmparam.h	/^#define	USRTEXT		0$/
UTCS2_BAI	../vaxuba/utreg.h	/^#define	UTCS2_BAI	0x0008		\/* UNIBUS address incre/
UTCS2_BITS	../vaxuba/utreg.h	/^#define	UTCS2_BITS \\$/
UTCS2_CLR	../vaxuba/utreg.h	/^#define	UTCS2_CLR	0x0020		\/* controller clear *\//
UTCS2_DLT	../vaxuba/utreg.h	/^#define	UTCS2_DLT	0x8000		\/* data late *\/$/
UTCS2_IR	../vaxuba/utreg.h	/^#define	UTCS2_IR	0x0040		\/* input ready (not emul/
UTCS2_MXF	../vaxuba/utreg.h	/^#define	UTCS2_MXF	0x0200		\/* missed transfer *\/$/
UTCS2_NED	../vaxuba/utreg.h	/^#define	UTCS2_NED	0x1000		\/* non existent drive */
UTCS2_NEM	../vaxuba/utreg.h	/^#define	UTCS2_NEM	0x0400		\/* non existant memory /
UTCS2_OR	../vaxuba/utreg.h	/^#define	UTCS2_OR	0x0080		\/* output ready (not emu/
UTCS2_PAT	../vaxuba/utreg.h	/^#define	UTCS2_PAT	0x0010		\/* parity test *\/$/
UTCS2_PE	../vaxuba/utreg.h	/^#define	UTCS2_PE	0x2000		\/* parity error *\/$/
UTCS2_PGE	../vaxuba/utreg.h	/^#define	UTCS2_PGE	0x0800		\/* program error *\/$/
UTCS2_RPE	../vaxuba/utreg.h	/^#define	UTCS2_RPE	0x0100		\/* rom parity error *\//
UTCS2_WCE	../vaxuba/utreg.h	/^#define	UTCS2_WCE	0x4000		\/* write check error */
UTDS_ATA	../vaxuba/utreg.h	/^#define	UTDS_ATA	0x8000		\/* attention active *\/$/
UTDS_BITS	../vaxuba/utreg.h	/^#define	UTDS_BITS \\$/
UTDS_BOT	../vaxuba/utreg.h	/^#define	UTDS_BOT	0x0002		\/* beginning of tape *\//
UTDS_DPR	../vaxuba/utreg.h	/^#define	UTDS_DPR	0x0100		\/* drive present (always/
UTDS_DRY	../vaxuba/utreg.h	/^#define	UTDS_DRY	0x0080		\/* drive ready *\/$/
UTDS_EOT	../vaxuba/utreg.h	/^#define	UTDS_EOT	0x0400		\/* end of tape *\/$/
UTDS_ERR	../vaxuba/utreg.h	/^#define	UTDS_ERR	0x4000		\/* composite error *\/$/
UTDS_GCR	../vaxuba/utreg.h	/^#define	UTDS_GCR	0x0200		\/* GCR status *\/$/
UTDS_IDB	../vaxuba/utreg.h	/^#define	UTDS_IDB	0x0008		\/* identification burst /
UTDS_MOL	../vaxuba/utreg.h	/^#define	UTDS_MOL	0x1000		\/* medium on line *\/$/
UTDS_PES	../vaxuba/utreg.h	/^#define	UTDS_PES	0x0020		\/* phase encode status */
UTDS_PIP	../vaxuba/utreg.h	/^#define	UTDS_PIP	0x2000		\/* positioning in progre/
UTDS_SDWN	../vaxuba/utreg.h	/^#define	UTDS_SDWN	0x0010		\/* slowing down *\/$/
UTDS_SLA	../vaxuba/utreg.h	/^#define	UTDS_SLA	0x0001		\/* slave attention *\/$/
UTDS_SSC	../vaxuba/utreg.h	/^#define	UTDS_SSC	0x0040		\/* slave status change */
UTDS_TM	../vaxuba/utreg.h	/^#define	UTDS_TM		0x0004		\/* tape mark *\/$/
UTDS_WRL	../vaxuba/utreg.h	/^#define	UTDS_WRL	0x0800		\/* write lock *\/$/
UTER_BITS	../vaxuba/utreg.h	/^#define	UTER_BITS \\$/
UTER_COR	../vaxuba/utreg.h	/^#define	UTER_COR	0x8000		\/* correctible data erro/
UTER_CS	../vaxuba/utreg.h	/^#define	UTER_CS		0x0400		\/* correctable skew *\/$/
UTER_DPAR	../vaxuba/utreg.h	/^#define	UTER_DPAR	0x0020		\/* data bus parity erro/
UTER_DTE	../vaxuba/utreg.h	/^#define	UTER_DTE	0x1000		\/* drive timing error */
UTER_FCE	../vaxuba/utreg.h	/^#define	UTER_FCE	0x0200		\/* frame count error *\//
UTER_FMT	../vaxuba/utreg.h	/^#define	UTER_FMT	0x0010		\/* format error *\/$/
UTER_HARD	../vaxuba/utreg.h	/^#define	UTER_HARD	(UTER_UNS|UTER_NEF|UTER_DPAR|UTE/
UTER_ILF	../vaxuba/utreg.h	/^#define	UTER_ILF	0x0001		\/* illegal function *\/$/
UTER_ILR	../vaxuba/utreg.h	/^#define	UTER_ILR	0x0002		\/* illegal register (alw/
UTER_INC	../vaxuba/utreg.h	/^#define	UTER_INC	0x0040		\/* incorrectable data */
UTER_NEF	../vaxuba/utreg.h	/^#define	UTER_NEF	0x0800		\/* non executable functi/
UTER_NSG	../vaxuba/utreg.h	/^#define	UTER_NSG	0x0100		\/* non standard gap *\/$/
UTER_OPI	../vaxuba/utreg.h	/^#define	UTER_OPI	0x2000		\/* operation incomplete /
UTER_PEF	../vaxuba/utreg.h	/^#define	UTER_PEF	0x0080		\/* PE format error *\/$/
UTER_RMR	../vaxuba/utreg.h	/^#define	UTER_RMR	0x0004		\/* register modification/
UTER_RPE	../vaxuba/utreg.h	/^#define	UTER_RPE	0x0008		\/* read data parity erro/
UTER_UNS	../vaxuba/utreg.h	/^#define	UTER_UNS	0x4000		\/* unsafe *\/$/
UTTC_ACCL	../vaxuba/utreg.h	/^#define	UTTC_ACCL	0x8000		\/* acceleration *\/$/
UTTC_DEN	../vaxuba/utreg.h	/^#define	UTTC_DEN	0x0700		\/* density select (see b/
UTTC_EAODTE	../vaxuba/utreg.h	/^#define	UTTC_EAODTE	0x1000		\/* (not emulated) *\//
UTTC_EVPAR	../vaxuba/utreg.h	/^#define	UTTC_EVPAR	0x0008		\/* even parity *\/$/
UTTC_FCS	../vaxuba/utreg.h	/^#define	UTTC_FCS	0x4000		\/* frame count status */
UTTC_FMT	../vaxuba/utreg.h	/^#define	UTTC_FMT	0x00f0		\/* format select (see be/
UTTC_TCW	../vaxuba/utreg.h	/^#define	UTTC_TCW	0x2000		\/* tape control write */
UTUNIT	../vaxuba/ut.c	/^#define UTUNIT(dev)	(tjtout[TJUNIT(dev)])$/
UT_BITS	../vaxuba/utreg.h	/^#define	UT_BITS \\$/
UT_CLEAR	../vaxuba/utreg.h	/^#define	UT_CLEAR	0x0008		\/* drive clear *\/$/
UT_DIAGN	../vaxuba/utreg.h	/^#define	UT_DIAGN	0x0012		\/* diagnostic mode set */
UT_DVA	../vaxuba/utreg.h	/^#define	UT_DVA		0x0800		\/* drive available *\/$/
UT_EADDR	../vaxuba/utreg.h	/^#define	UT_EADDR	0x0300		\/* extended address bits/
UT_ERASE	../vaxuba/utreg.h	/^#define	UT_ERASE	0x0014		\/* erase *\/$/
UT_GCR	../vaxuba/utreg.h	/^#define	UT_GCR		0x0500		\/* 6250 bpi code *\/$/
UT_GO	../vaxuba/utreg.h	/^#define	UT_GO		0x0001		\/* go bit *\/$/
UT_IE	../vaxuba/utreg.h	/^#define	UT_IE		0x0040		\/* interrupt-enable *\/$/
UT_LOOP	../vaxuba/utreg.h	/^#define	UT_LOOP		0x0004		\/* loop read\/write *\/$/
UT_NOP	../vaxuba/utreg.h	/^#define	UT_NOP		0x0000		\/* no operation *\/$/
UT_NRZI	../vaxuba/utreg.h	/^#define	UT_NRZI		0x0000		\/* 800 bpi code *\/$/
UT_PE	../vaxuba/utreg.h	/^#define	UT_PE		0x0400		\/* 1600 bpi code *\/$/
UT_PRESET	../vaxuba/utreg.h	/^#define	UT_PRESET	0x0010		\/* read in preset *\/$/
UT_RCOM	../vaxuba/utreg.h	/^#define	UT_RCOM		0x0038		\/* read forward *\/$/
UT_RDY	../vaxuba/utreg.h	/^#define	UT_RDY		0x0080		\/* controller ready *\/$/
UT_REW	../vaxuba/utreg.h	/^#define	UT_REW		0x0006		\/* rewind *\/$/
UT_REWOFFL	../vaxuba/utreg.h	/^#define	UT_REWOFFL	0x0002		\/* rewind offline *\/$/
UT_RREV	../vaxuba/utreg.h	/^#define	UT_RREV		0x003e		\/* read reverse *\/$/
UT_SC	../vaxuba/utreg.h	/^#define	UT_SC		0x8000		\/* special condition *\/$/
UT_SENSE	../vaxuba/utreg.h	/^#define	UT_SENSE	0x000a		\/* drive sense *\/$/
UT_SFORW	../vaxuba/utreg.h	/^#define	UT_SFORW	0x0018		\/* forward space block */
UT_SFORWF	../vaxuba/utreg.h	/^#define	UT_SFORWF	0x001c		\/* forward space file */
UT_SREV	../vaxuba/utreg.h	/^#define	UT_SREV		0x001a		\/* reverse space block */
UT_SREVF	../vaxuba/utreg.h	/^#define	UT_SREVF	0x001e		\/* reverse space file */
UT_TRE	../vaxuba/utreg.h	/^#define	UT_TRE		0x4000		\/* transfer error *\/$/
UT_WCHFORW	../vaxuba/utreg.h	/^#define	UT_WCHFORW	0x0028		\/* write check forward/
UT_WCHREV	../vaxuba/utreg.h	/^#define	UT_WCHREV	0x002e		\/* write check reverse /
UT_WCOM	../vaxuba/utreg.h	/^#define	UT_WCOM		0x0030		\/* write forward *\/$/
UT_WEOF	../vaxuba/utreg.h	/^#define	UT_WEOF		0x0016		\/* write tape mark *\/$/
UUCS_BREAK	../vaxuba/uureg.h	/^#define	UUCS_BREAK	0x01	\/* send break (xmitter on/
UUCS_DONE	../vaxuba/uureg.h	/^#define UUCS_DONE	0x80	\/* done\/ready *\/$/
UUCS_INTR	../vaxuba/uureg.h	/^#define UUCS_INTR	0x40	\/* interrupt enable *\/$/
UUCS_MAINT	../vaxuba/uureg.h	/^#define	UUCS_MAINT	0x02	\/* maintenance check (xmi/
UUCS_READY	../vaxuba/uureg.h	/^#define	UUCS_READY	0x80$/
UUDB_DMASK	../vaxuba/uureg.h	/^#define	UUDB_DMASK	0x00ff	\/* data mask (send and /
UUIPL	../vaxuba/uu.c	/^#define UUIPL	0x14		\/* ipl level to use *\/$/
UURDB_BREAK	../vaxuba/uureg.h	/^#define	UURDB_BREAK	0x2000	\/* TU58 break *\/$/
UURDB_ERROR	../vaxuba/uureg.h	/^#define	UURDB_ERROR	0x8000	\/* Error (overrun or b/
UURDB_ORUN	../vaxuba/uureg.h	/^#define UURDB_ORUN	0x4000	\/* Data overrun error */
VAAUTOSTEP	../vaxuba/va.c	/^#define	VAAUTOSTEP	0000244$/
VAFORMFEED	../vaxuba/va.c	/^#define	VAFORMFEED	0000263$/
VANOAUTOSTEP	../vaxuba/va.c	/^#define	VANOAUTOSTEP	0000045$/
VAPLOT	../vaxuba/va.c	/^#define	VAPLOT		0000340$/
VAPRI	../vaxuba/va.c	/^#define	VAPRI	(PZERO-1)$/
VAPRINT	../vaxuba/va.c	/^#define	VAPRINT		0000100$/
VAPRINTPLOT	../vaxuba/va.c	/^#define	VAPRINTPLOT	0000160$/
VASLEW	../vaxuba/va.c	/^#define	VASLEW		0000265$/
VASTEP	../vaxuba/va.c	/^#define	VASTEP		0000064$/
VAS_DMA	../vaxuba/va.c	/^#define	VAS_DMA		2	\/* DMA, block pio *\/$/
VAS_IDLE	../vaxuba/va.c	/^#define	VAS_IDLE	0	\/* no I\/O, free *\/$/
VAS_PIO	../vaxuba/va.c	/^#define	VAS_PIO		1	\/* programmed I\/O *\/$/
VAS_WANT	../vaxuba/va.c	/^#define	VAS_WANT	4	\/* wakeup when iostate changes/
VAUNIT	../vaxuba/va.c	/^#define	VAUNIT(dev)	(minor(dev))$/
VAX630	../vax/genassym.c	/^#define	VAX630	1$/
VAX730	../vax/genassym.c	/^#define	VAX730	1$/
VAX750	../vax/genassym.c	/^#define	VAX750	1$/
VAX780	../vax/genassym.c	/^#define	VAX780	1$/
VAX_610	../vax/cpu.h	/^#define	VAX_610		7	\/* uVAX I *\/$/
VAX_630	../vax/cpu.h	/^#define	VAX_630		8	\/* uVAX II *\/$/
VAX_730	../vax/cpu.h	/^#define	VAX_730		3$/
VAX_750	../vax/cpu.h	/^#define	VAX_750		2$/
VAX_780	../vax/cpu.h	/^#define	VAX_780		1$/
VAX_8200	../vax/cpu.h	/^#define	VAX_8200	5$/
VAX_8500	../vax/cpu.h	/^#define	VAX_8500	6	\/* same as 8800, 8700 *\/$/
VAX_8600	../vax/cpu.h	/^#define	VAX_8600	4$/
VAX_8800	../vax/cpu.h	/^#define	VAX_8800	6	\/* not positive *\/$/
VAX_MAX	../vax/cpu.h	/^#define	VAX_MAX		8$/
VA_ANOM	../h/vadvise.h	/^#define	VA_ANOM	1$/
VA_BOTOFFORM	../vaxuba/va.c	/^#define	VA_BOTOFFORM	0000002$/
VA_BYTEREVERSE	../vaxuba/va.c	/^#define	VA_BYTEREVERSE	0000001		\/* reverse byte o/
VA_DMAGO	../vaxuba/va.c	/^#define	VA_DMAGO	0000010		\/* DMA go bit *\/$/
VA_DONE	../vaxuba/va.c	/^#define	VA_DONE		0000200$/
VA_ERROR	../vaxuba/va.c	/^#define	VA_ERROR	0100000		\/* some error has occur/
VA_FLUSH	../h/vadvise.h	/^#define	VA_FLUSH 3$/
VA_IENABLE	../vaxuba/va.c	/^#define	VA_IENABLE	0000100		\/* interrupt enable */
VA_NORM	../h/vadvise.h	/^#define	VA_NORM	0$/
VA_NOTREADY	../vaxuba/va.c	/^#define	VA_NOTREADY	0000400		\/* something besides/
VA_NPRTIMO	../vaxuba/va.c	/^#define	VA_NPRTIMO	0001000		\/* DMA timeout error /
VA_SEQL	../h/vadvise.h	/^#define	VA_SEQL	2$/
VA_SUPPLIESLOW	../vaxuba/va.c	/^#define	VA_SUPPLIESLOW	0000004$/
VEC_HOLD	../vaxuba/psreg.h	/^#define VEC_HOLD	02$/
VGETSTATE	../h/vcmd.h	/^#define	VGETSTATE	_IOR('v', 0, int)$/
VIDEO_CONTROL	../vaxuba/ikreg.h	/^#define VIDEO_CONTROL	5$/
VIEWPORT_LOC	../vaxuba/ikreg.h	/^#define VIEWPORT_LOC	0$/
VIEWPORT_SIZE	../vaxuba/ikreg.h	/^#define VIEWPORT_SIZE	1$/
VPLOT	../h/vcmd.h	/^#define	VPLOT		0200$/
VPPRI	../vaxuba/vp.c	/^#define	VPPRI	(PZERO-1)$/
VPRINT	../h/vcmd.h	/^#define	VPRINT		0100$/
VPRINTPLOT	../h/vcmd.h	/^#define	VPRINTPLOT	0400$/
VPSC_BUSY	../vaxuba/vp.c	/^#define	VPSC_BUSY	0001000$/
VPSC_CMNDS	../vaxuba/vp.c	/^#define	VPSC_CMNDS	0000076$/
VPSC_MODE	../vaxuba/vp.c	/^#define	VPSC_MODE	0000700$/
VPSC_OPEN	../vaxuba/vp.c	/^#define	VPSC_OPEN	0000001$/
VPSC_PLOT	../vaxuba/vp.c	/^#define	VPSC_PLOT	0000200$/
VPSC_PRINT	../vaxuba/vp.c	/^#define	VPSC_PRINT	0000100$/
VPSC_SPP	../vaxuba/vp.c	/^#define	VPSC_SPP	0000400$/
VPUNIT	../vaxuba/vp.c	/^#define	VPUNIT(dev)	(minor(dev))$/
VP_CLRCOM	../vaxuba/vp.c	/^#define	VP_CLRCOM	0000004$/
VP_DMAACT	../vaxuba/vp.c	/^#define	VP_DMAACT	0020000$/
VP_DTCINTR	../vaxuba/vp.c	/^#define	VP_DTCINTR	0040000$/
VP_EOTCOM	../vaxuba/vp.c	/^#define	VP_EOTCOM	0000010$/
VP_ERROR	../vaxuba/vp.c	/^#define	VP_ERROR	0100000$/
VP_FFCOM	../vaxuba/vp.c	/^#define	VP_FFCOM	0000020$/
VP_IENABLE	../vaxuba/vp.c	/^#define	VP_IENABLE	0000100$/
VP_READY	../vaxuba/vp.c	/^#define	VP_READY	0000200$/
VP_RESET	../vaxuba/vp.c	/^#define	VP_RESET	0000002$/
VP_SPP	../vaxuba/vp.c	/^#define	VP_SPP		0000001$/
VP_TERMCOM	../vaxuba/vp.c	/^#define	VP_TERMCOM	0000040$/
VSBUFFSIZE	../vaxuba/vs.c	/^#define VSBUFFSIZE	3072$/
VSETSTATE	../h/vcmd.h	/^#define	VSETSTATE	_IOW('v', 1, int)$/
VSE_AUX	../h/vsio.h	/^#define	VSE_AUX		4		\/* auxiliary *\/$/
VSE_BUTTON	../h/vsio.h	/^#define	VSE_BUTTON	0		\/* button moved *\/$/
VSE_CONSOLE	../h/vsio.h	/^#define	VSE_CONSOLE	5		\/* console *\/$/
VSE_DKB	../h/vsio.h	/^#define	VSE_DKB		2		\/* main keyboard *\/$/
VSE_KBTDOWN	../h/vsio.h	/^#define	VSE_KBTDOWN	1		\/* down *\/$/
VSE_KBTUP	../h/vsio.h	/^#define	VSE_KBTUP	0		\/* up *\/$/
VSE_MMOTION	../h/vsio.h	/^#define	VSE_MMOTION	1		\/* mouse moved *\/$/
VSE_MOUSE	../h/vsio.h	/^#define	VSE_MOUSE	1		\/* mouse *\/$/
VSE_TABLET	../h/vsio.h	/^#define	VSE_TABLET	3		\/* graphics tablet *\/$/
VSE_TMOTION	../h/vsio.h	/^#define	VSE_TMOTION	2		\/* tablet moved *\/$/
VSIOABORT	../h/vsio.h	/^#define	VSIOABORT	_IO('V', 2)		\/* abort a command/
VSIOBBACTL	../h/vsio.h	/^#define	VSIOBBACTL	_IOW('V', 8, int)	\/* control t/
VSIOFIBCTL	../h/vsio.h	/^#define	VSIOFIBCTL	_IOW('V', 9, int)	\/* lamp on\//
VSIOFIBRETRY	../h/vsio.h	/^#define	VSIOFIBRETRY	_IOW('V',10, int)	\/* fiber r/
VSIOGETIOA	../h/vsio.h	/^#define	VSIOGETIOA	_IOR('V',13, vsIoAddrAddr)\/* g/
VSIOGETSTATS	../h/vsio.h	/^#define	VSIOGETSTATS	_IOR('V',11, vsStats)	\/* get/
VSIOGETVER	../h/vsio.h	/^#define	VSIOGETVER	_IOR('V', 4, int)	\/* get rom v/
VSIOINIT	../h/vsio.h	/^#define	VSIOINIT	_IO('V', 0)		\/* init the device /
VSIOPWRUP	../h/vsio.h	/^#define	VSIOPWRUP	_IO('V', 3)		\/* power-up reset /
VSIOSTART	../h/vsio.h	/^#define	VSIOSTART	_IOW('V', 1, int)	\/* start micr/
VSIOSYNC	../h/vsio.h	/^#define	VSIOSYNC	_IO('V', 6)		\/* synch with devic/
VSIOUSERWAIT	../h/vsio.h	/^#define	VSIOUSERWAIT	_IO('V', 15)	\/* wait for use/
VSIOWAITGO	../h/vsio.h	/^#define VSIOWAITGO	_IOW('V', 16, caddr_t)	\/* wait/
VSIO_OFF	../h/vsio.h	/^#define	VSIO_OFF	0		\/* option off *\/$/
VSIO_ON	../h/vsio.h	/^#define	VSIO_ON		1		\/* option on *\/$/
VSIRR_BITS	../vaxuba/vsreg.h	/^#define	VSIRR_BITS \\$/
VSMAXEVQ	../vaxuba/vs.c	/^#define	VSMAXEVQ	64	\/* must be power of 2 *\/$/
VSUNIT	../vaxuba/vs.c	/^#define	VSUNIT(dev)	(minor(dev))$/
VSWAITPRI	../vaxuba/vs.c	/^#define	VSWAITPRI	(PZERO+1)$/
VS_ABORT	../vaxuba/vsreg.h	/^#define	VS_ABORT	04		\/* Abort Command Chain *\/$/
VS_CRC_DIS	../vaxuba/vsreg.h	/^#define	VS_CRC_DIS	0002000		\/* CRC Disable *\/$/
VS_DISBBA	../vaxuba/vsreg.h	/^#define	VS_DISBBA	021		\/* Disable BBA *\/$/
VS_ENABBA	../vaxuba/vsreg.h	/^#define	VS_ENABBA	020		\/* Enable BBA *\/$/
VS_ERROR	../vaxuba/vsreg.h	/^#define	VS_ERROR	0100000		\/* Any error *\/$/
VS_FCN	../vaxuba/vsreg.h	/^#define	VS_FCN		0000076		\/* Function Code *\/$/
VS_FCSHIFT	../vaxuba/vsreg.h	/^#define	VS_FCSHIFT	01$/
VS_FIB_FINITE	../h/vsio.h	/^#define	VS_FIB_FINITE	1		\/* finite retries *\/$/
VS_FIB_INFINITE	../h/vsio.h	/^#define	VS_FIB_INFINITE	2		\/* infinite retries */
VS_FINITE	../vaxuba/vsreg.h	/^#define	VS_FINITE	023		\/* Finite Retries *\/$/
VS_GO	../vaxuba/vsreg.h	/^#define	VS_GO		0000001		\/* GO! *\/$/
VS_IE	../vaxuba/vsreg.h	/^#define	VS_IE		0000100		\/* Interrupt Enable *\/$/
VS_INFINITE	../vaxuba/vsreg.h	/^#define	VS_INFINITE	022		\/* Inifinite Retries *\//
VS_INIT	../vaxuba/vsreg.h	/^#define	VS_INIT		01		\/* Initialize Display *\/$/
VS_INT_BE	../vaxuba/vsreg.h	/^#define	VS_INT_BE	010$/
VS_INT_CD	../vaxuba/vsreg.h	/^#define	VS_INT_CD	02$/
VS_INT_ID	../vaxuba/vsreg.h	/^#define	VS_INT_ID	01$/
VS_INT_MM	../vaxuba/vsreg.h	/^#define	VS_INT_MM	020$/
VS_INT_PWR	../vaxuba/vsreg.h	/^#define	VS_INT_PWR	0200$/
VS_INT_SE	../vaxuba/vsreg.h	/^#define	VS_INT_SE	04$/
VS_INT_TM	../vaxuba/vsreg.h	/^#define	VS_INT_TM	040$/
VS_INT_US	../vaxuba/vsreg.h	/^#define	VS_INT_US	0$/
VS_KBDEV	../vaxuba/vsreg.h	/^#define	VS_KBDEV	0007000		\/* Device mask *\/$/
VS_KBKEY	../vaxuba/vsreg.h	/^#define	VS_KBKEY	0000377		\/* Key mask *\/$/
VS_KBT	../vaxuba/vsreg.h	/^#define	VS_KBT		0000400		\/* Transition direction /
VS_KBTDOWN	../vaxuba/vsreg.h	/^#define	VS_KBTDOWN	1		\/* down *\/$/
VS_KBTUP	../vaxuba/vsreg.h	/^#define	VS_KBTUP	0		\/* up *\/$/
VS_LNK_AVL	../vaxuba/vsreg.h	/^#define	VS_LNK_AVL	0040000		\/* Link Available *\//
VS_LNK_ERR	../vaxuba/vsreg.h	/^#define	VS_LNK_ERR	0020000		\/* Link Error *\/$/
VS_LNK_TRNS	../vaxuba/vsreg.h	/^#define	VS_LNK_TRNS	0100000		\/* Link Transition */
VS_MNT_DONE	../vaxuba/vsreg.h	/^#define	VS_MNT_DONE	0001000		\/* Maintenance Done /
VS_MNT_MODE	../vaxuba/vsreg.h	/^#define	VS_MNT_MODE	0004000		\/* Maintenance Mode /
VS_OWN	../vaxuba/vsreg.h	/^#define	VS_OWN		0000200		\/* Owner *\/$/
VS_PWRUP	../vaxuba/vsreg.h	/^#define	VS_PWRUP	05		\/* Power Up Reset *\/$/
VS_REASON	../vaxuba/vsreg.h	/^#define	VS_REASON	0077777		\/* Reason Mask *\/$/
VS_SEND	../vaxuba/vsreg.h	/^#define	VS_SEND		02		\/* Send Packet *\/$/
VS_SPARE	../vaxuba/vsreg.h	/^#define	VS_SPARE	0000400		\/* Spare *\/$/
VS_START	../vaxuba/vsreg.h	/^#define	VS_START	03		\/* Start Microcode *\/$/
VS_XMIT_ON	../vaxuba/vsreg.h	/^#define	VS_XMIT_ON	0010000		\/* Transmitter On *\//
VTAB	../h/tty.h	/^#define	VTAB		5$/
VTDELAY	../h/ioctl.h	/^#define		VTDELAY		0x00004000	\/* vertical tab dela/
VTRACE	../h/trace.h	/^#define	VTRACE		64+51$/
VTR_DISABLE	../h/trace.h	/^#define	VTR_DISABLE	0		\/* set a trace flag to 0 */
VTR_ENABLE	../h/trace.h	/^#define	VTR_ENABLE	1		\/* set a trace flag to 1 */
VTR_STAMP	../h/trace.h	/^#define	VTR_STAMP	4		\/* user specified stamp *\/$/
VTR_UALARM	../h/trace.h	/^#define	VTR_UALARM	3		\/* set alarm to go off (sig/
VTR_VALUE	../h/trace.h	/^#define	VTR_VALUE	2		\/* return value of a trace f/
VVBUFSIZE	../vaxif/if_vv.c	/^#define VVBUFSIZE (VVMRU + sizeof(struct vv_header/
VVFE	../vaxif/if_vv.h	/^#define	VVFE	(VV_NXM|VV_OVR)			\/* Fatal errors */
VVIDENTRETRY	../vaxif/if_vv.h	/^#define VVIDENTRETRY 10		\/* identify loop attempt/
VVIDENTSUCC	../vaxif/if_vv.h	/^#define VVIDENTSUCC 5		\/* number of successes req/
VVMRU	../vaxif/if_vv.c	/^#define VVMRU (VVMTU + 16)$/
VVMTU	../vaxif/if_vv.c	/^#define VVMTU (1536)$/
VVRERR	../vaxif/if_vv.h	/^#define	VVRERR	(VV_NXM|VV_OVR|VV_ODB|VV_BDF|VV_DPR/
VVRETRY	../vaxif/if_vv.h	/^#define	VVRETRY	7		\/* output retry limit *\/$/
VVTIMEOUT	../vaxif/if_vv.h	/^#define VVTIMEOUT 60		\/* seconds before a transmi/
VVUNIT	../vaxif/if_vv.c	/^#define	VVUNIT(x)	minor(x)$/
VVXERR	../vaxif/if_vv.h	/^#define	VVXERR	(VV_NXM|VV_OVR|VV_OPT|VV_BDF)	\/* X/
VV_BDF	../vaxif/if_vv.h	/^#define	VV_BDF	040000		\/* Bad Format in Operation/
VV_BROADCAST	../vaxif/if_vv.h	/^#define	VV_BROADCAST	0xff	\/* hardware-defined bro/
VV_CPB	../vaxif/if_vv.h	/^#define	VV_CPB	04		\/* Clear Packet Buffer (Xmit) /
VV_DEN	../vaxif/if_vv.h	/^#define	VV_DEN	02		\/* Enable DMA *\/$/
VV_DPR	../vaxif/if_vv.h	/^#define	VV_DPR	0400		\/* Data Present (Rcv) *\/$/
VV_ENB	../vaxif/if_vv.h	/^#define	VV_ENB	01		\/* Enable Operation *\/$/
VV_HEN	../vaxif/if_vv.h	/^#define	VV_HEN	04		\/* Host Relay Enable (Rcv) *\//
VV_IBITS	../vaxif/if_vv.h	/^#define VV_IBITS \\$/
VV_IEN	../vaxif/if_vv.h	/^#define	VV_IEN	0100		\/* Interrupt Enable *\/$/
VV_INR	../vaxif/if_vv.h	/^#define	VV_INR	020		\/* Initialize Ring (Xmit) *\//
VV_LDE	../vaxif/if_vv.h	/^#define	VV_LDE	010000		\/* Parity on 10 megabit (R/
VV_LPB	../vaxif/if_vv.h	/^#define	VV_LPB	020		\/* Modem Disable (Rcv) *\/$/
VV_NIR	../vaxif/if_vv.h	/^#define	VV_NIR	0100000		\/* Not in Ring *\/$/
VV_NOK	../vaxif/if_vv.h	/^#define	VV_NOK	020000		\/* Ring Not OK *\/$/
VV_NXM	../vaxif/if_vv.h	/^#define	VV_NXM	01000		\/* Non Existent Memory *\/$/
VV_OBITS	../vaxif/if_vv.h	/^#define VV_OBITS \\$/
VV_ODB	../vaxif/if_vv.h	/^#define	VV_ODB	04000		\/* Odd Byte (Rcv) *\/$/
VV_OPT	../vaxif/if_vv.h	/^#define	VV_OPT	010000		\/* Output Timeout (Xmit) */
VV_OVR	../vaxif/if_vv.h	/^#define	VV_OVR	02000		\/* Overrun *\/$/
VV_RDY	../vaxif/if_vv.h	/^#define	VV_RDY	0200		\/* Done *\/$/
VV_RFS	../vaxif/if_vv.h	/^#define	VV_RFS	0400		\/* Refused (Xmit) *\/$/
VV_RST	../vaxif/if_vv.h	/^#define	VV_RST	040		\/* Reset *\/$/
VV_STE	../vaxif/if_vv.h	/^#define	VV_STE	010		\/* Self Test Enable (Rcv) *\//
VV_UT1	../vaxif/if_vv.h	/^#define	VV_UT1	010		\/* Unused (Xmit) *\/$/
VV_UT2	../vaxif/if_vv.h	/^#define	VV_UT2	04000		\/* Unused (Xmit) *\/$/
WAITING	../vaxif/if_hy.h	/^#define	WAITING		8	\/* waiting for messages *\/$/
WANTOPEN	../vaxmba/hp.c	/^#define	WANTOPEN	1		\/* open requested, not starte/
WANTOPENRAW	../vaxmba/hp.c	/^#define	WANTOPENRAW	2		\/* open requested, no labe/
WANTREQ	../vaxuba/npreg.h	/^#define WANTREQ 0x40		\/* Process is waiting for a/
WBSTOP_REQ	../vaxuba/psreg.h	/^#define WBSTOP_REQ	040$/
WCSA	../vax/mtpr.h	/^#define	WCSA	0x2c		\/* WCS address *\/$/
WCSD	../vax/mtpr.h	/^#define	WCSD	0x2d		\/* WCS data *\/$/
WCSL	../vax/mtpr.h	/^#define	WCSL	0x2e		\/* WCS load *\/$/
WCSR0	../vaxuba/npreg.h	/^#define	WCSR0(x,y)	((x)->CSR0 = y)$/
WCSR1	../vaxuba/npreg.h	/^#define	WCSR1(x,y)	((x)->CSR1 = y)$/
WCSR2	../vaxuba/npreg.h	/^#define	WCSR2(x,y)	((x)->CSR2 = y)$/
WCSR3	../vaxuba/npreg.h	/^#define	WCSR3(x,y)	((x)->CSR3 = y)$/
WIFEXITED	../h/wait.h	/^#define WIFEXITED(x)	((x).w_stopval != WSTOPPED &&/
WIFSIGNALED	../h/wait.h	/^#define WIFSIGNALED(x)	((x).w_stopval != WSTOPPED /
WIFSTOPPED	../h/wait.h	/^#define WIFSTOPPED(x)	((x).w_stopval == WSTOPPED)$/
WINDOWSIZE	../vaxuba/npreg.h	/^#define WINDOWSIZE	2$/
WINDOW_LOC	../vaxuba/ikreg.h	/^#define WINDOW_LOC	2$/
WNOHANG	../h/wait.h	/^#define WNOHANG		1	\/* dont hang in wait *\/$/
WORD32	../vaxuba/ikreg.h	/^#define WORD32		0$/
WORDSPERPAGE	../vaxuba/psreg.h	/^#define WORDSPERPAGE	(256)$/
WRITEBACK	../vaxuba/psreg.h	/^#define WRITEBACK	040$/
WRITE_MASK	../vaxuba/ikreg.h	/^#define WRITE_MASK	010$/
WRITE_OBJ	../vaxif/if_exreg.h	/^#define	WRITE_OBJ	1	\/* write the object *\/$/
WRITE_SELECT	../vaxuba/ikreg.h	/^#define WRITE_SELECT	020$/
WRV	../vaxuba/uu.c	/^#define	WRV     01              \/* bit in minor d/
WSTOPPED	../h/wait.h	/^#define	WSTOPPED	0177	\/* value of s.stopval if pr/
WUNTRACED	../h/wait.h	/^#define WUNTRACED	2	\/* tell about stopped, untrac/
W_OK	../h/file.h	/^#define	W_OK		2	\/* writable by caller *\/$/
X25_FACIL_DDN	../vaxif/if_ddnvar.h	/^#define	X25_FACIL_DDN	0x04		\/* DDN mode facility	/
X25_PROTO_IP	../vaxif/if_ddnvar.h	/^#define	X25_PROTO_IP	0xcc		\/* X25 IP protocol typ/
X2HENT_OFFSET	../vaxif/if_ex.c	/^#define	X2HENT_OFFSET(unit)	LVAL_OFF(unit, xs_x2he/
X2HHDR_OFFSET	../vaxif/if_ex.c	/^#define	X2HHDR_OFFSET(unit)	RVAL_OFF(unit, xs_x2hh/
XBASHIFT	../vaxif/if_hyreg.h	/^#define XBASHIFT	12$/
XERR_BITS	../vaxif/if_dereg.h	/^#define	XERR_BITS	"\\20\\20BUFL\\17UBTO\\15LCOL\\1/
XERR_BUFL	../vaxif/if_dereg.h	/^#define	XERR_BUFL	0x8000		\/* Buffer length error /
XERR_LCAR	../vaxif/if_dereg.h	/^#define	XERR_LCAR	0x0800		\/* Loss of carrier *\/$/
XERR_LCOL	../vaxif/if_dereg.h	/^#define	XERR_LCOL	0x1000		\/* Late collision *\/$/
XERR_RTRY	../vaxif/if_dereg.h	/^#define	XERR_RTRY	0x0400		\/* Failed after 16 retr/
XERR_TDR	../vaxif/if_dereg.h	/^#define	XERR_TDR	0x03ff		\/* TDR value *\/$/
XERR_UBTO	../vaxif/if_dereg.h	/^#define	XERR_UBTO	0x4000		\/* UNIBUS tiemout$/
XFLG_BITS	../vaxif/if_dereg.h	/^#define	XFLG_BITS	"\\10\\10OWN\\7ERRS\\6MTCH\\5MOR/
XFLG_DEF	../vaxif/if_dereg.h	/^#define	XFLG_DEF	0x04		\/* Transmit deferred *\/$/
XFLG_ENP	../vaxif/if_dereg.h	/^#define	XFLG_ENP	0x01		\/* End of packet *\/$/
XFLG_ERRS	../vaxif/if_dereg.h	/^#define	XFLG_ERRS	0x40		\/* Error summary *\/$/
XFLG_MORE	../vaxif/if_dereg.h	/^#define	XFLG_MORE	0x10		\/* More than one entry re/
XFLG_MTCH	../vaxif/if_dereg.h	/^#define	XFLG_MTCH	0x20		\/* Address match on xmit /
XFLG_ONE	../vaxif/if_dereg.h	/^#define	XFLG_ONE	0x08		\/* One collision encounter/
XFLG_OWN	../vaxif/if_dereg.h	/^#define	XFLG_OWN	0x80		\/* If 0 then owned by driv/
XFLG_STP	../vaxif/if_dereg.h	/^#define	XFLG_STP	0x02		\/* Start of packet *\/$/
XLOAD	../h/text.h	/^#define	XLOAD	0x04		\/* Currently being read from /
XLOCK	../h/text.h	/^#define	XLOCK	0x08		\/* Being swapped in or out */
XMITDATASENT	../vaxif/if_hy.h	/^#define	XMITDATASENT	7	\/* transmit data cmd sent /
XMITSENT	../vaxif/if_hy.h	/^#define	XMITSENT	6	\/* transmit message cmd sent */
XMIT_BITS	../vaxif/if_exreg.h	/^#define	XMIT_BITS	"\\7\\7LENGTH\\6CARRIER\\5XCLSNS/
XPAGI	../h/text.h	/^#define	XPAGI	0x20		\/* Page in on demand from ino/
XRENT_OFFSET	../vaxif/if_de.c	/^#define	XRENT_OFFSET	LVAL_OFF(ds_xrent)$/
XTABS	../h/ioctl.h	/^#define		XTABS		0x00000c00	\/* expand tabs on outp/
XTRC	../h/text.h	/^#define	XTRC	0x01		\/* Text may be written, exclus/
XUNLOCK	../sys/vm_text.c	/^#define	XUNLOCK(xp) { \\$/
XUNUSED	../h/text.h	/^#define	XUNUSED	0x40		\/* unused since swapped out/
XWANT	../h/text.h	/^#define	XWANT	0x10		\/* Wanted for swapping *\/$/
XWRIT	../h/text.h	/^#define	XWRIT	0x02		\/* Text written into, must sw/
X_LOCK	../sys/vm_text.c	/^#define X_LOCK(xp) { \\$/
X_OK	../h/file.h	/^#define	X_OK		1	\/* is it executable by caller *\//
Xarithtrap ../vax/locore.s /^SCBVEC(arithtrap):$/
Xastflt ../vax/locore.s /^SCBVEC(astflt):$/
Xbptflt ../vax/locore.s /^SCBVEC(bptflt):$/
Xchme ../vax/locore.s /^SCBVEC(chme): SCBVEC(chms): SCBVEC(chmu):$/
Xcmrd ../vax/locore.s /^SCBVEC(cmrd):$/
Xcnrint ../vax/locore.s /^SCBVEC(cnrint):$/
Xcnxint ../vax/locore.s /^SCBVEC(cnxint):$/
Xcompatflt ../vax/locore.s /^SCBVEC(compatflt):$/
Xconsdin ../vax/locore.s /^SCBVEC(consdin):$/
Xconsdout ../vax/locore.s /^SCBVEC(consdout):$/
Xconsdout ../vax/locore.s /^SCBVEC(consdout):$/
Xemulate ../vax/emulate.s /^SCBVEC(emulate):$/
Xemulate ../vax/locore.s /^SCBVEC(emulate):$/
XemulateFPD ../vax/emulate.s /^SCBVEC(emulateFPD):$/
XemulateFPD ../vax/locore.s /^SCBVEC(emulateFPD):$/
Xhardclock ../vax/locore.s /^SCBVEC(hardclock):$/
Xkdbintr ../vax/locore.s /^SCBVEC(kdbintr):$/
Xkspnotval ../vax/locore.s /^SCBVEC(kspnotval):$/
Xmachcheck ../vax/locore.s /^SCBVEC(machcheck):$/
Xmba0int	../vax/Locore.c	/^Xmba0int() { }$/
Xmba0int ../vax/locore.s /^SCBVEC(mba0int):$/
Xmba1int	../vax/Locore.c	/^Xmba1int() { }$/
Xmba1int ../vax/locore.s /^SCBVEC(mba1int):$/
Xmba2int	../vax/Locore.c	/^Xmba2int() { }$/
Xmba2int ../vax/locore.s /^SCBVEC(mba2int):$/
Xmba3int	../vax/Locore.c	/^Xmba3int() { }$/
Xmba3int ../vax/locore.s /^SCBVEC(mba3int):$/
Xnetintr ../vax/locore.s /^SCBVEC(netintr):$/
Xnex0zvec ../vax/locore.s /^SCBVEC(nex0zvec):$/
Xnex1zvec ../vax/locore.s /^SCBVEC(nex1zvec):$/
Xp	../sys/vm_pt.c	/^#define	Xp(a)	t = p->a; p->a = q->a; q->a = t;$/
Xpassiverel ../vax/locore.s /^SCBVEC(passiverel):$/
Xpowfail ../vax/locore.s /^SCBVEC(powfail):$/
Xpp	../sys/vm_pt.c	/^#define	Xpp(a)	tp = p->a; p->a = q->a; q->a = tp;$/
Xprivinflt ../vax/locore.s /^SCBVEC(privinflt):$/
Xprotflt ../vax/locore.s /^SCBVEC(protflt):$/
Xresadflt ../vax/locore.s /^SCBVEC(resadflt):$/
Xresopflt ../vax/locore.s /^SCBVEC(resopflt):$/
Xsbi0alert ../vax/locore.s /^SCBVEC(sbi0alert):$/
Xsbi0fail ../vax/locore.s /^SCBVEC(sbi0fail):$/
Xsbi0fault ../vax/locore.s /^SCBVEC(sbi0fault):$/
Xsbi1alert ../vax/locore.s /^SCBVEC(sbi1alert):$/
Xsbi1err ../vax/locore.s /^SCBVEC(sbi1err):$/
Xsbi1fail ../vax/locore.s /^SCBVEC(sbi1fail):$/
Xsbi1fault ../vax/locore.s /^SCBVEC(sbi1fault):$/
Xsbisilo ../vax/locore.s /^SCBVEC(sbisilo):$/
Xsoftclock ../vax/locore.s /^SCBVEC(softclock):$/
Xsyscall ../vax/locore.s /^SCBVEC(syscall):$/
Xtracep ../vax/locore.s /^SCBVEC(tracep):$/
Xtransflt ../vax/locore.s /^SCBVEC(transflt):$/
Xu	../sys/vm_pt.c	/^#define	Xu(a)	t = up->u_pcb.a; up->u_pcb.a = uq ->/
Xua0int ../vax/locore.s /^SCBVEC(ua0int):$/
Xua1int ../vax/locore.s /^SCBVEC(ua1int):$/
Xua2int ../vax/locore.s /^SCBVEC(ua2int):$/
Xua3int ../vax/locore.s /^SCBVEC(ua3int):$/
Xua4int ../vax/locore.s /^SCBVEC(ua4int):$/
Xua5int ../vax/locore.s /^SCBVEC(ua5int):$/
Xua6int ../vax/locore.s /^SCBVEC(ua6int):$/
Xua7int ../vax/locore.s /^SCBVEC(ua7int):$/
Xup	../sys/vm_pt.c	/^#define	Xup(a)	tp = up->u_pcb.a; up->u_pcb.a = uq /
Xustray	../vax/Locore.c	/^Xustray() { }$/
Xustray ../vax/locore.s /^SCBVEC(ustray):$/
Xwtime ../vax/locore.s /^SCBVEC(wtime):			/* sbi0err on 8600 */$/
Xxfcflt ../vax/locore.s /^SCBVEC(xfcflt):$/
YRREF	../vax/clock.h	/^#define	YRREF		1970$/
ZMAGIC	../h/exec.h	/^#define	ZMAGIC	0413		\/* demand load format *\/$/
ZOOM	../vaxuba/ikreg.h	/^#define ZOOM		3$/
_IO	../h/ioctl.h	/^#define	_IO(x,y)	(IOC_VOID|(x<<8)|y)$/
_IOCTL_	../h/ioctl.h	/^#define	_IOCTL_$/
_IOR	../h/ioctl.h	/^#define	_IOR(x,y,t)	(IOC_OUT|((sizeof(t)&IOCPARM_M/
_IOW	../h/ioctl.h	/^#define	_IOW(x,y,t)	(IOC_IN|((sizeof(t)&IOCPARM_MA/
_IOWR	../h/ioctl.h	/^#define	_IOWR(x,y,t)	(IOC_INOUT|((sizeof(t)&IOCPAR/
_NAMEI_	../h/namei.h	/^#define	_NAMEI_$/
_PTRACE_	../h/ptrace.h	/^#define _PTRACE_$/
_SGTTYB_	../h/ioctl.h	/^#define	_SGTTYB_$/
_TTYCHARS_	../h/ttychars.h	/^#define	_TTYCHARS_$/
_TTYDEV_	../h/ttydev.h	/^#define	_TTYDEV_$/
_TYPES_	../h/types.h	/^#define	_TYPES_$/
_UIO_	../h/uio.h	/^#define	_UIO_$/
_insque	../vax/Locore.c	/^_insque(p, q) caddr_t p, q; { }$/
_remque	../vax/Locore.c	/^_remque(p) caddr_t p; { }$/
a	../sys/kern_acct.c	/^	register struct a {$/
acc_softc	../vaxif/if_acc.c	/^struct	acc_softc {$/
accattach	../vaxif/if_acc.c	/^accattach(ui)$/
accdevice	../vaxif/if_accreg.h	/^struct accdevice {$/
accdma	../vaxif/if_accreg.h	/^struct accdma {$/
accdown	../vaxif/if_acc.c	/^accdown(unit)$/
accept	../sys/uipc_syscalls.c	/^accept()$/
access	../sys/ufs_fio.c	/^access(ip, mode)$/
accinit	../vaxif/if_acc.c	/^accinit(unit)$/
accinputreset	../vaxif/if_acc.c	/^accinputreset(addr, unit)$/
accoflush	../vaxif/if_acc.c	/^accoflush(unit)$/
accoutput	../vaxif/if_acc.c	/^accoutput(unit, m)$/
accprobe	../vaxif/if_acc.c	/^accprobe(reg)$/
accreset	../vaxif/if_acc.c	/^accreset(unit, uban)$/
accrint	../vaxif/if_acc.c	/^accrint(unit)$/
acct	../sys/kern_acct.c	/^acct()$/
accxint	../vaxif/if_acc.c	/^accxint(unit)$/
ad	../vaxuba/ad.c	/^struct ad {$/
adattach	../vaxuba/ad.c	/^adattach(ui)$/
adclose	../vaxuba/ad.c	/^adclose(dev)$/
addevice	../vaxuba/adreg.h	/^struct addevice {$/
addlog	../sys/subr_prf.c	/^addlog(fmt, x1)$/
addrwrap	../vax/kdbparam.h	/^#define	addrwrap(oaddr,newaddr) (((oaddr)^(newaddr/
addupc	../vax/Locore.c	/^addupc(pc, prof, counts) int pc; struct uprof *pro/
addupc ../vax/locore.s /^ENTRY(addupc, 0)$/
adintr	../vaxuba/ad.c	/^adintr(dev)$/
adioctl	../vaxuba/ad.c	/^adioctl(dev, cmd, addr, flag)$/
adjtime	../sys/kern_time.c	/^adjtime()$/
adopen	../vaxuba/ad.c	/^adopen(dev)$/
adprobe	../vaxuba/ad.c	/^adprobe(reg)$/
adreset	../vaxuba/ad.c	/^adreset(uban)$/
afhash	../net/af.h	/^struct afhash {$/
afswitch	../net/af.h	/^struct afswitch {$/
alloc	../sys/ufs_alloc.c	/^alloc(ip, bpref, size)$/
allocbuf	../vax/ufs_machdep.c	/^allocbuf(tp, size)$/
alloccg	../sys/ufs_alloc.c	/^alloccg(ip, cg, bpref, size)$/
alloccgblk	../sys/ufs_alloc.c	/^alloccgblk(fs, cgp, bpref)$/
anycl	../h/vmmac.h	/^#define	anycl(pte,fld)	((pte)->fld)$/
arp_hln	../netinet/if_ether.h	/^#define	arp_hln	ea_hdr.ar_hln$/
arp_hrd	../netinet/if_ether.h	/^#define	arp_hrd	ea_hdr.ar_hrd$/
arp_op	../netinet/if_ether.h	/^#define	arp_op	ea_hdr.ar_op$/
arp_pln	../netinet/if_ether.h	/^#define	arp_pln	ea_hdr.ar_pln$/
arp_pro	../netinet/if_ether.h	/^#define	arp_pro	ea_hdr.ar_pro$/
arpcom	../netinet/if_ether.h	/^struct	arpcom {$/
arphdr	../net/if_arp.h	/^struct	arphdr {$/
arpinput	../netinet/if_ether.c	/^arpinput(ac, m)$/
arpioctl	../netinet/if_ether.c	/^arpioctl(cmd, data)$/
arpreq	../net/if_arp.h	/^struct arpreq {$/
arpresolve	../netinet/if_ether.c	/^arpresolve(ac, m, destip, desten, usetrailers)$/
arptab	../netinet/if_ether.h	/^struct	arptab {$/
arptfree	../netinet/if_ether.c	/^arptfree(at)$/
arptimer	../netinet/if_ether.c	/^arptimer()$/
arptnew	../netinet/if_ether.c	/^arptnew(addr)$/
arpwhohas	../netinet/if_ether.c	/^arpwhohas(ac, addr)$/
as_numbe	../vax/asnumber.h	/^struct	as_number{$/
assert	../vax/asnumber.h	/^#define	assert(x, str) if (!(x)) panic("%s%s\\n", /
astoff	../vax/pcb.h	/^#define	astoff() \\$/
aston	../vax/pcb.h	/^#define	aston() \\$/
ave	../h/vmmac.h	/^#define	ave(smooth, cnt, time) \\$/
b_actf	../h/buf.h	/^#define	b_actf	av_forw			\/* alternate names for d/
b_active	../h/buf.h	/^#define	b_active b_bcount		\/* driver queue head: /
b_actl	../h/buf.h	/^#define	b_actl	av_back			\/*    head - isn't histo/
b_bdone	../vaxmba/mbavar.h	/^#define	b_bdone	b_bufsize		\/* redefinition for mi/
b_command	../vaxmba/htreg.h	/^#define	b_command b_resid$/
b_cylin	../sys/ufs_disksubr.c	/^#define	b_cylin	b_resid$/
b_errcnt	../h/buf.h	/^#define	b_errcnt b_resid		\/* while i\/o in progre/
b_info	../vax/mscp.c	/^#define	b_info b_resid$/
b_qsize	../vaxuba/tmscp.c	/^#define b_qsize         b_resid         \/* queue /
b_repcnt	../vaxmba/htreg.h	/^#define	b_repcnt  b_bcount$/
b_rp	../vaxuba/np.c	/^#define b_rp  av_back$/
b_state	../vaxuba/utreg.h	/^#define	b_state	  b_active  $/
b_to_q	../sys/tty_subr.c	/^b_to_q(cp, cc, q)$/
b_ubinfo	../vaxuba/tmscp.c	/^#define b_ubinfo        b_resid         \/* Unibus/
b_uio	../vaxuba/np.c	/^#define b_uio b_forw$/
badaddr	../vax/Locore.c	/^badaddr(addr, len) caddr_t addr; int len; { return/
badblock	../sys/ufs_subr.c	/^badblock(fs, bn)$/
baddr	../sys/ufs_bio.c	/^baddr(dev, blkno, size)$/
bawrite	../sys/ufs_bio.c	/^bawrite(bp)$/
bcmp	../sys/subr_xxx.c	/^bcmp(s1, s2, len)$/
bcopy	../vax/Locore.c	/^bcopy(from, to, len) caddr_t from, to; unsigned le/
bdbtofsb	../vax/machparam.h	/^#define	bdbtofsb(bn)	((bn) \/ (BLKDEV_IOSIZE\/DEV_/
bdevsw	../h/conf.h	/^struct bdevsw$/
bdwrite	../sys/ufs_bio.c	/^bdwrite(bp)$/
bflush	../sys/ufs_bio.c	/^bflush(dev)$/
bfree	../vax/ufs_machdep.c	/^bfree(bp)$/
bhinit	../sys/init_main.c	/^bhinit()$/
bibus	../vax/cpu.h	/^struct bibus {$/
bignumprint	../vax/kdb_opset.c	/^bignumprint(nbytes, optype)$/
bigp	../sys/vm_sched.c	/^struct bigp {$/
bind	../sys/uipc_syscalls.c	/^bind()$/
binit	../sys/init_main.c	/^binit()$/
binshash	../h/buf.h	/^#define	binshash(bp, dp) { \\$/
binsheadfree	../h/buf.h	/^#define	binsheadfree(bp, dp) { \\$/
binstailfree	../h/buf.h	/^#define	binstailfree(bp, dp) { \\$/
binval	../sys/ufs_bio.c	/^binval(dev)$/
biodone	../sys/ufs_bio.c	/^biodone(bp)$/
biowait	../sys/ufs_bio.c	/^biowait(bp)$/
bkclose	../sys/tty_bk.c	/^bkclose(tp)$/
bkinput	../sys/tty_bk.c	/^bkinput(c, tp)$/
bkioctl	../sys/tty_bk.c	/^bkioctl(tp, cmd, data, flag)$/
bkopen	../sys/tty_bk.c	/^bkopen(dev, tp)$/
bkread	../sys/tty_bk.c	/^bkread(tp, uio)$/
blkatoff	../sys/ufs_namei.c	/^blkatoff(ip, offset, res)$/
blkclr	../vax/Locore.c	/^blkclr(base, count) caddr_t base; unsigned count; /
blkflush	../sys/ufs_bio.c	/^blkflush(dev, blkno, size)$/
blkfree	../sys/ufs_alloc.c	/^blkfree(ip, bno, size)$/
blkmap	../h/fs.h	/^#define blkmap(fs, map, loc) \\$/
blknum	../h/fs.h	/^#define blknum(fs, fsb)		\/* calculates rounddown(/
blkoff	../h/fs.h	/^#define blkoff(fs, loc)		\/* calculates (loc % fs-/
blkpref	../sys/ufs_alloc.c	/^blkpref(ip, lbn, indx, bap)$/
blkroundup	../h/fs.h	/^#define blkroundup(fs, size)	\/* calculates roundu/
blksize	../h/fs.h	/^#define blksize(fs, ip, lbn) \\$/
blkstofrags	../h/fs.h	/^#define blkstofrags(fs, blks)	\/* calculates (blks/
bmap	../sys/ufs_bmap.c	/^bmap(ip, bn, rwflg, size)$/
boolean	../vaxif/if_ddnvar.h	/^typedef int		boolean;$/
boot	../vax/machdep.c	/^boot(howto)$/
bread	../sys/ufs_bio.c	/^bread(dev, blkno, size)$/
breada	../sys/ufs_bio.c	/^breada(dev, blkno, size, rablkno, rabsize)$/
brealloc	../sys/ufs_bio.c	/^brealloc(bp, size)$/
brelse	../sys/ufs_bio.c	/^brelse(bp)$/
bremfree	../h/buf.h	/^#define	bremfree(bp) { \\$/
bremhash	../h/buf.h	/^#define	bremhash(bp) { \\$/
bt_bad	../h/dkbad.h	/^	struct bt_bad {$/
btoc	../vax/machparam.h	/^#define	btoc(x)	((((unsigned)(x)+511)>>9))$/
btodb	../vax/machparam.h	/^#define	btodb(bytes)	 		\/* calculates (bytes \/ D/
btokmemx	../h/malloc.h	/^#define btokmemx(addr)	(((addr) - kmembase) \/ NBP/
btokmx	../h/vmmac.h	/^#define	btokmx(b)	(((b) - usrpt) \/ NPTEPG)$/
btokup	../h/malloc.h	/^#define btokup(addr)	(&kmemusage[((addr) - kmembas/
btol	../vax/kdbparam.h	/^#define	btol(a)		((a))$/
btop	../h/vmmac.h	/^#define	btop(x)		(((unsigned)(x)) >> PGSHIFT)$/
buf	../h/buf.h	/^struct buf$/
buf_blk	../vaxif/if_exreg.h	/^struct	buf_blk {		\/* packet\/buffer block descrip/
bufhd	../h/buf.h	/^struct bufhd$/
bufstats	../sys/ufs_subr.c	/^bufstats()$/
bwrite	../sys/ufs_bio.c	/^bwrite(bp)$/
byte	../vaxif/if_ddnvar.h	/^typedef	unsigned char	byte;$/
bytes	../netns/ns_input.c	/^		union bytes {$/
bzero	../vax/Locore.c	/^bzero(base, count) caddr_t base; unsigned count; {/
c_repcnt	../vaxuba/tsreg.h	/^#define	c_repcnt c_loba$/
ca_Cmddsc	../vaxuba/tmscp.c	/^#define ca_Cmddsc       ca_rspdsc[1]$/
ca_Rspdsc	../vaxuba/tmscp.c	/^#define ca_Rspdsc       ca_rspdsc[0]$/
ca_ringbase	../vaxuba/tmscpreg.h	/^#define	ca_ringbase	ca_rspdsc[0]$/
cacheinval	../h/inode.h	/^#define cacheinval(ip)	\\$/
cacheinvalall	../sys/ufs_namei.c	/^cacheinvalall()$/
caddr_t	../h/types.h	/^typedef	char *	caddr_t;$/
callout	../h/callout.h	/^struct	callout {$/
cantmask	../sys/kern_sig.c	/^#define	cantmask	(sigmask(SIGKILL)|sigmask(SIGCONT/
casebody	../vax/kdb_opset.c	/^casebody(base, limit)$/
catq	../sys/tty_subr.c	/^catq(from, to)$/
cblock	../h/clist.h	/^struct cblock {$/
cbtocylno	../h/fs.h	/^#define cbtocylno(fs, bno) \\$/
cbtorpos	../h/fs.h	/^#define cbtorpos(fs, bno) \\$/
cdevsw	../h/conf.h	/^struct cdevsw$/
cg	../h/fs.h	/^struct	cg {$/
cg_blks	../h/fs.h	/^#define cg_blks(fs, cgp, cylno) \\$/
cg_blksfree	../h/fs.h	/^#define cg_blksfree(cgp) \\$/
cg_blktot	../h/fs.h	/^#define cg_blktot(cgp) \\$/
cg_chkmagic	../h/fs.h	/^#define cg_chkmagic(cgp) \\$/
cg_inosused	../h/fs.h	/^#define cg_inosused(cgp) \\$/
cgbase	../h/fs.h	/^#define	cgbase(fs, c)	((daddr_t)((fs)->fs_fpg * (c/
cgdmin	../h/fs.h	/^#define	cgdmin(fs, c)	(cgstart(fs, c) + (fs)->fs_d/
cgimin	../h/fs.h	/^#define	cgimin(fs, c)	(cgstart(fs, c) + (fs)->fs_i/
cgsblock	../h/fs.h	/^#define	cgsblock(fs, c)	(cgstart(fs, c) + (fs)->fs/
cgstart	../h/fs.h	/^#define cgstart(fs, c) \\$/
cgtod	../h/fs.h	/^#define	cgtod(fs, c)	(cgstart(fs, c) + (fs)->fs_cb/
chdir	../sys/ufs_syscalls.c	/^chdir()$/
chdirec	../sys/ufs_syscalls.c	/^chdirec(ipp)$/
checkpage	../sys/vm_page.c	/^checkpage(hand, whichhand)$/
checkpath	../sys/ufs_namei.c	/^checkpath(source, target)$/
chgprot	../vax/vm_machdep.c	/^chgprot(addr, tprot)$/
chiptime	../vax/clock.h	/^struct chiptime {$/
chiptotime	../vax/clock.c	/^chiptotime(c)$/
chkdq	../sys/quota_ufs.c	/^chkdq(ip, change, force)$/
chkiq	../sys/quota_ufs.c	/^chkiq(dev, ip, uid, force)$/
chksize	../vax/vm_machdep.c	/^chksize(ts, ids, uds, ss)$/
chmod	../sys/ufs_syscalls.c	/^chmod()$/
chmod1	../sys/ufs_syscalls.c	/^chmod1(ip, mode)$/
chown	../sys/ufs_syscalls.c	/^chown()$/
chown1	../sys/ufs_syscalls.c	/^chown1(ip, uid, gid)$/
chptr	../vax/asnumber.h	/^typedef	u_int		*chptr;		\/* basic data type *\/$/
chroot	../sys/ufs_syscalls.c	/^chroot()$/
cinit	../sys/init_main.c	/^cinit()$/
claligned	../h/param.h	/^#define	claligned(x)	((((int)(x))&CLOFSET)==0)$/
clbase	../h/param.h	/^#define	clbase(i)	(i)$/
cleanup	../sys/vm_page.c	/^cleanup()$/
clear_lcn	../vaxif/if_ddn.c	/^static void clear_lcn(ds, dc)$/
clearseg	../vax/Locore.c	/^clearseg(pf) unsigned pf; { CMAP2 = CMAP2; CADDR2[/
clearseg ../vax/locore.s /^ENTRY(clearseg, 0)$/
clist	../h/tty.h	/^struct clist {$/
clkwrap	../vax/clock.h	/^#define	clkwrap()	(((unsigned)mfpr(TODR) - TODRZER/
clockops	../vax/cpu.h	/^struct	clockops {$/
close	../sys/kern_descrip.c	/^close()$/
closedq	../sys/quota_kern.c	/^closedq(mp)$/
closef	../sys/kern_descrip.c	/^closef(fp)$/
closei	../sys/sys_inode.c	/^closei(dev, mode, flag)$/
clrbit	../h/param.h	/^#define	clrbit(a,i)	((a)[(i)\/NBBY] &= ~(1<<((i)%N/
clrblock	../sys/ufs_subr.c	/^clrblock(fs, cp, h)$/
clrbuf	../h/buf.h	/^#define	clrbuf(bp) { \\$/
clrnd	../h/param.h	/^#define	clrnd(i)	(i)$/
clrsstep	../vax/kdbparam.h	/^#define	clrsstep()	(pcb.pcb_psl &= ~TBIT)$/
cltom	../h/mbuf.h	/^#define	cltom(x) ((struct mbuf *)((int)mbutl + ((x/
cmap	../h/cmap.h	/^struct cmap$/
cmdbyte	../sys/sys_socket.c	/^#define	cmdbyte(x)	(((x) >> 8) & 0xff)$/
cmtopg	../h/cmap.h	/^#define	cmtopg(x)	((((x)-1) * CLSIZE) + firstfree)/
cnclose	../vax/cons.c	/^cnclose(dev)$/
cngetc	../vax/cons.c	/^cngetc()$/
cnioctl	../vax/cons.c	/^cnioctl(dev, cmd, addr, flag)$/
cnopen	../vax/cons.c	/^cnopen(dev, flag)$/
cnpoll	../vax/cons.c	/^cnpoll(onoff)$/
cnputc	../vax/cons.c	/^cnputc(c)$/
cnread	../vax/cons.c	/^cnread(dev, uio)$/
cnrfl	../vax/flp.c	/^cnrfl(c)$/
cnrint	../vax/cons.c	/^cnrint(dev)$/
cnstart	../vax/cons.c	/^cnstart(tp)$/
cnwrite	../vax/cons.c	/^cnwrite(dev, uio)$/
cnxint	../vax/cons.c	/^cnxint(dev)$/
code_decode	../vax/mscp.c	/^struct code_decode {$/
comp_t	../h/acct.h	/^typedef	u_short comp_t;$/
compat	../sys/init_sysent.c	/^#define	compat(n, name)	n, o\/**\/name$/
compress	../sys/kern_acct.c	/^compress(t, ut)$/
configure	../vax/autoconf.c	/^configure()$/
confmsg	../vaxif/if_exreg.h	/^struct	confmsg {$/
connect	../sys/uipc_syscalls.c	/^connect()$/
consdin	../vax/Locore.c	/^consdin() { }$/
consdout	../vax/Locore.c	/^consdout() { }$/
control_leader	../netimp/if_imp.h	/^struct control_leader {$/
convert_ip_addr	../vaxif/if_ddn.c	/^static boolean convert_ip_addr(ip_addr, x25addr)$/
convert_x25_addr	../vaxif/if_ddn.c	/^static int convert_x25_addr(x25addr)$/
conxfl	../vax/flp.c	/^conxfl()$/
copen	../sys/ufs_syscalls.c	/^copen(mode, arg, fname)$/
copyin	../vax/Locore.c	/^copyin(udaddr, kaddr, n) caddr_t udaddr, kaddr; u_/
copyinstr	../vax/Locore.c	/^copyinstr(udaddr, kaddr, maxlength, lencopied)$/
copyinstr ../vax/locore.s /^ENTRY(copyinstr, R6)$/
copyout	../vax/Locore.c	/^copyout(kaddr, udaddr, n) caddr_t kaddr, udaddr; u/
copyoutstr	../vax/Locore.c	/^copyoutstr(kaddr, udaddr, maxlength, lencopied)$/
copyoutstr ../vax/locore.s /^ENTRY(copyoutstr, R6)$/
copyseg	../vax/Locore.c	/^copyseg(udaddr, pf)$/
copyseg ../vax/locore.s /^ENTRY(copyseg, 0)$/
copystr	../vax/Locore.c	/^copystr(kfaddr, kdaddr, maxlength, lencopied)$/
copystr ../vax/locore.s /^ENTRY(copystr, R6)$/
core	../sys/kern_sig.c	/^core()$/
cpu630	../vax/cpu.h	/^ 	struct cpu630 {$/
cpu730	../vax/cpu.h	/^	struct cpu730 {$/
cpu750	../vax/cpu.h	/^	struct cpu750 {$/
cpu780	../vax/cpu.h	/^	struct cpu780 {$/
cpu8200	../vax/cpu.h	/^	struct cpu8200 {$/
cpu8600	../vax/cpu.h	/^	struct cpu8600 {$/
cpuany	../vax/cpu.h	/^	struct cpuany {$/
cpuops	../vax/cpu.h	/^struct	cpuops {$/
cpusid	../vax/cpu.h	/^union cpusid {$/
cqe_bflags	../vaxuba/npreg.h	/^#define cqe_bflags	u3.s.cqe_Bflags$/
cqe_famid	../vaxuba/npreg.h	/^#define	cqe_famid	u1.cqe_Famid$/
cqe_maxbcnt	../vaxuba/npreg.h	/^#define cqe_maxbcnt	u3.s.cqe_Maxbcnt$/
cqe_port	../vaxuba/npreg.h	/^#define	cqe_port	u1.cqe_PrtSig[0]$/
cqe_signal	../vaxuba/npreg.h	/^#define	cqe_signal	u1.cqe_PrtSig[1]$/
cqe_unused	../vaxuba/npreg.h	/^#define cqe_unused	u3.cqe_Unused$/
cqe_ust0	../vaxuba/npreg.h	/^#define	cqe_ust0	u2.cqe_ustS[0]$/
cqe_ust1	../vaxuba/npreg.h	/^#define	cqe_ust1	u2.cqe_ustS[1]$/
cqe_usts	../vaxuba/npreg.h	/^#define	cqe_usts	u2.cqe_ustL$/
creat	../sys/ufs_syscalls.c	/^creat()$/
crlclose	../vax/conf.c	/^#define	crlclose	nodev$/
crlintr	../vax/crl.c	/^crlintr()$/
crlopen	../vax/conf.c	/^#define	crlopen		nodev$/
crloperation	../vax/crl.c	/^crloperation(rw, uio)$/
crlread	../vax/conf.c	/^#define	crlread		nodev$/
crlstart	../vax/crl.c	/^crlstart()$/
crlwrite	../vax/conf.c	/^#define	crlwrite	nodev$/
csr_CRCdisable	../vaxuba/vsreg.h	/^#define	csr_CRCdisable	_X._bits._CRCdisable$/
csr_go	../vaxuba/vsreg.h	/^#define csr_go		_X._bits._go$/
csr_ie	../vaxuba/vsreg.h	/^#define csr_ie		_X._bits._ie$/
csr_linkAvail	../vaxuba/vsreg.h	/^#define	csr_linkAvail	_X._bits._linkAvail$/
csr_linkErr	../vaxuba/vsreg.h	/^#define	csr_linkErr	_X._bits._linkErr$/
csr_linkTran	../vaxuba/vsreg.h	/^#define	csr_linkTran	_X._bits._linkTran$/
csr_mainDone	../vaxuba/vsreg.h	/^#define	csr_mainDone	_X._bits._mainDone$/
csr_mainMode	../vaxuba/vsreg.h	/^#define csr_mainMode	_X._bits._mainMode$/
csr_own	../vaxuba/vsreg.h	/^#define	csr_own		_X._bits._own$/
csr_reg	../vaxuba/vsreg.h	/^#define	csr_reg		_X._register$/
csr_xmitOn	../vaxuba/vsreg.h	/^#define	csr_xmitOn	_X._bits._xmitOn$/
csralloc	../vax/autoconf.c	/^csralloc(ualloc, addr, size)$/
css_iba	../vaxif/if_cssreg.h	/^#define css_iba         css_input.ba$/
css_icsr	../vaxif/if_cssreg.h	/^#define css_icsr        css_input.csr$/
css_iwc	../vaxif/if_cssreg.h	/^#define css_iwc         css_input.wc$/
css_oba	../vaxif/if_cssreg.h	/^#define css_oba         css_output.ba$/
css_ocsr	../vaxif/if_cssreg.h	/^#define css_ocsr        css_output.csr$/
css_owc	../vaxif/if_cssreg.h	/^#define css_owc         css_output.wc$/
css_softc	../vaxif/if_css.c	/^struct  css_softc {$/
cssattach	../vaxif/if_css.c	/^cssattach(ui)$/
cssdevice	../vaxif/if_cssreg.h	/^struct cssdevice {$/
cssdma	../vaxif/if_cssreg.h	/^struct cssdma {$/
cssdown	../vaxif/if_css.c	/^cssdown(unit)$/
cssinit	../vaxif/if_css.c	/^cssinit(unit)$/
cssoflush	../vaxif/if_css.c	/^cssoflush(unit)$/
cssoutput	../vaxif/if_css.c	/^cssoutput(unit, m)$/
cssprobe	../vaxif/if_css.c	/^cssprobe(reg)$/
cssreset	../vaxif/if_css.c	/^cssreset(unit, uban)$/
cssrint	../vaxif/if_css.c	/^cssrint(unit)$/
cssxint	../vaxif/if_css.c	/^cssxint(unit)$/
csum	../h/fs.h	/^struct csum {$/
ct_softc	../vaxuba/ct.c	/^struct ct_softc {$/
ctattach	../vaxuba/ct.c	/^ctattach(ui)$/
ctclose	../vaxuba/ct.c	/^ctclose(dev)$/
ctdevice	../vaxuba/ct.c	/^struct ctdevice {$/
ctintr	../vaxuba/ct.c	/^ctintr(dev)$/
ctob	../vax/machparam.h	/^#define	ctob(x)	((x)<<9)$/
ctod	../vax/machparam.h	/^#define	ctod(x)	(x)$/
ctopen	../vaxuba/ct.c	/^ctopen(dev)$/
ctopt	../h/vmmac.h	/^#define	ctopt(x)	(((x)+NPTEPG-1)\/NPTEPG)$/
ctos	../vax/machparam.h	/^#define	ctos(x)	(x)$/
ctprobe	../vaxuba/ct.c	/^ctprobe(reg)$/
ctwrite	../vaxuba/ct.c	/^ctwrite(dev, uio)$/
d_boot0	../h/disklabel.h	/^#define d_boot0		d_un.un_b.un_d_boot0$/
d_boot1	../h/disklabel.h	/^#define d_boot1		d_un.un_b.un_d_boot1$/
d_gap3	../h/disklabel.h	/^#define d_gap3		d_drivedata[1]		\/* used only when/
d_maxdist	../h/disklabel.h	/^#define	d_maxdist	d_drivedata[2]$/
d_mindist	../h/disklabel.h	/^#define	d_mindist	d_drivedata[1]$/
d_packname	../h/disklabel.h	/^#define d_packname	d_un.un_d_packname$/
d_precompcyl	../h/disklabel.h	/^#define d_precompcyl	d_drivedata[0]$/
d_sdist	../h/disklabel.h	/^#define	d_sdist		d_drivedata[3]$/
d_smdflags	../h/disklabel.h	/^#define	d_smdflags	d_drivedata[0]$/
daddr_t	../h/types.h	/^typedef	long	daddr_t;$/
dar_cyl	../vaxuba/idc.c	/^#define	dar_cyl		dar_w[1]	\/* cylinder address *\//
dar_dar	../vaxuba/idc.c	/^#define	dar_dar		dar_l		\/* the whole disk address/
dar_sect	../vaxuba/idc.c	/^#define	dar_sect	dar_b[0]	\/* sector *\/$/
dar_trk	../vaxuba/idc.c	/^#define	dar_trk		dar_b[1]	\/* track *\/$/
dblksize	../h/fs.h	/^#define dblksize(fs, dip, lbn) \\$/
dblock	../h/dmap.h	/^struct	dblock$/
dbtob	../vax/machparam.h	/^#define	dbtob(db)			\/* calculates (db * DEV_BSIZE/
dbtofsb	../h/fs.h	/^#define	dbtofsb(fs, b)	((b) >> (fs)->fs_fsbtodb)$/
ddn_data	../vaxif/if_ddn.c	/^static void ddn_data(unit, chan, cc, rcnt)$/
ddn_iorq	../vaxif/if_ddn.c	/^static void ddn_iorq(ds, dc, len, func)$/
ddn_start	../vaxif/if_ddn.c	/^static void ddn_start(ds, dc)$/
ddn_supr	../vaxif/if_ddn.c	/^static void ddn_supr(unit, chan, cc)$/
ddnattach	../vaxif/if_ddn.c	/^ddnattach(ui)$/
ddninit	../vaxif/if_ddn.c	/^ddninit(unit)$/
ddnintr	../vaxif/if_ddn.c	/^ddnintr(unit)$/
ddnioctl	../vaxif/if_ddn.c	/^ddnioctl(ifp, cmd, data)$/
ddnoutput	../vaxif/if_ddn.c	/^ddnoutput(ifp, m0, dst)$/
ddnprobe	../vaxif/if_ddn.c	/^ddnprobe(reg)$/
ddnregs	../vaxif/if_ddnreg.h	/^struct ddnregs {			\/* device registers *\/$/
ddnreset	../vaxif/if_ddn.c	/^ddnreset(unit, uban)$/
ddntimer	../vaxif/if_ddn.c	/^int ddntimer(unit)$/
de_buf	../vaxif/if_dereg.h	/^struct	de_buf {$/
de_pcbb	../vaxif/if_dereg.h	/^struct de_pcbb {$/
de_ring	../vaxif/if_dereg.h	/^struct de_ring {$/
de_setaddr	../vaxif/if_de.c	/^de_setaddr(physaddr, unit)$/
de_softc	../vaxif/if_de.c	/^struct	de_softc {$/
de_udbbuf	../vaxif/if_dereg.h	/^struct de_udbbuf {$/
deattach	../vaxif/if_de.c	/^deattach(ui)$/
decode_ring	../vaxif/if_ddn.c	/^static boolean decode_ring(p)$/
dedataaddr	../vaxif/if_de.c	/^#define	dedataaddr(eh, off, type)	((type)(((caddr_/
dedevice	../vaxif/if_dereg.h	/^struct dedevice {$/
deinit	../vaxif/if_de.c	/^deinit(unit)$/
deintr	../vaxif/if_de.c	/^deintr(unit)$/
deioctl	../vaxif/if_de.c	/^deioctl(ifp, cmd, data)$/
delquota	../sys/quota_kern.c	/^delquota(q)$/
deoutput	../vaxif/if_de.c	/^deoutput(ifp, m0, dst)$/
deprobe	../vaxif/if_de.c	/^deprobe(reg)$/
deread	../vaxif/if_de.c	/^deread(ds, ifrw, len)$/
derecv	../vaxif/if_de.c	/^derecv(unit)$/
dereset	../vaxif/if_de.c	/^dereset(unit, uban)$/
destart	../vaxif/if_de.c	/^destart(unit)$/
dev_t	../h/types.h	/^typedef	short	dev_t;$/
dewait	../vaxif/if_de.c	/^dewait(ui, fn)$/
dh11	../vax/conf.c	/^#define	dh11	0$/
dhattach	../vaxuba/dh.c	/^dhattach(ui)$/
dhclose	../vaxuba/dh.c	/^dhclose(dev, flag)$/
dhdevice	../vaxuba/dhreg.h	/^struct dhdevice {$/
dhioctl	../vaxuba/dh.c	/^dhioctl(dev, cmd, data, flag)$/
dhopen	../vaxuba/dh.c	/^dhopen(dev, flag)$/
dhparam	../vaxuba/dh.c	/^dhparam(unit)$/
dhprobe	../vaxuba/dh.c	/^dhprobe(reg)$/
dhread	../vaxuba/dh.c	/^dhread(dev, uio)$/
dhreset	../vaxuba/dh.c	/^dhreset(uban)$/
dhrint	../vaxuba/dh.c	/^dhrint(dh)$/
dhstart	../vaxuba/dh.c	/^dhstart(tp)$/
dhstop	../vaxuba/dh.c	/^dhstop(tp, flag)$/
dhtimer	../vaxuba/dh.c	/^dhtimer()$/
dhu_tty	../vax/conf.c	/^#define dhu_tty 0$/
dhuattach	../vaxuba/dhu.c	/^dhuattach(ui)$/
dhubyte	../vaxuba/dhureg.h	/^#define	dhubyte	un3.fbyte[0]$/
dhuclose	../vaxuba/dhu.c	/^dhuclose(dev, flag)$/
dhucsr	../vaxuba/dhureg.h	/^#define	dhucsr	un1.csr$/
dhucsrh	../vaxuba/dhureg.h	/^#define	dhucsrh	un1.cb.csrh$/
dhucsrl	../vaxuba/dhureg.h	/^#define	dhucsrl	un1.cb.csrl$/
dhudevice	../vaxuba/dhureg.h	/^struct dhudevice {$/
dhufifo	../vaxuba/dhureg.h	/^#define dhufifo	un3.fdata$/
dhuioctl	../vaxuba/dhu.c	/^dhuioctl(dev, cmd, data, flag)$/
dhumctl	../vaxuba/dhu.c	/^dhumctl(dev, bits, how)$/
dhuopen	../vaxuba/dhu.c	/^dhuopen(dev, flag)$/
dhuparam	../vaxuba/dhu.c	/^dhuparam(unit)$/
dhuprobe	../vaxuba/dhu.c	/^dhuprobe(reg)$/
dhurbuf	../vaxuba/dhureg.h	/^#define	dhurbuf	un2.rbuf$/
dhuread	../vaxuba/dhu.c	/^dhuread(dev, uio)$/
dhureset	../vaxuba/dhu.c	/^dhureset(uban)$/
dhurint	../vaxuba/dhu.c	/^dhurint(dhu)$/
dhusize	../vaxuba/dhureg.h	/^#define dhusize	un3.sbyte[0]$/
dhustart	../vaxuba/dhu.c	/^dhustart(tp)$/
dhustat	../vaxuba/dhureg.h	/^#define dhustat	un3.sbyte[1]$/
dhustop	../vaxuba/dhu.c	/^dhustop(tp, flag)$/
dhutimo	../vaxuba/dhureg.h	/^#define	dhutimo	un2.timo$/
dhutodm	../vaxuba/dhu.c	/^dhutodm(bits)$/
dhuwrite	../vaxuba/dhu.c	/^dhuwrite(dev, uio)$/
dhuxint	../vaxuba/dhu.c	/^dhuxint(dhu)$/
dhwrite	../vaxuba/dh.c	/^dhwrite(dev, uio)$/
dhxint	../vaxuba/dh.c	/^dhxint(dh)$/
di_atime	../h/inode.h	/^#define	di_atime	di_ic.ic_atime$/
di_blocks	../h/inode.h	/^#define	di_blocks	di_ic.ic_blocks$/
di_ctime	../h/inode.h	/^#define	di_ctime	di_ic.ic_ctime$/
di_db	../h/inode.h	/^#define	di_db		di_ic.ic_db$/
di_gid	../h/inode.h	/^#define	di_gid		di_ic.ic_gid$/
di_ib	../h/inode.h	/^#define	di_ib		di_ic.ic_ib$/
di_ic	../h/inode.h	/^#define di_ic		di_un.di_icom$/
di_mode	../h/inode.h	/^#define	di_mode		di_ic.ic_mode$/
di_mtime	../h/inode.h	/^#define	di_mtime	di_ic.ic_mtime$/
di_nlink	../h/inode.h	/^#define	di_nlink	di_ic.ic_nlink$/
di_rdev	../h/inode.h	/^#define	di_rdev		di_ic.ic_db[0]$/
di_size	../h/inode.h	/^#define	di_size		di_ic.ic_size.val[0]$/
di_uid	../h/inode.h	/^#define	di_uid		di_ic.ic_uid$/
dinode	../h/inode.h	/^struct dinode {$/
dirbad	../sys/ufs_namei.c	/^dirbad(ip, offset, how)$/
dirbadentry	../sys/ufs_namei.c	/^dirbadentry(ep, entryoffsetinblock)$/
direct	../h/dir.h	/^struct	direct {$/
dirempty	../sys/ufs_namei.c	/^dirempty(ip, parentino)$/
direnter	../sys/ufs_namei.c	/^direnter(ip, ndp)$/
dirfd	../h/dir.h	/^#define dirfd(dirp)	((dirp)->dd_fd)$/
dirpref	../sys/ufs_alloc.c	/^dirpref(fs)$/
dirremove	../sys/ufs_namei.c	/^dirremove(ndp)$/
dirrewrite	../sys/ufs_namei.c	/^dirrewrite(dp, ip, ndp)$/
dirtemplate	../h/dir.h	/^struct dirtemplate {$/
dirty	../vax/pte.h	/^#define	dirty(pte)	((pte)->pg_m)$/
dirtycl	../h/vmmac.h	/^#define	dirtycl(pte)	dirty(pte)$/
discquota	../sys/quota_kern.c	/^discquota(uid, ip)$/
disklabel	../h/disklabel.h	/^struct disklabel {$/
disksort	../sys/ufs_disksubr.c	/^disksort(dp, bp)$/
dispaddress	../vax/kdb_opset.c	/^dispaddress(valuep, mode)$/
distcl	../h/vmmac.h	/^#define	distcl(pte)$/
distpte	../sys/vm_pt.c	/^distpte(xp, tp, dpte)$/
dkbad	../h/dkbad.h	/^struct dkbad {$/
dkcksum	../sys/ufs_disksubr.c	/^dkcksum(lp)$/
dkclose	../vax/conf.c	/^#define	dkclose	nodev$/
dkioctl	../vax/conf.c	/^#define	dkioctl	nodev$/
dkminor	../sys/ufs_disksubr.c	/^#define dkminor(unit, part)	(((unit) << 3) | (part/
dkopen	../vax/conf.c	/^#define	dkopen	nodev$/
dkpart	../sys/ufs_disksubr.c	/^#define dkpart(dev)		(minor(dev) & 07)$/
dkread	../vax/conf.c	/^#define	dkread	nodev$/
dkt	../vax/conf.c	/^#define	dkt		0$/
dktclose	../vax/conf.c	/^#define	dktclose	nodev$/
dktioctl	../vax/conf.c	/^#define	dktioctl	nodev$/
dktopen	../vax/conf.c	/^#define	dktopen		nodev$/
dktread	../vax/conf.c	/^#define	dktread		nodev$/
dktstop	../vax/conf.c	/^#define	dktstop		nulldev$/
dktwrite	../vax/conf.c	/^#define	dktwrite	nodev$/
dkunit	../sys/ufs_disksubr.c	/^#define dkunit(dev)		(minor(dev) >> 3)$/
dkwrite	../vax/conf.c	/^#define	dkwrite	nodev$/
dmap	../h/dmap.h	/^struct	dmap$/
dmapsize	../sys/vm_page.c	/^dmapsize(dmin, dmax)$/
dmattach	../vaxuba/dh.c	/^dmattach(ui)$/
dmc_base	../vaxif/if_dmc.c	/^struct dmc_base {$/
dmc_command	../vaxif/if_dmc.c	/^struct  dmc_command {$/
dmc_header	../vaxif/if_dmc.h	/^struct dmc_header {$/
dmc_softc	../vaxif/if_dmc.c	/^struct dmc_softc {$/
dmcattach	../vaxif/if_dmc.c	/^dmcattach(ui)$/
dmcbufs	../vaxif/if_dmc.c	/^struct dmcbufs {$/
dmcdataaddr	../vaxif/if_dmc.c	/^#define dmcdataaddr(dh, off, type)	((type)(((caddr/
dmcdevice	../vaxif/if_dmc.h	/^struct dmcdevice {$/
dmcinit	../vaxif/if_dmc.c	/^dmcinit(unit)$/
dmcioctl	../vaxif/if_dmc.c	/^dmcioctl(ifp, cmd, data)$/
dmcload	../vaxif/if_dmc.c	/^dmcload(sc, type, w0, w1)$/
dmcoutput	../vaxif/if_dmc.c	/^dmcoutput(ifp, m0, dst)$/
dmcprobe	../vaxif/if_dmc.c	/^dmcprobe(reg)$/
dmcreset	../vaxif/if_dmc.c	/^dmcreset(unit, uban)$/
dmcrestart	../vaxif/if_dmc.c	/^dmcrestart(unit)$/
dmcrint	../vaxif/if_dmc.c	/^dmcrint(unit)$/
dmcstart	../vaxif/if_dmc.c	/^dmcstart(dev)$/
dmctl	../vaxuba/dh.c	/^dmctl(dev, bits, how)$/
dmcwatch	../vaxif/if_dmc.c	/^dmcwatch()$/
dmcxint	../vaxif/if_dmc.c	/^dmcxint(unit)$/
dmdevice	../vaxuba/dmreg.h	/^struct dmdevice {$/
dmf_tty	../vax/conf.c	/^#define	dmf_tty	0$/
dmfattach	../vaxuba/dmf.c	/^dmfattach(ui)$/
dmfclose	../vaxuba/dmf.c	/^dmfclose(dev, flag)$/
dmfdaint	../vaxuba/dmf.c	/^dmfdaint()$/
dmfdbint	../vaxuba/dmf.c	/^dmfdbint()$/
dmfdevice	../vaxuba/dmfreg.h	/^struct dmfdevice {$/
dmfioctl	../vaxuba/dmf.c	/^dmfioctl(dev, cmd, data, flag)$/
dmfl_softc	../vaxuba/dmf.c	/^struct dmfl_softc {$/
dmflattach	../vaxuba/dmf.c	/^dmflattach(ui)$/
dmflclose	../vaxuba/dmf.c	/^dmflclose(dev, flag)$/
dmflint	../vaxuba/dmf.c	/^dmflint(dmf)$/
dmflopen	../vaxuba/dmf.c	/^dmflopen(dev, flag)$/
dmflout	../vaxuba/dmf.c	/^dmflout(dev, cp, n)$/
dmflwrite	../vaxuba/dmf.c	/^dmflwrite(dev, uio)$/
dmfopen	../vaxuba/dmf.c	/^dmfopen(dev, flag)$/
dmfprobe	../vaxuba/dmf.c	/^dmfprobe(reg, ctlr)$/
dmfread	../vaxuba/dmf.c	/^dmfread(dev, uio)$/
dmfreset	../vaxuba/dmf.c	/^dmfreset(uban)$/
dmfrint	../vaxuba/dmf.c	/^dmfrint(dmf)$/
dmfsrint	../vaxuba/dmf.c	/^dmfsrint()$/
dmfstart	../vaxuba/dmf.c	/^dmfstart(tp)$/
dmfstop	../vaxuba/dmf.c	/^dmfstop(tp, flag)$/
dmfsxint	../vaxuba/dmf.c	/^dmfsxint()$/
dmfwrite	../vaxuba/dmf.c	/^dmfwrite(dev, uio)$/
dmfxint	../vaxuba/dmf.c	/^dmfxint(dmf)$/
dmintr	../vaxuba/dh.c	/^dmintr(dm)$/
dmopen	../vaxuba/dh.c	/^dmopen(dev)$/
dmprobe	../vaxuba/dh.c	/^dmprobe(reg)$/
dmtodhu	../vaxuba/dhu.c	/^dmtodhu(bits)$/
dmtodmx	../vaxuba/dmx.c	/^dmtodmx(bits)$/
dmtodz	../vaxuba/dz.c	/^dmtodz(bits)$/
dmx_octet	../vaxuba/dmxreg.h	/^struct dmx_octet {$/
dmx_softc	../vaxuba/dmx.h	/^struct dmx_softc {$/
dmxclose	../vaxuba/dmx.c	/^dmxclose(tp)$/
dmxioctl	../vaxuba/dmx.c	/^dmxioctl(tp, cmd, data, flag)$/
dmxmctl	../vaxuba/dmx.c	/^dmxmctl(tp, bits, how)$/
dmxopen	../vaxuba/dmx.c	/^dmxopen(tp, sc)$/
dmxparam	../vaxuba/dmx.c	/^dmxparam(tp)$/
dmxrint	../vaxuba/dmx.c	/^dmxrint(sc)$/
dmxstart	../vaxuba/dmx.c	/^dmxstart(tp, sc)$/
dmxtodm	../vaxuba/dmx.c	/^dmxtodm(mstat, lcr)$/
dmxxint	../vaxuba/dmx.c	/^dmxxint(sc)$/
dmz_tty	../vax/conf.c	/^#define dmz_tty 0$/
dmzattach	../vaxuba/dmz.c	/^dmzattach(ui)$/
dmzclose	../vaxuba/dmz.c	/^dmzclose(dev, flag)$/
dmzdevice	../vaxuba/dmzreg.h	/^struct dmzdevice {$/
dmzioctl	../vaxuba/dmz.c	/^dmzioctl(dev, cmd, data, flag)$/
dmzopen	../vaxuba/dmz.c	/^dmzopen(dev, flag)$/
dmzprobe	../vaxuba/dmz.c	/^dmzprobe(reg)$/
dmzread	../vaxuba/dmz.c	/^dmzread(dev, uio)$/
dmzreset	../vaxuba/dmz.c	/^dmzreset(uban)$/
dmzrinta	../vaxuba/dmz.c	/^dmzrinta(dmz)$/
dmzrintb	../vaxuba/dmz.c	/^dmzrintb(dmz)$/
dmzrintc	../vaxuba/dmz.c	/^dmzrintc(dmz)$/
dmzstart	../vaxuba/dmz.c	/^dmzstart(tp)$/
dmzstop	../vaxuba/dmz.c	/^dmzstop(tp, flag)$/
dmzwrite	../vaxuba/dmz.c	/^dmzwrite(dev, uio)$/
dmzxinta	../vaxuba/dmz.c	/^dmzxinta(dmz)$/
dmzxintb	../vaxuba/dmz.c	/^dmzxintb(dmz)$/
dmzxintc	../vaxuba/dmz.c	/^dmzxintc(dmz)$/
dnattach	../vaxuba/dn.c	/^dnattach(ui)$/
dnclose	../vaxuba/dn.c	/^dnclose(dev, flag)$/
dndevice	../vaxuba/dn.c	/^struct dndevice {$/
dnintr	../vaxuba/dn.c	/^dnintr(dev)$/
dnopen	../vaxuba/dn.c	/^dnopen(dev, flag)$/
dnprobe	../vaxuba/dn.c	/^dnprobe(reg)$/
dnwrite	../vaxuba/dn.c	/^dnwrite(dev, uio)$/
doadump	../vax/Locore.c	/^doadump() { dumpsys(); }$/
domain	../h/domain.h	/^struct	domain {$/
domaininit	../sys/uipc_domain.c	/^domaininit()$/
donice	../sys/kern_resource.c	/^donice(p, n)$/
dorti	../vax/machdep.c	/^dorti()$/
dowarn	../sys/quota_sys.c	/^dowarn(q, dev)$/
dp	../sys/ufs_bio.c	/^#define dp ((struct buf *)hp)$/
dpageout	../sys/vm_page.c	/^dpageout(p, dp, n)$/
dprintf	../vaxuba/va.c	/^#define	dprintf	if(vadebug)printf$/
dpte_clrref	../sys/kern_mman.c	/^#define	dpte_clrref(pte, c) { \\$/
dptopte	../h/vmmac.h	/^#define	dptopte(p, i)		((p)->p_p0br + ((p)->p_tsiz/
dptov	../h/vmmac.h	/^#define	dptov(p, i)	((unsigned)(stoc(ctos((p)->p_t/
dq_bhardlimit	../h/quota.h	/^#define	dq_bhardlimit	dq_dqb.dqb_bhardlimit$/
dq_bsoftlimit	../h/quota.h	/^#define	dq_bsoftlimit	dq_dqb.dqb_bsoftlimit$/
dq_bwarn	../h/quota.h	/^#define	dq_bwarn	dq_dqb.dqb_bwarn$/
dq_curblocks	../h/quota.h	/^#define	dq_curblocks	dq_dqb.dqb_curblocks$/
dq_curinodes	../h/quota.h	/^#define	dq_curinodes	dq_dqb.dqb_curinodes$/
dq_freeb	../h/quota.h	/^#define	dq_freeb	dq_u.dq_f.Dq_freeb$/
dq_freef	../h/quota.h	/^#define	dq_freef	dq_u.dq_f.Dq_freef$/
dq_ihardlimit	../h/quota.h	/^#define	dq_ihardlimit	dq_dqb.dqb_ihardlimit$/
dq_isoftlimit	../h/quota.h	/^#define	dq_isoftlimit	dq_dqb.dqb_isoftlimit$/
dq_iwarn	../h/quota.h	/^#define	dq_iwarn	dq_dqb.dqb_iwarn$/
dq_own	../h/quota.h	/^#define	dq_own		dq_u.Dq_own$/
dqalloc	../sys/quota_kern.c	/^dqalloc(uid, dev)$/
dqblk	../h/quota.h	/^struct	dqblk {$/
dqhead	../sys/quota_kern.c	/^struct	dqhead	{$/
dqp	../sys/quota_subr.c	/^dqp(q, dev)$/
dqrele	../sys/quota_kern.c	/^dqrele(dq)$/
dquot	../h/quota.h	/^struct	dquot {$/
dqusage	../h/quota.h	/^struct	dqusage {$/
dqwarn	../h/quota.h	/^struct	dqwarn {$/
ds_addr	../vaxif/if_de.c	/^#define	ds_addr	ds_ac.ac_enaddr		\/* hardware Ethe/
ds_if	../vaxif/if_de.c	/^#define	ds_if	ds_ac.ac_if		\/* network-visible int/
dtob	../vax/machparam.h	/^#define	dtob(x)	((x)<<PGSHIFT)$/
dtoc	../vax/machparam.h	/^#define	dtoc(x)	(x)$/
dtog	../h/fs.h	/^#define	dtog(fs, d)	((d) \/ (fs)->fs_fpg)$/
dtogd	../h/fs.h	/^#define	dtogd(fs, d)	((d) % (fs)->fs_fpg)$/
dtom	../h/mbuf.h	/^#define	dtom(x)		((struct mbuf *)((int)x & ~(MSIZE/
dumpsys	../vax/machdep.c	/^dumpsys()$/
dup	../sys/kern_descrip.c	/^dup()$/
dup2	../sys/kern_descrip.c	/^dup2()$/
dupit	../sys/kern_descrip.c	/^dupit(fd, fp, flags)$/
dwbua_regs	../vaxuba/ubareg.h	/^struct dwbua_regs {$/
dz_tty	../vax/conf.c	/^#define	dz_tty	0$/
dzattach	../vaxuba/dz.c	/^dzattach(ui)$/
dzbrk	../vaxuba/dzreg.h	/^#define	dzbrk	dzmsr$/
dzclose	../vaxuba/dz.c	/^dzclose(dev, flag)$/
dzdevice	../vaxuba/dzreg.h	/^struct dzdevice {$/
dzdma	../vax/Locore.c	/^dzdma() { dzxint((struct tty *)0); }$/
dzdtr	../vaxuba/dzreg.h	/^#define dzdtr	dzun.dz11.dzdtr0$/
dzioctl	../vaxuba/dz.c	/^dzioctl(dev, cmd, data, flag)$/
dzlcs	../vaxuba/dzreg.h	/^#define dzlcs	dzun.dz32.dzlcs0$/
dzlnen	../vaxuba/dzreg.h	/^#define dzlnen	dzun.dz32.dzlnen0$/
dzlpr	../vaxuba/dzreg.h	/^#define dzlpr	dzrbuf$/
dzmctl	../vaxuba/dz.c	/^dzmctl(dev, bits, how)$/
dzmsr	../vaxuba/dzreg.h	/^#define dzmsr	dzun.dz11.dzbrk0$/
dzmtsr	../vaxuba/dzreg.h	/^#define dzmtsr	dzun.dz32.dztbuf0$/
dzopen	../vaxuba/dz.c	/^dzopen(dev, flag)$/
dzparam	../vaxuba/dz.c	/^dzparam(unit)$/
dzprobe	../vaxuba/dz.c	/^dzprobe(reg)$/
dzread	../vaxuba/dz.c	/^dzread(dev, uio)$/
dzreset	../vaxuba/dz.c	/^dzreset(uban)$/
dzrint	../vaxuba/dz.c	/^dzrint(dz)$/
dzscan	../vaxuba/dz.c	/^dzscan()$/
dzstart	../vaxuba/dz.c	/^dzstart(tp)$/
dzstop	../vaxuba/dz.c	/^dzstop(tp, flag)$/
dztbuf	../vaxuba/dzreg.h	/^#define dztbuf	dzun.dz11.dztbuf0$/
dztcr	../vaxuba/dzreg.h	/^#define dztcr	dzun.dz11.dztcr0$/
dztimer	../vaxuba/dz.c	/^dztimer()$/
dztodm	../vaxuba/dz.c	/^dztodm(bits)$/
dzwait	../vaxuba/dz.c	/^#define dzwait(x)	while (((x)->dzlcs & DZ_ACK) == /
dzwrite	../vaxuba/dz.c	/^dzwrite(dev, uio)$/
dzxint	../vaxuba/dz.c	/^dzxint(tp)$/
ec_setaddr	../vaxif/if_ec.c	/^ec_setaddr(physaddr,unit)$/
ec_softc	../vaxif/if_ec.c	/^struct	ec_softc {$/
ecattach	../vaxif/if_ec.c	/^ecattach(ui)$/
eccollide	../vaxif/if_ec.c	/^eccollide(unit)$/
ecdataaddr	../vaxif/if_ec.c	/^#define	ecdataaddr(ec, off, type)	((type)(((caddr_/
ecdevice	../vaxif/if_ecreg.h	/^struct ecdevice {$/
ecget	../vaxif/if_ec.c	/^ecget(ecbuf, totlen, off0, ifp)$/
echo	../netns/ns_error.c	/^	register struct echo {$/
ecinit	../vaxif/if_ec.c	/^ecinit(unit)$/
ecioctl	../vaxif/if_ec.c	/^ecioctl(ifp, cmd, data)$/
ecoutput	../vaxif/if_ec.c	/^ecoutput(ifp, m0, dst)$/
ecprobe	../vaxif/if_ec.c	/^ecprobe(reg, ui)$/
ecput	../vaxif/if_ec.c	/^ecput(ecbuf, m)$/
ecread	../vaxif/if_ec.c	/^ecread(unit)$/
ecreset	../vaxif/if_ec.c	/^ecreset(unit, uban)$/
ecrint	../vaxif/if_ec.c	/^ecrint(unit)$/
ecstart	../vaxif/if_ec.c	/^ecstart(unit)$/
ecubamem	../vaxif/if_ec.c	/^ecubamem(ui, uban)$/
ecxint	../vaxif/if_ec.c	/^ecxint(unit)$/
en_header	../vaxif/if_en.h	/^struct	en_header {$/
en_softc	../vaxif/if_en.c	/^struct	en_softc {$/
enablertclock	../vax/cpu.h	/^#define	enablertclock()$/
enattach	../vaxif/if_en.c	/^enattach(ui)$/
encollide	../vaxif/if_en.c	/^encollide(unit)$/
endataaddr	../vaxif/if_en.c	/^#define	endataaddr(en, off, type)	((type)(((caddr_/
endevice	../vaxif/if_enreg.h	/^struct endevice {$/
endocoll	../vaxif/if_en.c	/^endocoll(unit)$/
enet_recv	../vaxif/if_exreg.h	/^struct	enet_recv {		\/* receive a packet on the Et/
enet_xmit	../vaxif/if_exreg.h	/^struct	enet_xmit {		\/* send a packet on the Ether/
eninit	../vaxif/if_en.c	/^eninit(unit)$/
enioctl	../vaxif/if_en.c	/^enioctl(ifp, cmd, data)$/
enoutput	../vaxif/if_en.c	/^enoutput(ifp, m0, dst)$/
enprobe	../vaxif/if_en.c	/^enprobe(reg)$/
enreset	../vaxif/if_en.c	/^enreset(unit, uban)$/
enrint	../vaxif/if_en.c	/^enrint(unit)$/
enstart	../vaxif/if_en.c	/^enstart(dev)$/
enswab	../vaxif/if_en.c	/^enswab(from, to, n)$/
entergroup	../sys/kern_prot.c	/^entergroup(gid)$/
enxint	../vaxif/if_en.c	/^enxint(unit)$/
equal	../net/if.c	/^#define	equal(a1, a2) \\$/
erd_busaddr	../vax/mscp.h	/^#define	erd_busaddr	erd_un1.un_busaddr$/
erd_level	../vax/mscp.h	/^#define	erd_level	erd_un2.un_b[0]$/
erd_retry	../vax/mscp.h	/^#define	erd_retry	erd_un2.un_b[1]$/
erd_sdecyl	../vax/mscp.h	/^#define	erd_sdecyl	erd_un2.un_s$/
erd_unitid	../vax/mscp.h	/^#define	erd_unitid	erd_un1.un_unitid$/
errinfo	../vaxuba/tmscp.c	/^errinfo(st)$/
errmsg	../vaxmba/mt.c	/^static struct errmsg {$/
es_addr	../vaxif/if_ec.c	/^#define	es_addr	es_ac.ac_enaddr		\/* hardware Ethe/
es_if	../vaxif/if_ec.c	/^#define	es_if	es_ac.ac_if		\/* network-visible int/
ether_arp	../netinet/if_ether.h	/^struct	ether_arp {$/
ether_header	../netinet/if_ether.h	/^struct	ether_header {$/
ether_sprintf	../netinet/if_ether.c	/^ether_sprintf(ap)$/
ex_cvecs	../vaxif/if_ex.c	/^struct	ex_cvecs {$/
ex_msg	../vaxif/if_exreg.h	/^struct	ex_msg {$/
ex_setaddr	../vaxif/if_ex.c	/^ex_setaddr(physaddr, unit)$/
ex_softc	../vaxif/if_ex.c	/^struct	ex_softc {$/
exattach	../vaxif/if_ex.c	/^exattach(ui)$/
excdint	../vaxif/if_ex.c	/^excdint(unit)$/
exconfig	../vaxif/if_ex.c	/^exconfig(ui, itype)$/
exdataaddr	../vaxif/if_ex.c	/^#define	exdataaddr(eh, off, type)	((type)(((caddr_/
exdevice	../vaxif/if_exreg.h	/^struct	exdevice {$/
exec	../h/exec.h	/^struct exec {$/
execa	../sys/kern_exec.c	/^struct execa {$/
execv	../sys/kern_exec.c	/^execv()$/
execve	../sys/kern_exec.c	/^execve()$/
exgetcbuf	../vaxif/if_ex.c	/^exgetcbuf(xs)$/
exhangrcv	../vaxif/if_ex.c	/^exhangrcv(unit)$/
exinit	../vaxif/if_ex.c	/^exinit(unit)$/
exioctl	../vaxif/if_ex.c	/^exioctl(ifp, cmd, data)$/
exit	../sys/kern_exit.c	/^exit(rv)$/
exoutput	../vaxif/if_ex.c	/^exoutput(ifp, m0, dst)$/
expand	../sys/vm_proc.c	/^expand(change, region)$/
exprobe	../vaxif/if_ex.c	/^exprobe(reg)$/
exrecv	../vaxif/if_ex.c	/^exrecv(unit, bp)$/
exreset	../vaxif/if_ex.c	/^exreset(unit, uban)$/
exstart	../vaxif/if_ex.c	/^exstart(unit)$/
exwatch	../vaxif/if_ex.c	/^exwatch(unit)$/
falloc	../sys/kern_descrip.c	/^falloc()$/
fchmod	../sys/ufs_syscalls.c	/^fchmod()$/
fchown	../sys/ufs_syscalls.c	/^fchown()$/
fcntl	../sys/kern_descrip.c	/^fcntl()$/
fd_mask	../h/types.h	/^typedef long	fd_mask;$/
fd_set	../h/types.h	/^} fd_set;$/
ffs	../sys/subr_xxx.c	/^ffs(mask)$/
fgetown	../sys/kern_descrip.c	/^fgetown(fp, valuep)$/
file	../h/file.h	/^struct	file {$/
fileops	../h/file.h	/^	struct	fileops {$/
filter	../sys/kern_synch.c	/^#define	filter(loadav) ((2 * (loadav)) \/ (2 * (lo/
fioctl	../sys/kern_descrip.c	/^fioctl(fp, cmd, value)$/
fixctlrmask	../vax/autoconf.c	/^fixctlrmask()$/
flclose	../vax/conf.c	/^#define	flclose	nodev$/
flock	../sys/kern_descrip.c	/^flock()$/
flopen	../vax/conf.c	/^#define	flopen	nodev$/
floperation	../vax/flp.c	/^floperation(rw, uio)$/
flread	../vax/conf.c	/^#define	flread	nodev$/
flstart	../vax/flp.c	/^flstart()$/
flwrite	../vax/conf.c	/^#define	flwrite	nodev$/
fmesg	../vaxmba/mt.c	/^struct fmesg {$/
fodkluster	../sys/vm_page.c	/^fodkluster(p, v0, pte0, pkl, dev, pbn)$/
forceclose	../sys/sys_inode.c	/^forceclose(dev)$/
fork	../sys/kern_fork.c	/^fork()$/
fork1	../sys/kern_fork.c	/^fork1(isvfork)$/
forkstat	../h/vmsystm.h	/^struct	forkstat$/
format_op	../h/disklabel.h	/^struct format_op {$/
fparm_all	../vaxuba/vsreg.h	/^#define	fparm_all	_X._pall$/
fparm_high	../vaxuba/vsreg.h	/^#define	fparm_high	_X._parts._phigh$/
fparm_low	../vaxuba/vsreg.h	/^#define	fparm_low	_X._parts._plow$/
fpte	../vax/pte.h	/^struct fpte$/
fragacct	../sys/ufs_subr.c	/^fragacct(fs, fragmap, fraglist, cnt)$/
fragextend	../sys/ufs_alloc.c	/^fragextend(ip, cg, bprev, osize, nsize)$/
fragnum	../h/fs.h	/^#define fragnum(fs, fsb)	\/* calculates (fsb % fs-/
fragoff	../h/fs.h	/^#define fragoff(fs, loc)	\/* calculates (loc % fs-/
fragroundup	../h/fs.h	/^#define fragroundup(fs, size)	\/* calculates round/
fragstoblks	../h/fs.h	/^#define fragstoblks(fs, frags)	\/* calculates (fra/
frame	../vax/frame.h	/^struct frame {$/
free	../sys/kern_malloc.c	/^free(addr, type)$/
freespace	../h/fs.h	/^#define freespace(fs, percentreserved) \\$/
freeswbuf	../sys/vm_swp.c	/^freeswbuf(bp)$/
fs	../h/fs.h	/^struct	fs$/
fs_cs	../h/fs.h	/^#define fs_cs(fs, indx) \\$/
fs_postbl	../h/fs.h	/^#define fs_postbl(fs, cylno) \\$/
fs_rotbl	../h/fs.h	/^#define fs_rotbl(fs) \\$/
fsbtodb	../h/fs.h	/^#define fsbtodb(fs, b)	((b) << (fs)->fs_fsbtodb)$/
fserr	../sys/ufs_alloc.c	/^fserr(fs, cp)$/
fset	../sys/kern_descrip.c	/^fset(fp, bit, value)$/
fsetown	../sys/kern_descrip.c	/^fsetown(fp, value)$/
fstat	../sys/kern_descrip.c	/^fstat()$/
fsync	../sys/ufs_syscalls.c	/^fsync()$/
ftruncate	../sys/ufs_syscalls.c	/^ftruncate()$/
fubyte	../vax/Locore.c	/^fubyte(base) caddr_t base; { return (0); }$/
fuibyte	../vax/Locore.c	/^fuibyte(base) caddr_t base; { return (0); }$/
fuiword	../vax/Locore.c	/^fuiword(base) caddr_t base; { return (0); }$/
fuword	../vax/Locore.c	/^fuword(base) caddr_t base; { return (0); }$/
gatherstats	../sys/kern_clock.c	/^gatherstats(pc, ps)$/
genericconf	../vax/swapgeneric.c	/^struct	genericconf {$/
getbits	../sys/sys_generic.c	/^#define	getbits(name, x) \\$/
getblk	../sys/ufs_bio.c	/^getblk(dev, blkno, size)$/
getc	../sys/tty_subr.c	/^getc(p)$/
getdlim	../sys/quota_sys.c	/^getdlim(q, dev, addr)$/
getdopt	../sys/kern_descrip.c	/^getdopt()$/
getdtablesize	../sys/kern_descrip.c	/^getdtablesize()$/
geteblk	../sys/ufs_bio.c	/^geteblk(size)$/
geterror	../sys/ufs_bio.c	/^geterror(bp)$/
getf	../sys/kern_descrip.c	/^getf(f)$/
getfs	../sys/ufs_subr.c	/^getfs(dev)$/
getfsx	../sys/ufs_subr.c	/^getfsx(dev)$/
getgid	../sys/kern_prot.c	/^getgid()$/
getgroups	../sys/kern_prot.c	/^getgroups()$/
gethostid	../sys/kern_xxx.c	/^gethostid()$/
gethostname	../sys/kern_xxx.c	/^gethostname()$/
getinode	../sys/ufs_syscalls.c	/^getinode(fdes)$/
getitimer	../sys/kern_time.c	/^getitimer()$/
getmdev	../sys/ufs_mount.c	/^getmdev(pdev, fname)$/
getmemc	../vax/vm_machdep.c	/^getmemc(addr)$/
getnargs	../vax/kdbparam.h	/^#define	getnargs(fp)	(get((fp)+6, DSP)&0xffff)$/
getnewbuf	../sys/ufs_bio.c	/^getnewbuf()$/
getpagesize	../sys/kern_mman.c	/^getpagesize()$/
getpcb	../vax/kdb_machdep.c	/^getpcb(locr0)$/
getpeername	../sys/uipc_syscalls.c	/^getpeername()$/
getpgrp	../sys/kern_prot.c	/^getpgrp()$/
getpid	../sys/kern_prot.c	/^getpid()$/
getprevframe	../vax/kdbparam.h	/^#define	getprevframe(fp) (get((fp)+12, DSP)&~2)	\//
getprevpc	../vax/kdbparam.h	/^#define	getprevpc(fp)	get((fp)+16, DSP)	\/* pc of /
getpriority	../sys/kern_resource.c	/^getpriority()$/
getquota	../sys/quota_kern.c	/^getquota(uid, lookuponly, nodq)$/
getrlimit	../sys/kern_resource.c	/^getrlimit()$/
getrusage	../sys/kern_resource.c	/^getrusage()$/
gets	../vax/swapgeneric.c	/^gets(cp)$/
getsignalpc	../vax/kdbparam.h	/^#define	getsignalpc(fp)	get((fp)+92, DSP)	\/* pc o/
getsock	../sys/uipc_syscalls.c	/^getsock(fdes)$/
getsockname	../sys/uipc_syscalls.c	/^getsockname()$/
getsockopt	../sys/uipc_syscalls.c	/^getsockopt()$/
getswbuf	../sys/vm_swp.c	/^getswbuf(prio)$/
gettimeofday	../sys/kern_time.c	/^gettimeofday()$/
getuid	../sys/kern_prot.c	/^getuid()$/
getvtimes	../sys/kern_xxx.c	/^getvtimes(aru, avt)$/
getw	../sys/tty_subr.c	/^getw(p)$/
getxfile	../sys/kern_exec.c	/^getxfile(ip, ep, nargc, uid, gid)$/
gid_t	../h/types.h	/^typedef	u_short	gid_t;$/
groupmember	../sys/kern_prot.c	/^groupmember(gid)$/
grow	../sys/kern_mman.c	/^grow(sp)$/
gsignal	../sys/kern_sig.c	/^gsignal(pgrp, sig)$/
gtcodecode	../sys/tty_tb.c	/^gtcodecode(tc, cp, tbpos)$/
gtcopos	../h/tablet.h	/^struct	gtcopos {$/
hardclock	../sys/kern_clock.c	/^hardclock(pc, ps)$/
harderr	../sys/subr_prf.c	/^harderr(bp, cp)$/
hashalloc	../sys/ufs_alloc.c	/^hashalloc(ip, cg, pref, size, allocator)$/
hdh_chan	../vaxif/if_hdh.c	/^struct	hdh_chan {		\/* HDH HDX channel structure */
hdh_data	../vaxif/if_hdh.c	/^hdh_data(unit, lcn, cc, rcnt)$/
hdh_iorq	../vaxif/if_hdh.c	/^hdh_iorq(unit, lcn, len, func)$/
hdh_sioq	../vaxif/if_hdh.c	/^struct	hdh_sioq {		\/* Start I\/O queue head struc/
hdh_softc	../vaxif/if_hdh.c	/^struct	hdh_softc {		\/* HDH device dependent struc/
hdh_supr	../vaxif/if_hdh.c	/^hdh_supr(unit, lcn, cc)$/
hdhattach	../vaxif/if_hdh.c	/^hdhattach(ui)$/
hdhinit	../vaxif/if_hdh.c	/^hdhinit(unit)$/
hdhintr	../vaxif/if_hdh.c	/^hdhintr(unit)$/
hdhoutput	../vaxif/if_hdh.c	/^hdhoutput(unit, m)$/
hdhprobe	../vaxif/if_hdh.c	/^hdhprobe(reg)$/
hdhregs	../vaxif/if_hdhreg.h	/^struct hdhregs {			\/* device registers *\/$/
hdhreset	../vaxif/if_hdh.c	/^hdhreset(unit, uban)$/
hmbuf	../netimp/if_imphost.h	/^struct hmbuf {$/
host	../netimp/if_imphost.h	/^struct host {$/
hostcompress	../netimp/if_imphost.c	/^hostcompress(unit)$/
hostenter	../netimp/if_imphost.c	/^hostenter(imp, host, unit)$/
hostflush	../netimp/if_imphost.c	/^hostflush(hp)$/
hostfree	../netimp/if_imphost.h	/^#define	hostfree(hp) { \\$/
hostidle	../netimp/if_imphost.h	/^#define	hostidle(hp)	{ (hp)->h_timer = HOSTTIMER; /
hostlookup	../netimp/if_imphost.c	/^hostlookup(imp, host, unit)$/
hostrelease	../netimp/if_imphost.c	/^hostrelease(hp)$/
hostreset	../netimp/if_imphost.c	/^hostreset(unit)$/
hostslowtimo	../netimp/if_imphost.c	/^hostslowtimo()$/
howmany	../h/param.h	/^#define	howmany(x, y)	(((x)+((y)-1))\/(y))$/
hpattach	../vaxmba/hp.c	/^hpattach(mi, slave)$/
hpclose	../vaxmba/hp.c	/^hpclose(dev, flags, fmt)$/
hpdevice	../vaxmba/hpreg.h	/^struct hpdevice$/
hpdtint	../vaxmba/hp.c	/^hpdtint(mi, mbsr)$/
hpdump	../vaxmba/hp.c	/^hpdump(dev)$/
hpecc	../vaxmba/hp.c	/^hpecc(mi, flag)$/
hpformat	../vaxmba/hp.c	/^hpformat(bp)$/
hphr	../vaxmba/hpreg.h	/^#define	hphr	hpcc		\/* holding register *\/$/
hpinit	../vaxmba/hp.c	/^hpinit(dev, flags)$/
hpioctl	../vaxmba/hp.c	/^hpioctl(dev, cmd, data, flag)$/
hpmaptype	../vaxmba/hp.c	/^hpmaptype(mi, lp)$/
hpminor	../vaxmba/hp.c	/^#define hpminor(unit, part)	(((unit) << 3) | (part/
hpopen	../vaxmba/hp.c	/^hpopen(dev, flags, fmt)$/
hppart	../vaxmba/hp.c	/^#define hppart(dev)	(minor(dev) & 07)$/
hpsize	../vaxmba/hp.c	/^hpsize(dev)$/
hpsoftc	../vaxmba/hp.c	/^struct	hpsoftc {$/
hpst	../vaxmba/hp.c	/^struct hpst {$/
hpstart	../vaxmba/hp.c	/^hpstart(mi)$/
hpstrategy	../vaxmba/hp.c	/^hpstrategy(bp)$/
hpte	../vax/pte.h	/^struct hpte$/
hpunit	../vaxmba/hp.c	/^#define hpunit(dev)	(minor(dev) >> 3)$/
hpustart	../vaxmba/hp.c	/^hpustart(mi)$/
hpwait	../vaxmba/hp.c	/^hpwait(mi)$/
htattach	../vaxmba/ht.c	/^htattach(mi)$/
htclose	../vaxmba/ht.c	/^htclose(dev, flag)$/
htcommand	../vaxmba/ht.c	/^htcommand(dev, com, count)$/
htdevice	../vaxmba/htreg.h	/^struct	htdevice$/
htdtint	../vaxmba/ht.c	/^htdtint(mi, mbsr)$/
htdump	../vaxmba/ht.c	/^htdump()$/
htdwrite	../vaxmba/ht.c	/^htdwrite(dbuf, num, htaddr, mp)$/
hteof	../vaxmba/ht.c	/^hteof(htaddr)$/
htioctl	../vaxmba/ht.c	/^htioctl(dev, cmd, data, flag)$/
htndtint	../vaxmba/ht.c	/^htndtint(mi)$/
htonl	../vax/Locore.c	/^u_long htonl(l) u_long l; { return ((u_long)l); }$/
htons	../vax/Locore.c	/^u_short htons(s) u_short s; { return ((u_short)s);/
htopen	../vaxmba/ht.c	/^htopen(dev, flag)$/
htslave	../vaxmba/ht.c	/^htslave(mi, ms, sn)$/
htstrategy	../vaxmba/ht.c	/^htstrategy(bp)$/
htustart	../vaxmba/ht.c	/^htustart(mi)$/
htwait	../vaxmba/ht.c	/^htwait(htaddr)$/
hy_hdr	../vaxif/if_hy.h	/^struct	hy_hdr {$/
hy_log	../vaxif/if_hy.h	/^struct hy_log {$/
hy_route	../vaxif/if_hy.h	/^struct hy_route {$/
hy_softc	../vaxif/if_hy.c	/^struct	hy_softc {$/
hy_stat	../vaxif/if_hy.h	/^struct	hy_stat {$/
hy_status	../vaxif/if_hy.h	/^struct hy_status {$/
hyact	../vaxif/if_hy.c	/^hyact(ui)$/
hyattach	../vaxif/if_hy.c	/^hyattach(ui)$/
hycancel	../vaxif/if_hy.c	/^hycancel(ui)$/
hydevice	../vaxif/if_hyreg.h	/^struct	hydevice {$/
hyh_from	../vaxif/if_hy.h	/^#define hyh_from	hyh_ufrom.hyh_addr$/
hyh_from_adapter	../vaxif/if_hy.h	/^#define hyh_from_adapter hyh_ufrom.hyh_baddr[0]$/
hyh_from_port	../vaxif/if_hy.h	/^#define hyh_from_port	hyh_ufrom.hyh_baddr[1]$/
hyh_to	../vaxif/if_hy.h	/^#define hyh_to		hyh_uto.hyh_addr$/
hyh_to_adapter	../vaxif/if_hy.h	/^#define hyh_to_adapter	hyh_uto.hyh_baddr[0]$/
hyh_to_port	../vaxif/if_hy.h	/^#define hyh_to_port	hyh_uto.hyh_baddr[1]$/
hyinit	../vaxif/if_hy.c	/^hyinit(unit)$/
hyint	../vaxif/if_hy.c	/^hyint(unit)$/
hyioctl	../vaxif/if_hy.c	/^hyioctl(ifp, cmd, data)$/
hylog	../vaxif/if_hy.c	/^hylog(code, len, ptr)$/
hylsetget	../vaxif/if_hy.h	/^struct	hylsetget {$/
hym_access	../vaxif/if_hy.h	/^#define hym_access	hym_h.hyh_access$/
hym_ctl	../vaxif/if_hy.h	/^#define hym_ctl		hym_h.hyh_ctl$/
hym_from	../vaxif/if_hy.h	/^#define hym_from	hym_h.hyh_from$/
hym_from_adapter	../vaxif/if_hy.h	/^#define hym_from_adapter hym_h.hyh_from_adapter$/
hym_from_port	../vaxif/if_hy.h	/^#define hym_from_port	hym_h.hyh_from_port$/
hym_hdr	../vaxif/if_hy.h	/^struct	hym_hdr {$/
hym_mplen	../vaxif/if_hy.h	/^#define hym_mplen	hym_d.hymd_mplen$/
hym_param	../vaxif/if_hy.h	/^#define hym_param	hym_h.hyh_param$/
hym_to	../vaxif/if_hy.h	/^#define hym_to		hym_h.hyh_to$/
hym_to_adapter	../vaxif/if_hy.h	/^#define hym_to_adapter	hym_h.hyh_to_adapter$/
hym_to_port	../vaxif/if_hy.h	/^#define hym_to_port	hym_h.hyh_to_port$/
hym_type	../vaxif/if_hy.h	/^#define hym_type	hym_h.hyh_type$/
hyoutput	../vaxif/if_hy.c	/^hyoutput(ifp, m0, dst)$/
hyprintdata	../vaxif/if_hy.c	/^hyprintdata(cp, len)$/
hyprobe	../vaxif/if_hy.c	/^hyprobe(reg)$/
hyr_access	../vaxif/if_hy.h	/^#define hyr_access	hyr_u.hyr_d.hyru_access$/
hyr_ctl	../vaxif/if_hy.h	/^#define hyr_ctl		hyr_u.hyr_d.hyru_ctl$/
hyr_dst	../vaxif/if_hy.h	/^#define hyr_dst		hyr_u.hyr_d.hyru_dst$/
hyr_egate	../vaxif/if_hy.h	/^#define hyr_egate	hyr_u.hyr_i.hyru_egate$/
hyr_hash	../vaxif/if_hy.h	/^	struct hyr_hash {$/
hyr_nextgate	../vaxif/if_hy.h	/^#define hyr_nextgate	hyr_u.hyr_i.hyru_nextgate$/
hyr_pgate	../vaxif/if_hy.h	/^#define hyr_pgate	hyr_u.hyr_i.hyru_pgate$/
hyrecvdata	../vaxif/if_hy.c	/^hyrecvdata(ui, hym, len)$/
hyreset	../vaxif/if_hy.c	/^hyreset(unit, uban)$/
hyroute	../vaxif/if_hy.c	/^hyroute(ifp, dest, hym)$/
hyrsetget	../vaxif/if_hy.h	/^struct hyrsetget {$/
hystart	../vaxif/if_hy.c	/^hystart(ui, cmd, count, ubaddr)$/
hywatch	../vaxif/if_hy.c	/^hywatch(unit)$/
hyxmitdata	../vaxif/if_hy.c	/^hyxmitdata(ui)$/
hzto	../sys/kern_clock.c	/^hzto(tv)$/
i_atime	../h/inode.h	/^#define	i_atime		i_ic.ic_atime$/
i_back	../h/inode.h	/^#define	i_back		i_chain[1]$/
i_blocks	../h/inode.h	/^#define i_blocks	i_ic.ic_blocks$/
i_ctime	../h/inode.h	/^#define	i_ctime		i_ic.ic_ctime$/
i_db	../h/inode.h	/^#define	i_db		i_ic.ic_db$/
i_forw	../h/inode.h	/^#define	i_forw		i_chain[0]$/
i_freeb	../h/inode.h	/^#define	i_freeb		i_un.i_fr.if_freeb$/
i_freef	../h/inode.h	/^#define	i_freef		i_un.i_fr.if_freef$/
i_gid	../h/inode.h	/^#define	i_gid		i_ic.ic_gid$/
i_ib	../h/inode.h	/^#define	i_ib		i_ic.ic_ib$/
i_lastr	../h/inode.h	/^#define	i_lastr		i_un.if_lastr$/
i_mode	../h/inode.h	/^#define	i_mode		i_ic.ic_mode$/
i_mtime	../h/inode.h	/^#define	i_mtime		i_ic.ic_mtime$/
i_nlink	../h/inode.h	/^#define	i_nlink		i_ic.ic_nlink$/
i_rdev	../h/inode.h	/^#define	i_rdev		i_ic.ic_db[0]$/
i_size	../h/inode.h	/^#define	i_size		i_ic.ic_size.val[0]$/
i_socket	../h/inode.h	/^#define	i_socket	i_un.is_socket$/
i_uid	../h/inode.h	/^#define	i_uid		i_ic.ic_uid$/
ia_addr	../netinet/in_var.h	/^#define	ia_addr	ia_ifa.ifa_addr$/
ia_broadaddr	../netinet/in_var.h	/^#define	ia_broadaddr	ia_ifa.ifa_broadaddr$/
ia_dstaddr	../netinet/in_var.h	/^#define	ia_dstaddr	ia_ifa.ifa_dstaddr$/
ia_ifp	../netinet/in_var.h	/^#define	ia_ifp		ia_ifa.ifa_ifp$/
ialloc	../sys/ufs_alloc.c	/^ialloc(pip, ipref, mode)$/
ialloccg	../sys/ufs_alloc.c	/^ialloccg(ip, cg, ipref, mode)$/
iba	../vaxif/if_accreg.h	/^#define	iba	input.ba$/
icmp	../netinet/ip_icmp.h	/^struct icmp {$/
icmp_data	../netinet/ip_icmp.h	/^#define	icmp_data	icmp_dun.id_data$/
icmp_error	../netinet/ip_icmp.c	/^icmp_error(oip, type, code, ifp, dest)$/
icmp_gwaddr	../netinet/ip_icmp.h	/^#define	icmp_gwaddr	icmp_hun.ih_gwaddr$/
icmp_id	../netinet/ip_icmp.h	/^#define	icmp_id		icmp_hun.ih_idseq.icd_id$/
icmp_input	../netinet/ip_icmp.c	/^icmp_input(m, ifp)$/
icmp_ip	../netinet/ip_icmp.h	/^#define	icmp_ip		icmp_dun.id_ip.idi_ip$/
icmp_mask	../netinet/ip_icmp.h	/^#define	icmp_mask	icmp_dun.id_mask$/
icmp_otime	../netinet/ip_icmp.h	/^#define	icmp_otime	icmp_dun.id_ts.its_otime$/
icmp_pptr	../netinet/ip_icmp.h	/^#define	icmp_pptr	icmp_hun.ih_pptr$/
icmp_reflect	../netinet/ip_icmp.c	/^icmp_reflect(ip, ifp)$/
icmp_rtime	../netinet/ip_icmp.h	/^#define	icmp_rtime	icmp_dun.id_ts.its_rtime$/
icmp_send	../netinet/ip_icmp.c	/^icmp_send(ip, opts)$/
icmp_seq	../netinet/ip_icmp.h	/^#define	icmp_seq	icmp_hun.ih_idseq.icd_seq$/
icmp_ttime	../netinet/ip_icmp.h	/^#define	icmp_ttime	icmp_dun.id_ts.its_ttime$/
icmp_void	../netinet/ip_icmp.h	/^#define	icmp_void	icmp_hun.ih_void$/
icmpstat	../netinet/icmp_var.h	/^struct	icmpstat {$/
icommon	../h/inode.h	/^	struct 	icommon$/
icsr	../vaxif/if_accreg.h	/^#define	icsr	input.csr$/
id_ip	../netinet/ip_icmp.h	/^		struct id_ip  {$/
id_ts	../netinet/ip_icmp.h	/^		struct id_ts {$/
idc_dar	../vaxuba/idc.c	/^	union idc_dar {$/
idc_softc	../vaxuba/idc.c	/^struct idc_softc {$/
idcattach	../vaxuba/idc.c	/^idcattach(ui)$/
idcdevice	../vaxuba/idcreg.h	/^struct idcdevice$/
idcdgo	../vaxuba/idc.c	/^idcdgo(um)$/
idcdump	../vaxuba/idc.c	/^idcdump(dev)$/
idcecc	../vaxuba/idc.c	/^idcecc(ui)$/
idcintr	../vaxuba/idc.c	/^idcintr(idc)$/
idcopen	../vaxuba/idc.c	/^idcopen(dev)$/
idcprobe	../vaxuba/idc.c	/^idcprobe(reg)$/
idcreset	../vaxuba/idc.c	/^idcreset(uban)$/
idcsize	../vaxuba/idc.c	/^idcsize(dev)$/
idcslave	../vaxuba/idc.c	/^idcslave(ui, reg)$/
idcst	../vaxuba/idc.c	/^struct	idcst {$/
idcstart	../vaxuba/idc.c	/^idcstart(um)$/
idcstrategy	../vaxuba/idc.c	/^idcstrategy(bp)$/
idcunit	../vaxuba/idc.c	/^#define idcunit(dev)	(minor(dev) >> 3)$/
idcustart	../vaxuba/idc.c	/^idcustart(ui)$/
idcwait	../vaxuba/idc.c	/^idcwait(addr, n)$/
idcwatch	../vaxuba/idc.c	/^idcwatch()$/
idp	../netns/idp.h	/^struct idp {$/
idp_abort	../netns/idp_usrreq.c	/^idp_abort(nsp)$/
idp_ctlinput	../netns/ns_input.c	/^idp_ctlinput(cmd, arg)$/
idp_ctloutput	../netns/idp_usrreq.c	/^idp_ctloutput(req, so, level, name, value)$/
idp_do_route	../netns/ns_input.c	/^idp_do_route(src, ro)$/
idp_drop	../netns/idp_usrreq.c	/^idp_drop(nsp, errno)$/
idp_forward	../netns/ns_input.c	/^idp_forward(idp)$/
idp_input	../netns/idp_usrreq.c	/^idp_input(m, nsp, ifp)$/
idp_output	../netns/idp_usrreq.c	/^idp_output(nsp, m0)$/
idp_raw_usrreq	../netns/idp_usrreq.c	/^idp_raw_usrreq(so, req, m, nam, rights)$/
idp_undo_route	../netns/ns_input.c	/^idp_undo_route(ro)$/
idp_usrreq	../netns/idp_usrreq.c	/^idp_usrreq(so, req, m, nam, rights)$/
idpip_input	../netns/ns_ip.c	/^idpip_input(m, ifp)$/
idpstat	../netns/idp_var.h	/^struct	idpstat {$/
if_attach	../net/if.c	/^if_attach(ifp)$/
if_down	../net/if.c	/^if_down(ifp)$/
if_qflush	../net/if.c	/^if_qflush(ifq)$/
if_rubaget	../vaxif/if_uba.h	/^#define	if_rubaget(ifu, totlen, off0, ifp) \\$/
if_slowtimo	../net/if.c	/^if_slowtimo()$/
if_ubaalloc	../vaxif/if_uba.c	/^if_ubaalloc(ifu, ifrw, nmr)$/
if_ubaget	../vaxif/if_uba.c	/^if_ubaget(ifu, ifr, totlen, off0, ifp)$/
if_ubainit	../vaxif/if_uba.h	/^#define	if_ubainit(ifuba, uban, hlen, nmr) \\$/
if_ubaminit	../vaxif/if_uba.c	/^if_ubaminit(ifu, uban, hlen, nmr, ifr, nr, ifw, nw/
if_ubaput	../vaxif/if_uba.c	/^if_ubaput(ifu, ifw, m)$/
if_wubaput	../vaxif/if_uba.h	/^#define	if_wubaput(ifu, m) \\$/
ifa_broadaddr	../net/if.h	/^#define	ifa_broadaddr	ifa_ifu.ifu_broadaddr	\/* br/
ifa_dstaddr	../net/if.h	/^#define	ifa_dstaddr	ifa_ifu.ifu_dstaddr	\/* other /
ifa_ifwithaddr	../net/if.c	/^ifa_ifwithaddr(addr)$/
ifa_ifwithaf	../net/if.c	/^ifa_ifwithaf(af)$/
ifa_ifwithdstaddr	../net/if.c	/^ifa_ifwithdstaddr(addr)$/
ifa_ifwithnet	../net/if.c	/^ifa_ifwithnet(addr)$/
ifaddr	../net/if.h	/^struct ifaddr {$/
ifc_buf	../net/if.h	/^#define	ifc_buf	ifc_ifcu.ifcu_buf	\/* buffer addre/
ifc_req	../net/if.h	/^#define	ifc_req	ifc_ifcu.ifcu_req	\/* array of str/
ifconf	../net/if.c	/^ifconf(cmd, data)$/
ifind	../sys/ufs_inode.c	/^ifind(dev, ino)$/
ifinit	../net/if.c	/^ifinit()$/
ifioctl	../net/if.c	/^ifioctl(so, cmd, data)$/
iflush	../sys/ufs_inode.c	/^iflush(dev, iq)$/
ifnet	../net/if.h	/^struct ifnet {$/
ifnet_en	../netns/ns_ip.c	/^struct ifnet_en {$/
ifptoia	../netinet/ip_icmp.c	/^ifptoia(ifp)$/
ifqueue	../net/if.h	/^	struct	ifqueue {$/
ifr_addr	../net/if.h	/^#define	ifr_addr	ifr_ifru.ifru_addr	\/* address */
ifr_broadaddr	../net/if.h	/^#define	ifr_broadaddr	ifr_ifru.ifru_broadaddr	\/* /
ifr_data	../net/if.h	/^#define	ifr_data	ifr_ifru.ifru_data	\/* for use by/
ifr_dstaddr	../net/if.h	/^#define	ifr_dstaddr	ifr_ifru.ifru_dstaddr	\/* othe/
ifr_flags	../net/if.h	/^#define	ifr_flags	ifr_ifru.ifru_flags	\/* flags */
ifr_metric	../net/if.h	/^#define	ifr_metric	ifr_ifru.ifru_metric	\/* metric/
ifree	../sys/ufs_alloc.c	/^ifree(ip, ino, mode)$/
ifreq	../net/if.h	/^struct	ifreq {$/
ifrw	../vaxif/if_uba.h	/^struct ifrw {$/
ifu_flags	../vaxif/if_uba.h	/^#define	ifu_flags	ifu_info.iff_flags$/
ifu_hlen	../vaxif/if_uba.h	/^#define	ifu_hlen	ifu_info.iff_hlen$/
ifu_uba	../vaxif/if_uba.h	/^#define	ifu_uba		ifu_info.iff_uba$/
ifu_ubamr	../vaxif/if_uba.h	/^#define	ifu_ubamr	ifu_info.iff_ubamr$/
ifu_uban	../vaxif/if_uba.h	/^#define	ifu_uban	ifu_info.iff_uban$/
ifu_w	../vaxif/if_uba.h	/^#define	ifu_w		ifu_xmt.ifrw$/
ifu_xtofree	../vaxif/if_uba.h	/^#define	ifu_xtofree	ifu_xmt.ifw_xtofree$/
ifuba	../vaxif/if_uba.h	/^struct ifuba {$/
ifubareset	../net/if.c	/^ifubareset(uban)$/
ifubinfo	../vaxif/if_uba.h	/^struct	ifubinfo {$/
ifunit	../net/if.c	/^ifunit(name)$/
ifw_addr	../vaxif/if_uba.h	/^#define	ifw_addr	ifrw.ifrw_addr$/
ifw_bdp	../vaxif/if_uba.h	/^#define	ifw_bdp		ifrw.ifrw_bdp$/
ifw_flags	../vaxif/if_uba.h	/^#define	ifw_flags	ifrw.ifrw_flags$/
ifw_info	../vaxif/if_uba.h	/^#define	ifw_info	ifrw.ifrw_info$/
ifw_mr	../vaxif/if_uba.h	/^#define	ifw_mr		ifrw.ifrw_mr$/
ifw_proto	../vaxif/if_uba.h	/^#define	ifw_proto	ifrw.ifrw_proto$/
ifxmt	../vaxif/if_uba.h	/^struct ifxmt {$/
iget	../sys/ufs_inode.c	/^iget(dev, fs, ino)$/
igrab	../sys/ufs_inode.c	/^igrab(ip)$/
ih_idseq	../netinet/ip_icmp.h	/^		struct ih_idseq {$/
ihead	../sys/ufs_inode.c	/^union ihead {				\/* inode LRU cache, Chris Maltby/
ihinit	../sys/ufs_inode.c	/^ihinit()$/
iiclose	../vax/conf.c	/^#define iiclose nodev$/
iiioctl	../vax/conf.c	/^#define iiioctl nodev$/
iiopen	../vax/conf.c	/^#define iiopen nodev$/
ik_softc	../vaxuba/ik.c	/^struct ik_softc {$/
ikattach	../vaxuba/ik.c	/^ikattach(ui)$/
ikclose	../vaxuba/ik.c	/^ikclose(dev)$/
ikdevice	../vaxuba/ikreg.h	/^struct ikdevice {$/
ikintr	../vaxuba/ik.c	/^ikintr(dev)$/
ikioctl	../vaxuba/ik.c	/^ikioctl(dev, cmd, data, flag)$/
ikminphys	../vaxuba/ik.c	/^ikminphys(bp)$/
ikopen	../vaxuba/ik.c	/^ikopen(dev)$/
ikprobe	../vaxuba/ik.c	/^ikprobe(reg)$/
ikread	../vaxuba/ik.c	/^ikread(dev, uio)$/
ikreset	../vaxuba/ik.c	/^ikreset(uban)$/
ikstart	../vaxuba/ik.c	/^ikstart(ui)$/
ikstrategy	../vaxuba/ik.c	/^ikstrategy(bp)$/
ikwrite	../vaxuba/ik.c	/^ikwrite(dev, uio)$/
il_collis	../vaxif/if_il.h	/^struct	il_collis {$/
il_flags	../netimp/if_imp.h	/^#define	il_flags	il_dl.dl_flags$/
il_format	../netimp/if_imp.h	/^#define	il_format	il_dl.dl_format$/
il_host	../netimp/if_imp.h	/^#define	il_host		il_dl.dl_host$/
il_htype	../netimp/if_imp.h	/^#define	il_htype	il_dl.dl_htype$/
il_imp	../netimp/if_imp.h	/^#define	il_imp		il_dl.dl_imp$/
il_link	../netimp/if_imp.h	/^#define	il_link		il_dl.dl_link$/
il_mtype	../netimp/if_imp.h	/^#define	il_mtype	il_dl.dl_mtype$/
il_network	../netimp/if_imp.h	/^#define	il_network	il_dl.dl_network$/
il_rheader	../vaxif/if_il.h	/^struct	il_rheader {$/
il_setaddr	../vaxif/if_il.c	/^il_setaddr(physaddr, unit)$/
il_softc	../vaxif/if_il.c	/^struct	il_softc {$/
il_stats	../vaxif/if_il.h	/^struct	il_stats {$/
il_subtype	../netimp/if_imp.h	/^#define	il_subtype	il_dl.dl_subtype$/
ilattach	../vaxif/if_il.c	/^ilattach(ui)$/
ilcint	../vaxif/if_il.c	/^ilcint(unit)$/
ildataaddr	../vaxif/if_il.c	/^#define	ildataaddr(il, off, type)	((type)(((caddr_/
ildevice	../vaxif/if_ilreg.h	/^struct ildevice {$/
ilinit	../vaxif/if_il.c	/^ilinit(unit)$/
ilioctl	../vaxif/if_il.c	/^ilioctl(ifp, cmd, data)$/
ilock	../sys/ufs_inode.c	/^ilock(ip)$/
iloutput	../vaxif/if_il.c	/^iloutput(ifp, m0, dst)$/
ilprobe	../vaxif/if_il.c	/^ilprobe(reg)$/
ilreset	../vaxif/if_il.c	/^ilreset(unit, uban)$/
ilrint	../vaxif/if_il.c	/^ilrint(unit)$/
ilstart	../vaxif/if_il.c	/^ilstart(dev)$/
iltotal	../vaxif/if_il.c	/^iltotal(is)$/
ilwait	../vaxif/if_il.c	/^ilwait(ui, op)$/
ilwatch	../vaxif/if_il.c	/^ilwatch(unit)$/
imax	../sys/subr_xxx.c	/^imax(a, b)$/
imin	../sys/subr_xxx.c	/^imin(a, b)$/
imp_addr_to_leader	../netimp/if_imp.c	/^imp_addr_to_leader(imp, a)$/
imp_leader	../netimp/if_imp.h	/^struct imp_leader {$/
imp_leader_to_addr	../netimp/if_imp.c	/^imp_leader_to_addr(ap, cp, ifp)$/
imp_softc	../netimp/if_imp.h	/^struct imp_softc {$/
impattach	../netimp/if_imp.c	/^impattach(hwname, hwunit, reset)$/
impcb	../netimp/if_imp.h	/^struct impcb {$/
impdown	../netimp/if_imp.c	/^impdown(sc)$/
impinit	../netimp/if_imp.c	/^impinit(unit)$/
impinput	../netimp/if_imp.c	/^impinput(unit, m)$/
impintr	../netimp/if_imp.c	/^impintr()$/
impioctl	../netimp/if_imp.c	/^impioctl(ifp, cmd, data)$/
impmsg	../netimp/if_imp.c	/^impmsg(sc, fmt, a1, a2, a3)$/
impnoops	../netimp/if_imp.c	/^impnoops(sc)             $/
impoutput	../netimp/if_imp.c	/^impoutput(ifp, m0, dst)$/
imprestarthost	../netimp/if_imp.c	/^imprestarthost(sc, hp)$/
impsnd	../netimp/if_imp.c	/^impsnd(ifp, m)             $/
impstart	../netimp/if_imp.c	/^impstart(sc)$/
impstarthost	../netimp/if_imp.c	/^impstarthost(sc, hp)$/
imptimo	../netimp/if_imp.c	/^imptimo(unit)$/
in_addr	../netinet/in.h	/^struct in_addr {$/
in_arpinput	../netinet/if_ether.c	/^in_arpinput(ac, m)$/
in_broadcast	../netinet/in.c	/^in_broadcast(in)$/
in_canforward	../netinet/in.c	/^in_canforward(in)$/
in_cksum	../vax/in_cksum.c	/^in_cksum(m, len)$/
in_cksum_c	../netinet/in_cksum.c	/^in_cksum_c(m, len)$/
in_control	../netinet/in.c	/^in_control(so, cmd, data, ifp)$/
in_iaonnetof	../netinet/in.c	/^in_iaonnetof(net)$/
in_ifaddr	../netinet/in_var.h	/^struct in_ifaddr {$/
in_ifinit	../netinet/in.c	/^in_ifinit(ifp, ia, sin)$/
in_lnaof	../netinet/in.c	/^in_lnaof(in)$/
in_localaddr	../netinet/in.c	/^in_localaddr(in)$/
in_losing	../netinet/in_pcb.c	/^in_losing(inp)$/
in_netof	../netinet/in.c	/^in_netof(in)$/
in_pcballoc	../netinet/in_pcb.c	/^in_pcballoc(so, head)$/
in_pcbbind	../netinet/in_pcb.c	/^in_pcbbind(inp, nam)$/
in_pcbconnect	../netinet/in_pcb.c	/^in_pcbconnect(inp, nam)$/
in_pcbdetach	../netinet/in_pcb.c	/^in_pcbdetach(inp)$/
in_pcbdisconnect	../netinet/in_pcb.c	/^in_pcbdisconnect(inp)$/
in_pcblookup	../netinet/in_pcb.c	/^in_pcblookup(head, faddr, fport, laddr, lport, fla/
in_pcbnotify	../netinet/in_pcb.c	/^in_pcbnotify(head, dst, errno, notify)$/
in_rtchange	../netinet/in_pcb.c	/^in_rtchange(inp)$/
in_setpeeraddr	../netinet/in_pcb.c	/^in_setpeeraddr(inp, nam)$/
in_setsockaddr	../netinet/in_pcb.c	/^in_setsockaddr(inp, nam)$/
inc	../vaxuba/lpa.c	/^#define inc(v)		(sc->v = ((sc->v + 1) % sc->sc_nbu/
incore	../sys/ufs_bio.c	/^incore(dev, blkno)$/
indirtrunc	../sys/ufs_inode.c	/^indirtrunc(ip, bn, lastbn, level)$/
inet_hash	../netinet/in.c	/^inet_hash(sin, hp)$/
inet_netmatch	../netinet/in.c	/^inet_netmatch(sin1, sin2)$/
inferior	../sys/kern_proc.c	/^inferior(p)$/
initcpu	../vax/machdep.c	/^initcpu()$/
initp1br	../h/vmmac.h	/^#define	initp1br(x)	((x) - P1PAGES)$/
initp2br	../h/vmmac.h	/^#define	initp2br(x)	((x) - P2PAGES)$/
inittodr	../vax/clock.c	/^inittodr(base)$/
ino_clone	../sys/sys_inode.c	/^ino_clone()$/
ino_close	../sys/sys_inode.c	/^ino_close(fp)$/
ino_ioctl	../sys/sys_inode.c	/^ino_ioctl(fp, com, data)$/
ino_lock	../sys/sys_inode.c	/^ino_lock(fp, cmd)$/
ino_rw	../sys/sys_inode.c	/^ino_rw(fp, rw, uio)$/
ino_select	../sys/sys_inode.c	/^ino_select(fp, which)$/
ino_stat	../sys/sys_inode.c	/^ino_stat(ip, sb)$/
ino_t	../h/types.h	/^typedef	u_long	ino_t;$/
ino_unlock	../sys/sys_inode.c	/^ino_unlock(fp, kind)$/
inode	../h/inode.h	/^struct inode {$/
inoquota	../sys/quota_ufs.c	/^inoquota(ip)$/
inpcb	../netinet/in_pcb.h	/^struct inpcb {$/
insque	../h/systm.h	/^#define	insque(q,p)	_insque((caddr_t)q,(caddr_t)p)/
insregname	../vax/kdb_opset.c	/^insregname(regnumber)$/
insttab	../vax/kdb_opset.c	/^struct insttab {$/
intotcpcb	../netinet/tcp_var.h	/^#define	intotcpcb(ip)	((struct tcpcb *)(ip)->inp_p/
intr_diagnostic	../vaxuba/vsreg.h	/^#define	intr_diagnostic	_X._bits._diagnostic	\/* n/
intr_error	../vaxuba/vsreg.h	/^#define	intr_error	_X._bits._error$/
intr_reason	../vaxuba/vsreg.h	/^#define	intr_reason	_X._bits._reason$/
intr_reg	../vaxuba/vsreg.h	/^#define	intr_reg	_X._register$/
ioa	../vax/ioa.h	/^struct	ioa {$/
ioaccess	../vax/autoconf.c	/^ioaccess(physa, pte, size)$/
ioacsr	../vax/ioa.h	/^	union ioacsr {$/
iobus	../vax/cpu.h	/^struct iobus {$/
iocb	../vaxuba/lpa.c	/^	struct iocb {$/
ioctl	../sys/sys_generic.c	/^ioctl()$/
iodone	../h/buf.h	/^#define	iodone	biodone$/
iovec	../h/uio.h	/^struct iovec {$/
iovect	../vaxif/if_ddnreg.h	/^#define	iovect	iochn$/
iowait	../h/buf.h	/^#define	iowait	biowait$/
ip	../netimp/if_imp.c	/^#define	ip	((struct imp_leader *)cp)$/
ip_ctloutput	../netinet/ip_output.c	/^ip_ctloutput(op, so, level, optname, m)$/
ip_deq	../netinet/ip_input.c	/^ip_deq(p)$/
ip_dooptions	../netinet/ip_input.c	/^ip_dooptions(ip, ifp)$/
ip_drain	../netinet/ip_input.c	/^ip_drain()$/
ip_enq	../netinet/ip_input.c	/^ip_enq(p, prev)$/
ip_forward	../netinet/ip_input.c	/^ip_forward(ip, ifp)$/
ip_freef	../netinet/ip_input.c	/^ip_freef(fp)$/
ip_init	../netinet/ip_input.c	/^ip_init()$/
ip_insertoptions	../netinet/ip_output.c	/^ip_insertoptions(m, opt, phlen)$/
ip_optcopy	../netinet/ip_output.c	/^ip_optcopy(ip, jp)$/
ip_output	../netinet/ip_output.c	/^ip_output(m0, opt, ro, flags)$/
ip_pcbopts	../netinet/ip_output.c	/^ip_pcbopts(pcbopt, m)$/
ip_reass	../netinet/ip_input.c	/^ip_reass(ip, fp)$/
ip_rtaddr	../netinet/ip_input.c	/^ip_rtaddr(dst)$/
ip_slowtimo	../netinet/ip_input.c	/^ip_slowtimo()$/
ip_srcroute	../netinet/ip_input.c	/^ip_srcroute()$/
ip_srcrt	../netinet/ip_input.c	/^static	struct ip_srcrt {$/
ip_stripoptions	../netinet/ip_input.c	/^ip_stripoptions(ip, mopt)$/
ip_timestamp	../netinet/ip.h	/^struct	ip_timestamp {$/
ipasfrag	../netinet/ip_var.h	/^struct	ipasfrag {$/
ipintr	../netinet/ip_input.c	/^ipintr()$/
ipoption	../netinet/ip_var.h	/^struct ipoption {$/
ipovly	../netinet/ip_var.h	/^struct ipovly {$/
ipq	../netinet/ip_var.h	/^struct ipq {$/
ipstat	../netinet/ip_var.h	/^struct	ipstat {$/
ipt_ta	../netinet/ip.h	/^		struct	ipt_ta {$/
ipt_timestamp	../netinet/ip.h	/^	union ipt_timestamp {$/
iptime	../netinet/ip_icmp.c	/^iptime()$/
iput	../sys/ufs_inode.c	/^iput(ip)$/
irele	../sys/ufs_inode.c	/^irele(ip)$/
is_addr	../vaxif/if_il.c	/^#define	is_addr	is_ac.ac_enaddr		\/* hardware Ethe/
is_if	../vaxif/if_il.c	/^#define	is_if	is_ac.ac_if		\/* network-visible int/
isadpte	../h/vmmac.h	/^#define	isadpte(p, pte)		(!isaspte(p, pte) && !isa/
isadsv	../h/vmmac.h	/^#define	isadsv(p, v)	((v) >= stoc(ctos((p)->p_tsiz/
isaspte	../h/vmmac.h	/^#define	isaspte(p, pte)		((pte) > sptopte(p, (p)->/
isassv	../h/vmmac.h	/^#define	isassv(p, v)	((v) >= BTOPUSRSTACK - (p)->p/
isatpte	../h/vmmac.h	/^#define	isatpte(p, pte)		((pte) < dptopte(p, 0))$/
isatsv	../h/vmmac.h	/^#define	isatsv(p, v)	((v) < (p)->p_tsize)$/
isbad	../vax/dkbad.c	/^isbad(bt, cyl, trk, sec)$/
isblock	../sys/ufs_subr.c	/^isblock(fs, cp, h)$/
isclr	../h/param.h	/^#define	isclr(a,i)	(((a)[(i)\/NBBY] & (1<<((i)%NBB/
ishiddenreg	../vax/kdbparam.h	/^#define	ishiddenreg(p)	((p) <= &reglist[8])$/
isset	../h/param.h	/^#define	isset(a,i)	((a)[(i)\/NBBY] & (1<<((i)%NBBY/
issig	../sys/kern_sig.c	/^issig()$/
issignalpc	../vax/kdbparam.h	/^#define	issignalpc(pc)	(MAXSTOR < (pc) && (pc) < M/
itimerdecr	../sys/kern_time.c	/^itimerdecr(itp, usec)$/
itimerfix	../sys/kern_time.c	/^itimerfix(tv)$/
itimerval	../h/time.h	/^struct	itimerval {$/
itod	../h/fs.h	/^#define	itod(fs, x) \\$/
itog	../h/fs.h	/^#define	itog(fs, x)	((x) \/ (fs)->fs_ipg)$/
itol	../vax/kdbparam.h	/^#define itol(a,b)	(itolws.I[0]=(b), itolws.I[1]=(a/
itoo	../h/fs.h	/^#define	itoo(fs, x)	((x) % INOPB(fs))$/
itrunc	../sys/ufs_inode.c	/^itrunc(oip, length)$/
iunlock	../sys/ufs_inode.c	/^iunlock(ip)$/
iupdat	../sys/ufs_inode.c	/^iupdat(ip, ta, tm, waitfor)$/
iwc	../vaxif/if_accreg.h	/^#define	iwc	input.wc$/
ix_DoReq	../vaxif/if_ix.c	/^ix_DoReq(mp, rp, cmd, addr, len, rpb, routine)$/
ix_GetReq	../vaxif/if_ix.c	/^ix_GetReq(mp, addr, len)$/
ix_addr	../vaxif/if_ix.c	/^#define	ix_addr	ix_ac.ac_enaddr		\/* hardware Ethe/
ix_if	../vaxif/if_ix.c	/^#define	ix_if	ix_ac.ac_if		\/* network-visible int/
ix_setaddr	../vaxif/if_ix.c	/^ix_setaddr(physaddr, unit)$/
ix_softc	../vaxif/if_ix.c	/^struct	ix_softc {$/
ix_stats	../vaxif/if_ix.h	/^union ix_stats {$/
ixattach	../vaxif/if_ix.c	/^ixattach(ui)$/
ixcint	../vaxif/if_ix.c	/^ixcint(mp, rp)$/
ixinit	../vaxif/if_ix.c	/^ixinit(unit)$/
ixioctl	../vaxif/if_ix.c	/^ixioctl(ifp, cmd, data)$/
ixoutput	../vaxif/if_ix.c	/^ixoutput(ifp, m0, dst)$/
ixreset	../vaxif/if_ix.c	/^ixreset(unit, uban, softp)$/
ixrint	../vaxif/if_ix.c	/^ixrint(mp, rp)$/
ixstart	../vaxif/if_ix.c	/^ixstart(dev)$/
ixwatch	../vaxif/if_ix.c	/^ixwatch(unit)$/
ka630_clkread	../vax/ka630.c	/^ka630_clkread(base)$/
ka630_clkstartrt	../vax/ka630.c	/^ka630_clkstartrt()$/
ka630_clkwrite	../vax/ka630.c	/^ka630_clkwrite()$/
ka630_init	../vax/ka630.c	/^ka630_init()$/
ka630_mchk	../vax/ka630.c	/^ka630_mchk(cmcf)$/
ka630_memnop	../vax/ka630.c	/^ka630_memnop()$/
ka630clock	../vax/ka630.h	/^struct ka630clock {$/
ka630cpu	../vax/ka630.h	/^struct ka630cpu {$/
ka730_mchk	../vax/ka730.c	/^ka730_mchk(cmcf)$/
ka730_memenable	../vax/ka730.c	/^ka730_memenable()$/
ka730_memerr	../vax/ka730.c	/^ka730_memerr()$/
ka750_mchk	../vax/ka750.c	/^ka750_mchk(cmcf)$/
ka750_memenable	../vax/ka750.c	/^ka750_memenable()$/
ka750_memerr	../vax/ka750.c	/^ka750_memerr()$/
ka780_mchk	../vax/ka780.c	/^ka780_mchk(cmcf)$/
ka780_memenable	../vax/ka780.c	/^ka780_memenable()$/
ka780_memerr	../vax/ka780.c	/^ka780_memerr()$/
ka820_clkread	../vax/ka820.c	/^ka820_clkread(base)$/
ka820_clkwrite	../vax/ka820.c	/^ka820_clkwrite()$/
ka820_init	../vax/ka820.c	/^ka820_init()$/
ka820_mchk	../vax/ka820.c	/^ka820_mchk(cmcf)$/
ka820_memenable	../vax/ka820.c	/^ka820_memenable()$/
ka820_memerr	../vax/ka820.c	/^ka820_memerr()$/
ka820clock	../vax/ka820.h	/^struct ka820clock {$/
ka820port	../vax/ka820.h	/^struct ka820port {$/
ka860_mchk	../vax/ka860.c	/^ka860_mchk(cmcf)$/
ka860_memenable	../vax/ka860.c	/^ka860_memenable()$/
ka860_memerr	../vax/ka860.c	/^ka860_memerr()$/
kbd_device	../vaxuba/vsreg.h	/^#define	kbd_device	_X._bits._device$/
kbd_key	../vaxuba/vsreg.h	/^#define	kbd_key		_X._bits._key$/
kbd_reg	../vaxuba/vsreg.h	/^#define	kbd_reg		_X._register$/
kbd_transition	../vaxuba/vsreg.h	/^#define	kbd_transition	_X._bits._transition$/
kdadump	../vax/conf.c	/^#define	kdadump		nodev$/
kdaopen	../vax/conf.c	/^#define	kdaopen		nodev$/
kdasize	../vax/conf.c	/^#define	kdasize		0$/
kdastrategy	../vax/conf.c	/^#define	kdastrategy	nodev$/
kdb_init	../vax/kdb_machdep.c	/^kdb_init()$/
kdb_trap	../vax/kdb_machdep.c	/^kdb_trap(apsl)$/
kdbfind	../vax/autoconf.c	/^kdbfind(kdbnum)$/
kdbmalloc	../vax/kdb_machdep.c	/^kdbmalloc(n)$/
kdbpeek	../vax/kdb_machdep.c	/^kdbpeek(addr)$/
kdbpoke	../vax/kdb_machdep.c	/^kdbpoke(addr, v)$/
kdbprinttrap	../vax/kdb_machdep.c	/^kdbprinttrap(type, code)$/
kdbreadc	../vax/kdb_machdep.c	/^kdbreadc(cp)$/
kdbrintr	../vax/kdb_machdep.c	/^kdbrintr(c, tp)$/
kdbsetup	../vax/kdb_opset.c	/^kdbsetup()$/
kdbwrite	../vax/kdb_machdep.c	/^kdbwrite(cp, len)$/
kernacc	../vax/Locore.c	/^kernacc(addr, bcnt, rw) caddr_t addr; unsigned bcn/
kgattach	../vaxuba/kgclock.c	/^kgattach(ui)$/
kgclock	../vaxuba/kgclock.c	/^kgclock(dev, r0, r1, r2, r3, r4 ,r5, pc, ps)$/
kgprobe	../vaxuba/kgclock.c	/^kgprobe(reg)$/
kill	../sys/kern_sig.c	/^kill()$/
killpg	../sys/kern_sig.c	/^killpg()$/
killpg1	../sys/kern_sig.c	/^killpg1(signo, pgrp, all)$/
klok	../sys/vm_page.c	/^klok(pte, rw)$/
klregs	../vaxuba/kgclock.c	/^struct klregs {$/
kluster	../sys/vm_page.c	/^kluster(p, v, pte0, rw, pkl, klsize, bn0)$/
kmcclose	../vax/conf.c	/^#define kmcclose nodev$/
kmcdclr	../vax/conf.c	/^#define kmcdclr nodev$/
kmcioctl	../vax/conf.c	/^#define kmcioctl nodev$/
kmcopen	../vax/conf.c	/^#define kmcopen nodev$/
kmcopy	../sys/vm_pt.c	/^kmcopy(to, from, count)$/
kmcread	../vax/conf.c	/^#define kmcread nodev$/
kmcwrite	../vax/conf.c	/^#define kmcwrite nodev$/
kmembuckets	../h/malloc.h	/^struct kmembuckets {$/
kmeminit	../sys/kern_malloc.c	/^kmeminit()$/
kmemstats	../h/malloc.h	/^struct kmemstats {$/
kmemusage	../h/malloc.h	/^struct kmemusage {$/
kmemxtob	../h/malloc.h	/^#define kmemxtob(addr)	(kmembase + (addr) * NBPG)$/
kmstartup	../sys/subr_mcount.c	/^kmstartup()$/
kmxtob	../h/vmmac.h	/^#define	kmxtob(a)	(usrpt + (a) * NPTEPG)$/
ku_freecnt	../h/malloc.h	/^#define ku_freecnt ku_un.freecnt$/
ku_pagecnt	../h/malloc.h	/^#define ku_pagecnt ku_un.pagecnt$/
kvtophys	../vax/pte.h	/^#define	kvtophys(x) ((kvtopte(x)->pg_pfnum << PGSH/
kvtopte	../vax/pte.h	/^#define	kvtopte(va) (&Sysmap[((unsigned)(va) &~ KE/
label_t	../h/types.h	/^} label_t;$/
lblkno	../h/fs.h	/^#define lblkno(fs, loc)		\/* calculates (loc \/ fs/
lctms	../vaxuba/dmxreg.h	/^#define	lctms	octun.irw	\/* line control, transmit/
leavegroup	../sys/kern_prot.c	/^leavegroup(gid)$/
leng	../vax/kdbparam.h	/^#define leng(a)		itol(0,a)$/
linesw	../h/conf.h	/^struct linesw$/
linger	../h/socket.h	/^struct	linger {$/
link	../sys/ufs_syscalls.c	/^link()$/
listen	../sys/uipc_syscalls.c	/^listen()$/
loadav	../sys/vm_sched.c	/^loadav(avg, n)$/
loattach	../net/if_loop.c	/^loattach()$/
locate_x25_lcn	../vaxif/if_ddn.c	/^static struct ddn_cb *locate_x25_lcn(ds, ip_addr)$/
locc	../sys/ufs_subr.c	/^locc(mask, size, cp)$/
log	../sys/subr_prf.c	/^log(level, fmt, x1)$/
logclose	../sys/subr_log.c	/^logclose(dev, flag)$/
logioctl	../sys/subr_log.c	/^logioctl(com, data, flag)$/
logopen	../sys/subr_log.c	/^logopen(dev)$/
logpri	../sys/subr_prf.c	/^logpri(level)$/
logread	../sys/subr_log.c	/^logread(dev, uio)$/
logselect	../sys/subr_log.c	/^logselect(dev, rw)$/
logsoftc	../sys/subr_log.c	/^struct logsoftc {$/
logwakeup	../sys/subr_log.c	/^logwakeup()$/
loioctl	../net/if_loop.c	/^loioctl(ifp, cmd, data)$/
longjmp	../vax/Locore.c	/^longjmp(lp) label_t *lp; { \/*NOTREACHED*\/ }$/
looutput	../net/if_loop.c	/^looutput(ifp, m0, dst)$/
lowinit	../vax/Locore.c	/^lowinit()$/
lp_softc	../vaxuba/lp.c	/^struct lp_softc {$/
lpa_softc	../vaxuba/lpa.c	/^struct lpa_softc {$/
lpaattach	../vaxuba/lpa.c	/^lpaattach(ui)$/
lpaclose	../vaxuba/lpa.c	/^lpaclose(dev, flag)$/
lpacmd	../vaxuba/lpa.c	/^lpacmd(bp, lpaaddr, sc, ubanum)$/
lpadevice	../vaxuba/lpa.c	/^struct lpadevice {$/
lpadmdt	../vaxuba/lpa.c	/^lpadmdt(lpaaddr, sc, ubanum, uio)$/
lpaiintr	../vaxuba/lpa.c	/^lpaiintr(unit)$/
lpaioctl	../vaxuba/lpa.c	/^lpaioctl(dev, cmd, data, flag)$/
lpamcode	../vaxuba/lpa.c	/^lpamcode(lpaaddr, sc, uio)$/
lpaointr	../vaxuba/lpa.c	/^lpaointr(unit)$/
lpaopen	../vaxuba/lpa.c	/^lpaopen(dev, flag)$/
lpaprobe	../vaxuba/lpa.c	/^lpaprobe(reg)$/
lparead	../vaxuba/lpa.c	/^lparead(dev, uio)$/
lpareset	../vaxuba/lpa.c	/^lpareset(uban)$/
lpattach	../vaxuba/lp.c	/^lpattach(ui)$/
lpawait	../vaxuba/lpa.c	/^lpawait(lpaaddr, sc)$/
lpawrite	../vaxuba/lpa.c	/^lpawrite(dev, uio)$/
lpcanon	../vaxuba/lp.c	/^lpcanon(dev, c)$/
lpclose	../vaxuba/lp.c	/^lpclose(dev, flag)$/
lpdevice	../vaxuba/lp.c	/^struct lpdevice {$/
lpintr	../vaxuba/lp.c	/^lpintr(lp11)$/
lpopen	../vaxuba/lp.c	/^lpopen(dev, flag)$/
lpoutput	../vaxuba/lp.c	/^lpoutput(dev, c)$/
lpprobe	../vaxuba/lp.c	/^lpprobe(reg)$/
lpreset	../vaxuba/lp.c	/^lpreset(uban)$/
lptout	../vaxuba/lp.c	/^lptout(dev)$/
lpwrite	../vaxuba/lp.c	/^lpwrite(dev, uio)$/
lseek	../sys/ufs_syscalls.c	/^lseek()$/
lstat	../sys/ufs_syscalls.c	/^lstat()$/
ltchars	../h/ioctl.h	/^struct ltchars {$/
m_adj	../sys/uipc_mbuf.c	/^m_adj(mp, len)$/
m_cat	../sys/uipc_mbuf.c	/^m_cat(m, n)$/
m_clalloc	../sys/uipc_mbuf.c	/^m_clalloc(ncl, how, canwait)$/
m_copy	../sys/uipc_mbuf.c	/^m_copy(m, off, len)$/
m_copydata	../sys/uipc_mbuf.c	/^m_copydata(m, off, len, cp)$/
m_expand	../sys/uipc_mbuf.c	/^m_expand(canwait)$/
m_free	../sys/uipc_mbuf.c	/^m_free(m)$/
m_freem	../sys/uipc_mbuf.c	/^m_freem(m)$/
m_get	../sys/uipc_mbuf.c	/^m_get(canwait, type)$/
m_getclr	../sys/uipc_mbuf.c	/^m_getclr(canwait, type)$/
m_more	../sys/uipc_mbuf.c	/^m_more(canwait, type)$/
m_pgfree	../sys/uipc_mbuf.c	/^m_pgfree(addr, n)$/
m_pullup	../sys/uipc_mbuf.c	/^m_pullup(n, len)$/
machinecheck	../vax/machdep.c	/^machinecheck(cmcf)$/
madvise	../sys/kern_mman.c	/^madvise()$/
major	../h/types.h	/^#define	major(x)	((int)(((unsigned)(x)>>8)&0377))$/
make_x25_call	../vaxif/if_ddn.c	/^static boolean make_x25_call(ds, dc)$/
makedev	../h/types.h	/^#define	makedev(x,y)	((dev_t)(((x)<<8) | (y)))$/
maknode	../sys/ufs_syscalls.c	/^maknode(mode, ndp)$/
malloc	../sys/kern_malloc.c	/^malloc(size, type, flags)$/
map	../h/map.h	/^struct map {$/
mapent	../h/map.h	/^struct mapent$/
mapescbyte	../vax/kdb_opset.c	/^#define	mapescbyte(b)	((b) == ESCD ? 1 : (b) == ES/
mapin	../vax/vmparam.h	/^#define	mapin(pte, v, pfnum, prot) \\$/
mapioctl	../vax/sys_machdep.c	/^mapioctl(cmd)$/
mapsearch	../sys/ufs_alloc.c	/^mapsearch(fs, cgp, bpref, allocsiz)$/
maptouser	../vaxuba/uba.c	/^maptouser(vaddress)$/
match	../vax/autoconf.c	/^#define	match(fld)	(ni->fld == mi->fld || mi->fld /
max	../sys/subr_xxx.c	/^max(a, b)$/
mb_all	../vaxif/if_exreg.h	/^\/*12*\/	union	mb_all {$/
mb_er	../vaxif/if_exreg.h	/^#define	mb_er	mb_all.mb_enet_recv$/
mb_et	../vaxif/if_exreg.h	/^#define	mb_et	mb_all.mb_enet_xmit$/
mb_na	../vaxif/if_exreg.h	/^#define	mb_na	mb_all.mb_net_addrs$/
mb_nm	../vaxif/if_exreg.h	/^#define	mb_nm	mb_all.mb_net_mode$/
mb_nr	../vaxif/if_exreg.h	/^#define	mb_nr	mb_all.mb_net_recv$/
mb_ns	../vaxif/if_exreg.h	/^#define	mb_ns	mb_all.mb_net_ststcs$/
mb_rply	../vaxif/if_exreg.h	/^#define	mb_rply	mb_nm.nm_rply$/
mb_rqst	../vaxif/if_exreg.h	/^#define	mb_rqst	mb_nm.nm_rqst$/
mba_device	../vaxmba/mbavar.h	/^struct	mba_device {$/
mba_driver	../vaxmba/mbavar.h	/^struct mba_driver {$/
mba_drv	../vaxmba/mbareg.h	/^	struct mba_drv {		\/* per drive registers *\/$/
mba_hd	../vaxmba/mbavar.h	/^struct	mba_hd {$/
mba_regs	../vaxmba/mbareg.h	/^struct mba_regs$/
mba_slave	../vaxmba/mbavar.h	/^struct	mba_slave {$/
mbaconfig	../vax/autoconf.c	/^mbaconfig(ni, type)$/
mbaddtape	../vaxmba/mba.c	/^mbaddtape(mi, drive)$/
mbafind	../vax/autoconf.c	/^mbafind(nxv, nxp)$/
mbainit	../vaxmba/mba.c	/^mbainit(mp)$/
mbasetup	../vaxmba/mba.c	/^mbasetup(mi)$/
mbclrattn	../vaxmba/mbavar.h	/^#define	mbclrattn(mi)	((mi)->mi_mba->mba_drv[0].mb/
mbd_ck	../vaxmba/mbareg.h	/^#define	mbd_ck	mbd_la				\/* ??? (tapes) *\/$/
mbd_fc	../vaxmba/mbareg.h	/^#define	mbd_fc	mbd_da				\/* frame count (tapes) */
mbd_tc	../vaxmba/mbareg.h	/^#define	mbd_tc	mbd_of				\/* ??? *\/$/
mbinit	../sys/uipc_mbuf.c	/^mbinit()$/
mbintr	../vaxmba/mba.c	/^mbintr(mbanum)$/
mbstart	../vaxmba/mba.c	/^mbstart(mhp)$/
mbstat	../h/mbuf.h	/^struct mbstat {$/
mbuf	../h/mbuf.h	/^struct mbuf {$/
mbunit	../vaxmba/mba.c	/^#define mbunit(dev)	(minor(dev) >> 3)$/
mbustart	../vaxmba/mba.c	/^mbustart(mi)$/
mc630frame	../vax/ka630.c	/^struct mc630frame {$/
mc730frame	../vax/ka730.c	/^struct mc730frame {$/
mc750frame	../vax/ka750.c	/^struct mc750frame {$/
mc780frame	../vax/ka780.c	/^struct mc780frame {$/
mc8200frame	../vax/ka820.c	/^struct mc8200frame {$/
mc8600frame	../vax/ka860.c	/^struct mc8600frame {$/
mcr730	../vax/ka730.c	/^struct	mcr730 {$/
mcr750	../vax/ka750.c	/^struct	mcr750 {$/
mcr780	../vax/ka780.c	/^struct	mcr780 {$/
memall	../sys/vm_mem.c	/^memall(pte, size, p, type)$/
memenable	../vax/machdep.c	/^memenable()$/
memerr	../vax/machdep.c	/^memerr()$/
memfree	../sys/vm_mem.c	/^memfree(pte, size, detach)$/
meminit	../sys/vm_mem.c	/^meminit(first, last)$/
memlog	../vax/ka780.c	/^memlog(m, mcr)$/
mfind	../sys/vm_mem.c	/^mfind(dev, bn)$/
mfpr	../vax/Locore.c	/^mfpr(reg) int reg; { return (0); }$/
mhash	../sys/vm_mem.c	/^mhash(c, dev, bn)$/
microtime	../vax/machdep.c	/^microtime(tvp)$/
min	../sys/subr_xxx.c	/^min(a, b)$/
mincore	../sys/kern_mman.c	/^mincore()$/
minor	../h/types.h	/^#define	minor(x)	((int)((x)&0377))$/
minphys	../sys/vm_swp.c	/^minphys(bp)$/
minvaph	../vaxuba/va.c	/^minvaph(bp)$/
minvpph	../vaxuba/vp.c	/^minvpph(bp)$/
mkdir	../sys/ufs_syscalls.c	/^mkdir()$/
mknod	../sys/ufs_syscalls.c	/^mknod()$/
mlock	../sys/vm_mem.c	/^mlock(c)$/
mmread	../vax/mem.c	/^mmread(dev, uio)$/
mmrw	../vax/mem.c	/^mmrw(dev, uio, rw)$/
mmselect	../vax/conf.c	/^#define	mmselect	seltrue$/
mmwrite	../vax/mem.c	/^mmwrite(dev, uio)$/
mount	../h/mount.h	/^struct	mount$/
mountfs	../sys/ufs_mount.c	/^mountfs(dev, ronly, ip)$/
movpsl	../vax/kdb_machdep.c	/^movpsl()$/
mp	../vaxuba/uda.c	/^#define mp (&ud->uda1_rsp)$/
mprotect	../sys/kern_mman.c	/^mprotect()$/
mpurge	../sys/vm_mem.c	/^mpurge(mdev)$/
mri	../vax/mscp.c	/^#define	mri	(&mi->mi_cmd)$/
ms820regs	../vax/ka820.c	/^struct ms820regs {$/
mscp	../vax/mscp.h	/^struct mscp {$/
mscp_addr	../vax/mscp.h	/^#define	mscp_addr	mscp_seq.seq_addr$/
mscp_buffer	../vax/tmscp.h	/^#define	mscp_buffer	mscp_un.mscp_generic.Mscp_buff/
mscp_bytecnt	../vax/tmscp.h	/^#define	mscp_bytecnt	mscp_un.mscp_generic.Mscp_byt/
mscp_cntcmdl	../vax/tmscp.h	/^#define	mscp_cntcmdl	mscp_usefrac	\/* controller s/
mscp_cntdep	../vax/tmscp.h	/^#define	mscp_cntdep	mscp_un.mscp_setcntchar.Mscp_c/
mscp_cntflgs	../vax/tmscp.h	/^#define	mscp_cntflgs	mscp_un.mscp_setcntchar.Mscp_/
mscp_cntid	../vax/tmscp.h	/^#define	mscp_cntid	mscp_unitid	\/* controller id */
mscp_cnttmo	../vax/tmscp.h	/^#define	mscp_cnttmo	mscp_hsttmo	\/* controller tim/
mscp_decodeerror	../vax/mscp.c	/^mscp_decodeerror(name, ctlr, mp)$/
mscp_dorsp	../vax/mscp.c	/^mscp_dorsp(mi)$/
mscp_driver	../vax/mscpvar.h	/^struct mscp_driver {$/
mscp_dscptr	../vax/tmscp.h	/^#define	mscp_dscptr	mscp_un.mscp_generic.Mscp_dscp/
mscp_erd	../vax/mscp.h	/^#define	mscp_erd	mscp_un.un_erd$/
mscp_event	../vax/mscp.h	/^#define	mscp_event	mscp_modifier	\/* aka event (da/
mscp_fmtmenu	../vax/tmscp.h	/^#define	mscp_fmtmenu	mscp_un.mscp_getunitsts.Mscp_/
mscp_format	../vax/mscp.h	/^#define	mscp_format	mscp_opcode	\/* aka format (da/
mscp_getcp	../vax/mscp.c	/^mscp_getcp(mi, canwait)$/
mscp_go	../vax/mscp.c	/^mscp_go(mi, mp, info)$/
mscp_guse	../vax/mscp.h	/^#define	mscp_guse	mscp_un.un_guse$/
mscp_header	../vaxuba/tmscpreg.h	/^struct mscp_header {$/
mscp_hexdump	../vax/mscp.c	/^mscp_hexdump(mp)$/
mscp_hostid	../vax/tmscp.h	/^#define	mscp_hostid	mscp_un.mscp_getunitsts.Mscp_h/
mscp_hsttmo	../vax/tmscp.h	/^#define	mscp_hsttmo	mscp_un.mscp_setcntchar.Mscp_h/
mscp_info	../vax/mscpvar.h	/^struct mscp_info {$/
mscp_lbn	../vax/tmscp.h	/^#define	mscp_lbn	mscp_un.mscp_generic.Mscp_lbn$/
mscp_mapbase	../vax/tmscp.h	/^#define	mscp_mapbase	mscp_un.mscp_generic.Mscp_map/
mscp_maxwrt	../vax/tmscp.h	/^#define	mscp_maxwrt	mscp_dscptr	\/* max write byte/
mscp_mediaid	../vax/tmscp.h	/^#define	mscp_mediaid	mscp_un.mscp_getunitsts.Mscp_/
mscp_msglen	../vax/tmscp.h	/^#define mscp_msglen (sizeof (struct mscp) - sizeof/
mscp_multunt	../vax/tmscp.h	/^#define	mscp_multunt	mscp_un.mscp_getunitsts.Mscp_/
mscp_noiserec	../vax/tmscp.h	/^#define	mscp_noiserec	mscp_cylinder	\/* noise reco/
mscp_onlc	../vax/mscp.h	/^#define	mscp_onlc	mscp_un.un_onlc$/
mscp_onle	../vax/mscp.h	/^#define	mscp_onle	mscp_un.un_onle$/
mscp_outref	../vax/tmscp.h	/^#define	mscp_outref	mscp_bytecnt$/
mscp_printevent	../vax/mscp.c	/^mscp_printevent(mp)$/
mscp_reccnt	../vax/tmscp.h	/^#define mscp_reccnt mscp_bytecnt	\/* record\/objec/
mscp_requeue	../vax/mscp.c	/^mscp_requeue(mi)$/
mscp_ri	../vax/mscpvar.h	/^struct mscp_ri {$/
mscp_sccc	../vax/mscp.h	/^#define	mscp_sccc	mscp_un.un_sccc$/
mscp_scce	../vax/mscp.h	/^#define	mscp_scce	mscp_un.un_scce$/
mscp_seq	../vax/mscp.h	/^#define	mscp_seq	mscp_un.un_seq$/
mscp_sftwds	../vax/tmscp.h	/^#define	mscp_sftwds	mscp_un.mscp_generic.Mscp_sftw/
mscp_speed	../vax/tmscp.h	/^#define	mscp_speed	mscp_un.mscp_getunitsts.Mscp_sp/
mscp_status	../vax/mscp.h	/^#define	mscp_status	mscp_modifier	\/* aka status (/
mscp_time	../vax/tmscp.h	/^#define	mscp_time	mscp_un.mscp_setcntchar.Mscp_tim/
mscp_tmkcnt	../vax/tmscp.h	/^#define mscp_tmkcnt mscp_buffer		\/* tape mark cou/
mscp_unitflgs	../vax/tmscp.h	/^#define	mscp_unitflgs	mscp_un.mscp_getunitsts.Mscp/
mscp_unitid	../vax/tmscp.h	/^#define	mscp_unitid	mscp_un.mscp_getunitsts.Mscp_u/
mscp_usefrac	../vax/tmscp.h	/^#define	mscp_usefrac	mscp_un.mscp_setcntchar.Mscp_/
mscp_version	../vax/tmscp.h	/^#define	mscp_version	mscp_un.mscp_setcntchar.Mscp_/
mscpv_erd	../vax/mscp.h	/^struct mscpv_erd {$/
mscpv_guse	../vax/mscp.h	/^struct mscpv_guse {$/
mscpv_onlc	../vax/mscp.h	/^struct mscpv_onlc {$/
mscpv_onle	../vax/mscp.h	/^struct mscpv_onle {$/
mscpv_sccc	../vax/mscp.h	/^struct mscpv_sccc {$/
mscpv_scce	../vax/mscp.h	/^struct mscpv_scce {$/
mscpv_seq	../vax/mscp.h	/^struct mscpv_seq {$/
msgbuf	../h/msgbuf.h	/^struct	msgbuf {$/
msghdr	../h/socket.h	/^struct msghdr {$/
mslg	../vax/tmscp.h	/^struct mslg {$/
mslg_busaddr	../vax/tmscp.h	/^#define	mslg_busaddr	mslg_unitid.val[0]$/
mslg_sdecyl	../vax/tmscp.h	/^#define	mslg_sdecyl	mslg_group$/
mstohz	../sys/tty.c	/^#define	mstohz(ms)	(((ms) * hz) >> 10)$/
msync	../sys/kern_mman.c	/^msync()$/
mtattach	../vaxmba/mt.c	/^mtattach(mi)$/
mtclose	../vaxmba/mt.c	/^mtclose(dev, flag)$/
mtcommand	../vaxmba/mt.c	/^mtcommand(dev, com, count)$/
mtcreset	../vaxmba/mt.c	/^mtcreset(mtaddr)$/
mtdevice	../vaxmba/mtreg.h	/^struct mtdevice {$/
mtdtint	../vaxmba/mt.c	/^mtdtint(mi, mbsr)$/
mtdump	../vaxmba/mt.c	/^mtdump()$/
mtdwrite	../vaxmba/mt.c	/^mtdwrite(dbuf, num, mtaddr, mp)$/
mteof	../vaxmba/mt.c	/^mteof(mtaddr)$/
mtget	../h/mtio.h	/^struct	mtget	{$/
mtintfail	../vaxmba/mt.c	/^mtintfail(erreg)$/
mtioctl	../vaxmba/mt.c	/^mtioctl(dev, cmd, data, flag)$/
mtndtint	../vaxmba/mt.c	/^mtndtint(mi)$/
mtocl	../h/mbuf.h	/^#define	mtocl(x) (((int)x - (int)mbutl) >> MCLSHIF/
mtod	../h/mbuf.h	/^#define	mtod(x,t)	((t)((int)(x) + (x)->m_off))$/
mtop	../h/mtio.h	/^struct	mtop	{$/
mtopen	../vaxmba/mt.c	/^mtopen(dev, flag)$/
mtpr	../vax/Locore.c	/^mtpr(reg, v) int reg; { }$/
mtslave	../vaxmba/mt.c	/^mtslave(mi, ms, sn)$/
mtstart	../vaxmba/mt.c	/^mtstart(mi)$/
mtstrategy	../vaxmba/mt.c	/^mtstrategy(bp)$/
mtustart	../vaxmba/mt.c	/^mtustart(mi)$/
mtwait	../vaxmba/mt.c	/^mtwait(mtaddr)$/
mu_softc	../vaxmba/mt.c	/^struct	mu_softc {$/
munhash	../sys/vm_mem.c	/^munhash(dev, bn)$/
munlink	../sys/vm_mem.c	/^munlink(c)$/
munlock	../sys/vm_mem.c	/^munlock(c)$/
munmap	../sys/kern_mman.c	/^munmap()$/
munmapfd	../sys/kern_mman.c	/^munmapfd(fd)$/
mwait	../sys/vm_mem.c	/^mwait(c)$/
n_long	../netinet/in_systm.h	/^typedef u_long	n_long;			\/* long as received from/
n_makeaddr	../netinet/in.c	/^in_makeaddr(net, host)$/
n_short	../netinet/in_systm.h	/^typedef u_short n_short;		\/* short as received fr/
n_time	../netinet/in_systm.h	/^typedef	u_long	n_time;			\/* ms since 00:00 GMT, b/
namecache	../h/namei.h	/^struct	namecache {$/
namei	../sys/ufs_namei.c	/^namei(ndp)$/
nameicache	../h/user.h	/^	struct nameicache {		\/* last successful director/
nameidata	../h/namei.h	/^struct nameidata {$/
nch_back	../sys/ufs_namei.c	/^#define	nch_back	nch_chain[1]$/
nch_forw	../sys/ufs_namei.c	/^#define	nch_forw	nch_chain[0]$/
nchash	../sys/ufs_namei.c	/^union nchash {$/
nchinit	../sys/ufs_namei.c	/^nchinit()$/
nchinval	../sys/ufs_namei.c	/^nchinval(dev)$/
nchstats	../h/namei.h	/^struct	nchstats {$/
ndflush	../sys/tty_subr.c	/^ndflush(q, cc)$/
ndqb	../sys/tty_subr.c	/^ndqb(q, flag)$/
net_addrs	../vaxif/if_exreg.h	/^struct	net_addrs {		\/* read\/write receive addres/
net_mode	../vaxif/if_exreg.h	/^struct	net_mode {		\/* read\/write mode control ob/
net_recv	../vaxif/if_exreg.h	/^struct	net_recv {		\/* read\/alter receive slot en/
net_ststcs	../vaxif/if_exreg.h	/^struct	net_ststcs {		\/* read\/reset network stati/
new	../vaxuba/dmx.c	/^#define new$/
newproc	../sys/kern_fork.c	/^newproc(isvfork)$/
newptes	../vax/vm_machdep.c	/^newptes(pte, v, size)$/
nexcsr	../vax/nexus.h	/^	union nexcsr {$/
nextarg	../vax/kdbparam.h	/^#define	nextarg(ap)	((ap) + 4)		\/* next argument /
nextc	../sys/tty_subr.c	/^nextc(p, cp)$/
nexus	../vax/nexus.h	/^struct	nexus {$/
nexusconnect	../vax/cpu.h	/^struct nexusconnect {$/
ni_base	../h/namei.h	/^#define	ni_base		ni_iovec.iov_base$/
ni_count	../h/namei.h	/^#define	ni_count	ni_iovec.iov_len$/
ni_iov	../h/namei.h	/^#define	ni_iov		ni_uio.uio_iov$/
ni_iovcnt	../h/namei.h	/^#define	ni_iovcnt	ni_uio.uio_iovcnt$/
ni_offset	../h/namei.h	/^#define	ni_offset	ni_uio.uio_offset$/
ni_resid	../h/namei.h	/^#define	ni_resid	ni_uio.uio_resid$/
ni_segflg	../h/namei.h	/^#define	ni_segflg	ni_uio.uio_segflg$/
nodev	../sys/subr_xxx.c	/^nodev()$/
nosys	../vax/trap.c	/^nosys()$/
notavail	../h/buf.h	/^#define	notavail(bp) { \\$/
np_mem	../vaxuba/npreg.h	/^struct np_mem {$/
npattach	../vaxuba/np.c	/^npattach(ui)$/
npbase	../vaxuba/npreg.h	/^struct npbase {$/
npclose	../vaxuba/np.c	/^npclose(dev)$/
npconn	../vaxuba/npreg.h	/^struct npconn {$/
npinit	../vaxuba/np.c	/^npinit(unit)$/
npintr	../vaxuba/np.c	/^npintr(unit)$/
npioctl	../vaxuba/np.c	/^npioctl(dev,cmd,addr,flag)$/
npmaster	../vaxuba/npreg.h	/^struct npmaster {$/
npopen	../vaxuba/np.c	/^npopen(dev,flag)$/
npprobe	../vaxuba/np.c	/^npprobe(reg, ui)$/
npread	../vaxuba/np.c	/^npread(dev,uio)$/
npreq	../vaxuba/npreg.h	/^ struct npreq {$/
npreset	../vaxuba/np.c	/^npreset(uban)$/
npspace	../vaxuba/npreg.h	/^struct npspace {$/
npstart	../vaxuba/np.c	/^npstart(mp)$/
npstrategy	../vaxuba/np.c	/^npstrategy(bp)$/
nptrim	../vaxuba/np.c	/^nptrim(bp)$/
npwrite	../vaxuba/np.c	/^npwrite(dev,uio)$/
ns_addr	../netns/ns.h	/^struct ns_addr {$/
ns_cksum	../vax/ns_cksum.c	/^ns_cksum(m, len)$/
ns_control	../netns/ns.c	/^ns_control(so, cmd, data, ifp)$/
ns_echo	../netns/ns_error.c	/^ns_echo(idp)$/
ns_epidp	../netns/ns_error.h	/^struct  ns_epidp {$/
ns_err_input	../netns/ns_error.c	/^ns_err_input(m)$/
ns_err_x	../netns/ns_error.c	/^ns_err_x(c)$/
ns_error	../netns/ns_error.c	/^ns_error(om, type, param)$/
ns_errp	../netns/ns_error.h	/^struct ns_errp {$/
ns_errstat	../netns/ns_error.h	/^struct	ns_errstat {$/
ns_hash	../netns/ns.c	/^ns_hash(sns, hp)$/
ns_host	../netns/ns.h	/^union ns_host {$/
ns_hosteq	../netns/ns.h	/^#define ns_hosteq(s,t) (ns_hosteqnh((s).x_host,(t)/
ns_hosteqnh	../netns/ns.h	/^#define ns_hosteqnh(s,t) ((s).s_host[0] == (t).s_h/
ns_iaonnetof	../netns/ns.c	/^ns_iaonnetof(dst)$/
ns_ifaddr	../netns/ns_if.h	/^struct ns_ifaddr {$/
ns_ifinit	../netns/ns.c	/^ns_ifinit(ifp, ia, sns)$/
ns_init	../netns/ns_input.c	/^ns_init()$/
ns_net	../netns/ns.h	/^union ns_net {$/
ns_net_u	../netns/ns.h	/^union ns_net_u {$/
ns_neteq	../netns/ns.h	/^#define ns_neteq(a,b) ns_neteqnn((a).x_net, (b).x_/
ns_neteqnn	../netns/ns.h	/^#define ns_neteqnn(a,b) (((a).s_net[0]==(b).s_net[/
ns_netmatch	../netns/ns.c	/^ns_netmatch(sns1, sns2)$/
ns_netof	../netns/ns.h	/^#define ns_netof(a) (*(long *) & ((a).x_net)) \/* /
ns_nullhost	../netns/ns.h	/^#define ns_nullhost(x) (((x).x_host.s_host[0]==0) /
ns_output	../netns/ns_output.c	/^ns_output(m0, ro, flags)$/
ns_pcballoc	../netns/ns_pcb.c	/^ns_pcballoc(so, head)$/
ns_pcbbind	../netns/ns_pcb.c	/^ns_pcbbind(nsp, nam)$/
ns_pcbconnect	../netns/ns_pcb.c	/^ns_pcbconnect(nsp, nam)$/
ns_pcbdetach	../netns/ns_pcb.c	/^ns_pcbdetach(nsp)$/
ns_pcbdisconnect	../netns/ns_pcb.c	/^ns_pcbdisconnect(nsp)$/
ns_pcblookup	../netns/ns_pcb.c	/^ns_pcblookup(faddr, lport, wildp)$/
ns_pcbnotify	../netns/ns_pcb.c	/^ns_pcbnotify(dst, errno, notify, param)$/
ns_printhost	../netns/ns_error.c	/^ns_printhost(p)$/
ns_rtchange	../netns/ns_pcb.c	/^ns_rtchange(nsp)$/
ns_setpeeraddr	../netns/ns_pcb.c	/^ns_setpeeraddr(nsp, nam)$/
ns_setsockaddr	../netns/ns_pcb.c	/^ns_setsockaddr(nsp, nam)$/
ns_watch_output	../netns/ns_input.c	/^ns_watch_output(m, ifp)$/
nsintr	../netns/ns_input.c	/^nsintr()$/
nsip_ctlinput	../netns/ns_ip.c	/^nsip_ctlinput(cmd, sa)$/
nsip_free	../netns/ns_ip.c	/^nsip_free(ifp)$/
nsip_req	../netns/ns_if.h	/^struct nsip_req {$/
nsip_route	../netns/ns_ip.c	/^nsip_route(m)$/
nsip_rtchange	../netns/ns_ip.c	/^nsip_rtchange(dst)$/
nsipattach	../netns/ns_ip.c	/^nsipattach()$/
nsipioctl	../netns/ns_ip.c	/^nsipioctl(ifp, cmd, data)$/
nsipoutput	../netns/ns_ip.c	/^nsipoutput(ifn, m0, dst)$/
nsp_fport	../netns/ns_pcb.h	/^#define nsp_fport nsp_faddr.x_port$/
nsp_lport	../netns/ns_pcb.h	/^#define nsp_lport nsp_laddr.x_port$/
nspcb	../netns/ns_pcb.h	/^struct nspcb {$/
nstime	../netns/ns_error.c	/^nstime()$/
nstosppcb	../netns/spp_var.h	/^#define	nstosppcb(np)	((struct sppcb *)(np)->nsp_p/
ntohl	../vax/Locore.c	/^u_long ntohl(l) u_long l; { return ((u_long)l); }$/
ntohs	../vax/Locore.c	/^u_short ntohs(s) u_short s; { return ((u_short)s);/
null_hash	../net/af.c	/^null_hash(addr, hp)$/
null_init	../net/af.c	/^null_init()$/
null_netmatch	../net/af.c	/^null_netmatch(a1, a2)$/
nulldev	../sys/subr_xxx.c	/^nulldev()$/
nullioctl	../sys/tty_conf.c	/^nullioctl(tp, cmd, data, flags)$/
nullmodem	../sys/tty.c	/^nullmodem(tp, flag)$/
num_uchar	../vax/asnumber.h	/^#define	num_uchar	num_num.numIq_int.Iq_uchar$/
num_uint	../vax/asnumber.h	/^#define	num_uint	num_num.numIq_int.Iq_ulong$/
num_ulong	../vax/asnumber.h	/^#define	num_ulong	num_num.numIq_int.Iq_ulong$/
num_ushort	../vax/asnumber.h	/^#define	num_ushort	num_num.numIq_int.Iq_ushort$/
numberp	../vax/kdb_opset.c	/^typedef	struct	as_number	*numberp;$/
numfrags	../h/fs.h	/^#define numfrags(fs, loc)	\/* calculates (loc \/ f/
nz	../sys/vm_sched.c	/^#define	nz(x)	(x != 0 ? x : 1)$/
oalarm	../sys/kern_xxx.c	/^oalarm()$/
oba	../vaxif/if_accreg.h	/^#define	oba	output.ba$/
obreak	../sys/kern_mman.c	/^obreak()$/
ocg	../h/fs.h	/^struct	ocg {$/
ocsr	../vaxif/if_accreg.h	/^#define	ocsr	output.csr$/
off_t	../h/types.h	/^typedef	long	off_t;$/
ofstat	../sys/ufs_xxx.c	/^ofstat()$/
oftime	../sys/kern_xxx.c	/^oftime()$/
onice	../sys/kern_xxx.c	/^onice()$/
opause	../sys/kern_clock.c	/^opause()$/
open	../sys/ufs_syscalls.c	/^open()$/
opendq	../sys/quota_kern.c	/^opendq(mp, fname)$/
openi	../sys/sys_inode.c	/^openi(ip, mode)$/
operandout	../vax/kdb_opset.c	/^char *operandout(mode, optype)$/
osetgid	../sys/kern_xxx.c	/^osetgid()$/
osetpgrp	../sys/kern_xxx.c	/^osetpgrp()$/
osetuid	../sys/kern_xxx.c	/^osetuid()$/
osigcleanup	../vax/machdep.c	/^osigcleanup()$/
ossig	../sys/kern_xxx.c	/^ossig()$/
ostat	../sys/ufs_xxx.c	/^struct	ostat {$/
ostat1	../sys/ufs_xxx.c	/^ostat1(ip, ub)$/
ostime	../sys/kern_xxx.c	/^ostime()$/
otime	../sys/kern_xxx.c	/^otime()$/
otimes	../sys/kern_xxx.c	/^otimes()$/
outime	../sys/ufs_xxx.c	/^outime()$/
outofmem	../h/vmmac.h	/^#define	outofmem()	wakeup((caddr_t)&proc[2]);$/
ovadvise	../sys/kern_mman.c	/^ovadvise()$/
ovbcopy	../vax/Locore.c	/^ovbcopy(from, to, len) caddr_t from, to; unsigned /
ovlimit	../sys/kern_xxx.c	/^ovlimit()$/
ovtimes	../sys/kern_xxx.c	/^ovtimes()$/
owait	../sys/kern_xxx.c	/^owait()$/
owc	../vaxif/if_accreg.h	/^#define	owc	output.wc$/
owner	../sys/ufs_fio.c	/^owner(fname, follow)$/
p1	../netns/spp_debug.c	/^#define p1(f)  { printf("%s = %x, ", "f", f); }$/
p2	../netns/spp_debug.c	/^#define p2(f)  { printf("%s = %x, ", "f", si->si_/
p3	../netns/spp_debug.c	/^#define p3(f)  { printf("%s = %x, ", "f", sp->s_\//
pack	../h/trace.h	/^#define	pack(a,b)	((a)<<16)|(b)$/
packet	../vax/rsp.h	/^struct packet {$/
paddr_t	../vaxuba/npreg.h	/^typedef long paddr_t;			\/* Physical addresses *\//
pagein	../sys/vm_page.c	/^pagein(virtaddr, dlyu)$/
pagemove	../vax/vm_machdep.c	/^pagemove(from, to, size)$/
pageout	../sys/vm_page.c	/^pageout()$/
panic	../sys/subr_prf.c	/^panic(s)$/
partinfo	../h/disklabel.h	/^struct partinfo {$/
partition	../h/disklabel.h	/^	struct	partition {		\/* the partition table *\/$/
pcb	../vax/pcb.h	/^struct pcb$/
pcb_ap	../vax/pcb.h	/^#define	pcb_ap pcb_r12$/
pcb_fp	../vax/pcb.h	/^#define	pcb_fp pcb_r13$/
pcbb	../h/vmmac.h	/^#define	pcbb(p)		((p)->p_addr[0].pg_pfnum)$/
pchigh	../vaxif/if_dereg.h	/^#define	pchigh		u_p0.p0_b[1]$/
pcimmediate	../vax/kdb_opset.c	/^pcimmediate(mode, optype)$/
pcl_header	../vaxif/if_pcl.c	/^struct pcl_header {$/
pcl_softc	../vaxif/if_pcl.c	/^struct	pcl_softc {$/
pclattach	../vaxif/if_pcl.c	/^pclattach(ui)$/
pcldevice	../vaxif/if_pclreg.h	/^struct pcldevice  {$/
pclinit	../vaxif/if_pcl.c	/^pclinit(unit)$/
pcloutput	../vaxif/if_pcl.c	/^pcloutput(ifp, m, dst)$/
pclow	../vaxif/if_dereg.h	/^#define	pclow		u_p0.p0_b[0]$/
pclprobe	../vaxif/if_pcl.c	/^pclprobe(reg)$/
pclreset	../vaxif/if_pcl.c	/^pclreset(unit, uban)$/
pclstart	../vaxif/if_pcl.c	/^pclstart(dev)$/
pclxint	../vaxif/if_pcl.c	/^pclxint(unit)$/
pcsr0	../vaxif/if_dereg.h	/^#define	pcsr0	u_p0.p0_w$/
pdma	../vaxuba/pdma.h	/^struct pdma {$/
percpu	../vax/cpu.h	/^struct	percpu {$/
pf	../netinet/tcp_debug.c	/^#define pf(f) { if (ti->ti_flags&TH_\/**\/f) { pri/
pfctlinput	../sys/uipc_domain.c	/^pfctlinput(cmd, sa)$/
pffasttimo	../sys/uipc_domain.c	/^pffasttimo()$/
pffindproto	../sys/uipc_domain.c	/^pffindproto(family, protocol, type)$/
pffindtype	../sys/uipc_domain.c	/^pffindtype(family, type)$/
pfind	../sys/kern_proc.c	/^pfind(pid)$/
pfslowtimo	../sys/uipc_domain.c	/^pfslowtimo()$/
pgtocm	../h/cmap.h	/^#define	pgtocm(x)	(((int) ((x)-firstfree) \/ CLSIZ/
pgtrace	../sys/vm_page.c	/^#define	pgtrace(e)	trace(e,v,u.u_procp->p_pid)$/
phdr	../h/gprof.h	/^struct phdr {$/
phys	../vaxmba/hp.c	/^#define	phys(a,b)	((b)((int)(a)&0x7fffffff))$/
physadr	../h/types.h	/^typedef	struct	_physadr { int r[1]; } *physadr;$/
physio	../sys/vm_swp.c	/^physio(strat, bp, dev, rw, mincnt, uio)$/
pipe	../sys/uipc_syscalls.c	/^pipe()$/
poldecode	../sys/tty_tb.c	/^poldecode(tc, cp, polpos)$/
polpos	../h/tablet.h	/^struct	polpos {$/
powerof2	../h/param.h	/^#define powerof2(x)	((((x)-1)&(x))==0)$/
pqinit	../sys/kern_proc.c	/^pqinit()$/
prf	../sys/subr_prf.c	/^prf(fmt, adx, flags, ttyp)$/
printD	../vaxif/if_hy.c	/^#define printD	if (hy_debug_flag) printf$/
printI	../vaxuba/vs.c	/^#define	printI	if (vsIntrPrintfs)printf$/
printL	../vaxif/if_hy.c	/^#define printL	printf$/
printM	../vaxuba/vs.c	/^#define	printM	if (vsMlpPrintfs) vsMlpPrintfs--,pr/
printbyte	../netimp/if_imp.c	/^printbyte(cp, n)$/
printd	../vaxif/if_dmc.c	/^#define printd if(dmcdebug)printf$/
printd10	../vaxuba/tmscp.c	/^#define	printd10 if(tmscpdebug >= 10) printf$/
printf	../sys/subr_prf.c	/^printf(fmt, x1)$/
printins	../vax/kdb_opset.c	/^printins(fmt, Idsp, ins)$/
printleader	../netimp/if_imp.c	/^printleader(routine, ip)$/
printn	../sys/subr_prf.c	/^printn(n, b, flags, ttyp)$/
printstate	../vax/rsp.h	/^#define	printstate(state) \\$/
probe_Abus	../vax/autoconf.c	/^probe_Abus(ioanum, iob)$/
probe_bi	../vax/autoconf.c	/^probe_bi(p)$/
probeio	../vax/autoconf.c	/^probeio(pcpu)$/
probenexi	../vax/autoconf.c	/^probenexi(pnc)$/
probeqbus	../vax/autoconf.c	/^probeqbus(qb)$/
probeuba	../vax/autoconf.c	/^probeuba(vubp, pubp, pumem)$/
proc	../h/proc.h	/^struct	proc {$/
procdup	../sys/vm_proc.c	/^procdup(p, isvfork)$/
prochd	../h/proc.h	/^struct	prochd {$/
procxmt	../sys/sys_process.c	/^procxmt()$/
profil	../sys/kern_clock.c	/^profil()$/
protosw	../h/protosw.h	/^struct protosw {$/
prt_addr	../vaxif/if_ddn.c	/^static void prt_addr(addr)$/
prt_bytes	../vaxif/if_ddn.c	/^static void prt_bytes(bp, cnt)$/
ps	../vaxuba/ps.c	/^struct ps {$/
psattach	../vaxuba/ps.c	/^psattach(ui)$/
psclockintr	../vaxuba/ps.c	/^psclockintr(dev)$/
psclose	../vaxuba/ps.c	/^psclose(dev)$/
psdbswitch	../vaxuba/ps.c	/^psdbswitch(psp, psaddr)$/
psdbuffer	../vaxuba/ps.c	/^struct psdbuffer {$/
psdevice	../vaxuba/psreg.h	/^struct psdevice {$/
psdeviceintr	../vaxuba/ps.c	/^psdeviceintr(dev)$/
psdmaintr	../vaxuba/ps.c	/^psdmaintr(dev)$/
psextsync	../vaxuba/ps.c	/^psextsync(PC, PS)$/
psig	../sys/kern_sig.c	/^psig()$/
psignal	../sys/kern_sig.c	/^psignal(p, sig)$/
psioctl	../vaxuba/ps.c	/^psioctl(dev, cmd, data, flag)$/
psmap	../vaxuba/ps.c	/^struct psmap {$/
psmapnext	../vaxuba/ps.c	/^psmapnext(psp, psaddr)$/
psmapstart	../vaxuba/ps.c	/^psmapstart(dfaddr, psp, psaddr)$/
psmapstop	../vaxuba/ps.c	/^psmapstop(psaddr, psp, request)$/
psopen	../vaxuba/ps.c	/^psopen(dev)$/
psprobe	../vaxuba/ps.c	/^psprobe(reg)$/
psread	../vaxuba/ps.c	/^psread(dev, uio)$/
psrefresh	../vaxuba/ps.c	/^struct psrefresh {$/
psreset	../vaxuba/ps.c	/^psreset(uban)$/
psrfnext	../vaxuba/ps.c	/^psrfnext(psp, psaddr)$/
psrfstart	../vaxuba/ps.c	/^psrfstart(dfaddr, last, psp, psaddr)$/
psrfstop	../vaxuba/ps.c	/^psrfstop(psaddr, psp)$/
pssetmapbounds	../vaxuba/ps.c	/^pssetmapbounds(psp, psaddr)$/
pssystemintr	../vaxuba/ps.c	/^pssystemintr(dev)$/
pswrite	../vaxuba/ps.c	/^pswrite(dev, uio)$/
pt_ioctl	../sys/tty_pty.c	/^struct	pt_ioctl {$/
pt_tty	../vax/conf.c	/^#define	pt_tty		0$/
ptcclose	../sys/tty_pty.c	/^ptcclose(dev)$/
ptcopen	../sys/tty_pty.c	/^ptcopen(dev, flag)$/
ptcread	../sys/tty_pty.c	/^ptcread(dev, uio)$/
ptcselect	../sys/tty_pty.c	/^ptcselect(dev, rw)$/
ptcwakeup	../sys/tty_pty.c	/^ptcwakeup(tp, flag)$/
ptcwrite	../sys/tty_pty.c	/^ptcwrite(dev, uio)$/
pte	../vax/pte.h	/^struct pte$/
ptetodp	../h/vmmac.h	/^#define	ptetodp(p, pte)		(((pte) - (p)->p_p0br) - /
ptetosp	../h/vmmac.h	/^#define	ptetosp(p, pte)		(((p)->p_addr - (pte)) - /
ptetotp	../h/vmmac.h	/^#define	ptetotp(p, pte)		((pte) - (p)->p_p0br)$/
ptetov	../sys/vm_subr.c	/^ptetov(p, pte)$/
ptexpand	../sys/vm_pt.c	/^ptexpand(change, ods, oss)$/
ptob	../h/vmmac.h	/^#define	ptob(x)		((caddr_t)((x) << PGSHIFT))$/
ptrace	../sys/sys_process.c	/^ptrace()$/
ptsclose	../sys/tty_pty.c	/^ptsclose(dev)$/
ptsopen	../sys/tty_pty.c	/^ptsopen(dev, flag)$/
ptsread	../sys/tty_pty.c	/^ptsread(dev, uio)$/
ptsstart	../sys/tty_pty.c	/^ptsstart(tp)$/
ptsstop	../sys/tty_pty.c	/^ptsstop(tp, flush)$/
ptswrite	../sys/tty_pty.c	/^ptswrite(dev, uio)$/
ptyioctl	../sys/tty_pty.c	/^ptyioctl(dev, cmd, data, flag)$/
putbits	../sys/sys_generic.c	/^#define	putbits(name, x) \\$/
putc	../sys/tty_subr.c	/^putc(c, p)$/
putchar	../sys/subr_prf.c	/^putchar(c, flags, tp)$/
putdq	../sys/quota_kern.c	/^putdq(mp, dq, free)$/
putmemc	../vax/vm_machdep.c	/^putmemc(addr, val)$/
putw	../sys/tty_subr.c	/^putw(c, p)$/
q_to_b	../sys/tty_subr.c	/^q_to_b(q, cp, cc)$/
qaddr_t	../h/types.h	/^typedef	long *	qaddr_t;	\/* should be typedef quad/
qbus	../vax/cpu.h	/^struct qbus {$/
qclean	../sys/quota_subr.c	/^qclean()$/
qdclose	../vax/conf.c	/^#define qdclose	nodev$/
qdcons_init	../vax/conf.c	/^#define qdcons_init	nodev$/
qdioctl	../vax/conf.c	/^#define qdioctl	nodev$/
qdopen	../vax/conf.c	/^#define qdopen	nodev$/
qdread	../vax/conf.c	/^#define qdread	nodev$/
qdreset	../vax/conf.c	/^#define qdreset	nulldev$/
qdselect	../vax/conf.c	/^#define qdselect	nodev$/
qdstop	../vax/conf.c	/^#define qdstop	nodev$/
qdwrite	../vax/conf.c	/^#define qdwrite	nodev$/
qe_ring	../vaxif/if_qereg.h	/^struct qe_ring	{$/
qe_setaddr	../vaxif/if_qe.c	/^qe_setaddr(physaddr, unit)$/
qe_softc	../vaxif/if_qe.c	/^struct	qe_softc {$/
qeattach	../vaxif/if_qe.c	/^qeattach(ui)$/
qedataaddr	../vaxif/if_qe.c	/^#define	qedataaddr(eh, off, type)	((type)(((caddr_/
qedevice	../vaxif/if_qereg.h	/^struct qedevice {$/
qeinit	../vaxif/if_qe.c	/^qeinit(unit)$/
qeinitdesc	../vaxif/if_qe.c	/^qeinitdesc(rp, addr, len)$/
qeintr	../vaxif/if_qe.c	/^qeintr(unit)$/
qeioctl	../vaxif/if_qe.c	/^qeioctl(ifp, cmd, data)$/
qeoutput	../vaxif/if_qe.c	/^qeoutput(ifp, m0, dst)$/
qeprobe	../vaxif/if_qe.c	/^qeprobe(reg)$/
qeq	../vax/autoconf.c	/^#define	qeq(a, b)	( a == b || a == '?' )$/
qeread	../vaxif/if_qe.c	/^qeread(sc, ifrw, len)$/
qereset	../vaxif/if_qe.c	/^qereset(unit, uban)$/
qerestart	../vaxif/if_qe.c	/^qerestart(sc)$/
qerint	../vaxif/if_qe.c	/^qerint(unit)$/
qesetup	../vaxif/if_qe.c	/^qesetup( sc )$/
qestart	../vaxif/if_qe.c	/^qestart(dev)$/
qetint	../vaxif/if_qe.c	/^qetint(unit)$/
qewatch	../vaxif/if_qe.c	/^qewatch()$/
qfind	../sys/quota_kern.c	/^qfind(uid)$/
qhash	../sys/quota_kern.c	/^struct	qhash	{$/
qquota	../sys/quota_sys.c	/^qquota()$/
qsetuid	../sys/quota_sys.c	/^qsetuid(uid, noquota)$/
qstart	../sys/quota_subr.c	/^qstart(q)$/
qsync	../sys/quota_sys.c	/^qsync(dev)$/
qtinit	../sys/quota_kern.c	/^qtinit()$/
quad	../h/types.h	/^typedef	struct	_quad { long val[2]; } quad;$/
quota	../h/quota.h	/^struct quota {$/
qvclose	../vax/conf.c	/^#define qvclose	nodev$/
qvcons_init	../vax/conf.c	/^#define qvcons_init	nodev$/
qvioctl	../vax/conf.c	/^#define qvioctl	nodev$/
qvopen	../vax/conf.c	/^#define qvopen	nodev$/
qvread	../vax/conf.c	/^#define qvread	nodev$/
qvreset	../vax/conf.c	/^#define qvreset	nulldev$/
qvselect	../vax/conf.c	/^#define qvselect	nodev$/
qvstop	../vax/conf.c	/^#define qvstop	nodev$/
qvwrite	../vax/conf.c	/^#define qvwrite	nodev$/
qwarn	../sys/quota_subr.c	/^qwarn(dq)$/
r_lenerr	../vaxif/if_dereg.h	/^#define	r_lenerr	r_tdrerr$/
r_val1	../h/user.h	/^#define	r_val1	u_rv.R_val1$/
r_val2	../h/user.h	/^#define	r_val2	u_rv.R_val2$/
ra_geom	../vaxuba/uda.c	/^	struct	ra_geom {	\/* geometry information *\/$/
ra_info	../vaxuba/uda.c	/^struct ra_info {$/
raw_attach	../net/raw_cb.c	/^raw_attach(so, proto)$/
raw_bind	../net/raw_cb.c	/^raw_bind(so, nam)$/
raw_connaddr	../net/raw_cb.c	/^raw_connaddr(rp, nam)$/
raw_ctlinput	../net/raw_usrreq.c	/^raw_ctlinput(cmd, arg)$/
raw_detach	../net/raw_cb.c	/^raw_detach(rp)$/
raw_disconnect	../net/raw_cb.c	/^raw_disconnect(rp)$/
raw_header	../net/raw_cb.h	/^struct raw_header {$/
raw_init	../net/raw_usrreq.c	/^raw_init()$/
raw_input	../net/raw_usrreq.c	/^raw_input(m0, proto, src, dst)$/
raw_usrreq	../net/raw_usrreq.c	/^raw_usrreq(so, req, m, nam, rights)$/
rawarc	../h/gprof.h	/^struct rawarc {$/
rawcb	../net/raw_cb.h	/^struct rawcb {$/
rawintr	../net/raw_usrreq.c	/^rawintr()$/
rawread	../sys/vm_swp.c	/^rawread(dev, uio)$/
rawwrite	../sys/vm_swp.c	/^rawwrite(dev, uio)$/
rcv	../sys/uipc_usrreq.c	/^#define	rcv (&so->so_rcv)$/
rcv_xmtbuf	../vaxif/if_uba.c	/^rcv_xmtbuf(ifw)$/
rdwri	../sys/sys_inode.c	/^rdwri(rw, ip, base, len, offset, segflg, aresid)$/
read	../sys/sys_generic.c	/^read()$/
readdisklabel	../sys/ufs_disksubr.c	/^readdisklabel(dev, strat, lp)$/
readlink	../sys/ufs_syscalls.c	/^readlink()$/
readv	../sys/sys_generic.c	/^readv()$/
realitexpire	../sys/kern_time.c	/^realitexpire(p)$/
realloccg	../sys/ufs_alloc.c	/^realloccg(ip, bprev, bpref, osize, nsize)$/
reboot	../sys/kern_xxx.c	/^reboot()$/
recv	../sys/uipc_syscalls.c	/^recv()$/
recvfrom	../sys/uipc_syscalls.c	/^recvfrom()$/
recvit	../sys/uipc_syscalls.c	/^recvit(s, mp, flags, namelenp, rightslenp)$/
recvmsg	../sys/uipc_syscalls.c	/^recvmsg()$/
remque	../h/systm.h	/^#define	remque(q)	_remque((caddr_t)q)$/
remrq	../vax/Locore.c	/^remrq(p) struct proc *p; { }$/
rename	../sys/ufs_syscalls.c	/^rename()$/
reqptr	../vaxuba/np.c	/^typedef struct npreq *reqptr;$/
reset ../vax/locore.s /^ENTRY(reset, 0)$/
resettodr	../vax/clock.c	/^resettodr()$/
restor_xmtbuf	../vaxif/if_uba.c	/^restor_xmtbuf(ifw)$/
resuba	../vax/sys_machdep.c	/^resuba()$/
resume	../vax/Locore.c	/^resume(pcbpf) unsigned pcbpf; { }$/
rewinddir	../h/dir.h	/^#define rewinddir(dirp)	seekdir((dirp), (long)0)$/
rexit	../sys/kern_exit.c	/^rexit()$/
rhy_output	../vaxif/raw_hy.c	/^rhy_output(m, so)$/
rimp_output	../netimp/raw_imp.c	/^rimp_output(m, so)$/
rip_ctloutput	../netinet/raw_ip.c	/^rip_ctloutput(op, so, level, optname, m)$/
rip_input	../netinet/raw_ip.c	/^rip_input(m)$/
rip_output	../netinet/raw_ip.c	/^rip_output(m0, so)$/
rk_softc	../vaxuba/rk.c	/^struct	rk_softc {$/
rkattach	../vaxuba/rk.c	/^rkattach(ui)$/
rkdevice	../vaxuba/rkreg.h	/^struct rkdevice$/
rkdgo	../vaxuba/rk.c	/^rkdgo(um)$/
rkdump	../vaxuba/rk.c	/^rkdump(dev)$/
rkecc	../vaxuba/rk.c	/^rkecc(ui, flag)$/
rkintr	../vaxuba/rk.c	/^rkintr(rk11)$/
rkopen	../vaxuba/rk.c	/^rkopen(dev)$/
rkprobe	../vaxuba/rk.c	/^rkprobe(reg)$/
rkreset	../vaxuba/rk.c	/^rkreset(uban)$/
rksize	../vaxuba/rk.c	/^rksize(dev)$/
rkslave	../vaxuba/rk.c	/^rkslave(ui, reg)$/
rkst	../vaxuba/rk.c	/^struct	rkst {$/
rkstart	../vaxuba/rk.c	/^rkstart(um)$/
rkstrategy	../vaxuba/rk.c	/^rkstrategy(bp)$/
rkunit	../vaxuba/rk.c	/^#define rkunit(dev)	(minor(dev) >> 3)$/
rkustart	../vaxuba/rk.c	/^rkustart(ui)$/
rkwait	../vaxuba/rk.c	/^rkwait(addr)$/
rkwatch	../vaxuba/rk.c	/^rkwatch()$/
rl_softc	../vaxuba/rl.c	/^struct	rl_softc {$/
rl_stat	../vaxuba/rl.c	/^struct	rl_stat {$/
rlattach	../vaxuba/rl.c	/^rlattach(ui)$/
rldevice	../vaxuba/rlreg.h	/^struct rldevice {$/
rldgo	../vaxuba/rl.c	/^rldgo(um)$/
rldump	../vaxuba/rl.c	/^rldump(dev)$/
rlimit	../h/resource.h	/^struct rlimit {$/
rlintr	../vaxuba/rl.c	/^rlintr(rl21)$/
rlopen	../vaxuba/rl.c	/^rlopen(dev)$/
rlprobe	../vaxuba/rl.c	/^rlprobe(reg)$/
rlreset	../vaxuba/rl.c	/^rlreset(uban)$/
rlsize	../vaxuba/rl.c	/^rlsize(dev)$/
rlslave	../vaxuba/rl.c	/^rlslave(ui, reg)$/
rlstart	../vaxuba/rl.c	/^rlstart(um)$/
rlstrategy	../vaxuba/rl.c	/^rlstrategy(bp)$/
rlunit	../vaxuba/rl.c	/^#define rlunit(dev)	(minor(dev) >> 3)$/
rlustart	../vaxuba/rl.c	/^rlustart(ui)$/
rlwait	../vaxuba/rl.c	/^rlwait(rladdr)$/
rlwatch	../vaxuba/rl.c	/^rlwatch()$/
rmalloc	../sys/subr_rmap.c	/^rmalloc(mp, size)$/
rmdir	../sys/ufs_syscalls.c	/^rmdir()$/
rmfree	../sys/subr_rmap.c	/^rmfree(mp, size, addr)$/
rmget	../sys/subr_rmap.c	/^rmget(mp, size, addr)$/
rminit	../sys/subr_rmap.c	/^rminit(mp, size, addr, name, mapsize)$/
rms	../vaxuba/dmxreg.h	/^#define	rms	octun.irc[1]	\/* receive modem status /
rmstsc	../vaxuba/dmxreg.h	/^#define	rmstsc	octun.irw	\/* rcv modem status, xmi/
roundrobin	../sys/kern_synch.c	/^roundrobin()$/
roundup	../h/param.h	/^#define	roundup(x, y)	((((x)+((y)-1))\/(y))*(y))$/
route	../net/route.h	/^struct route {$/
rpb	../vax/rpb.h	/^struct rpb {$/
rqinit	../sys/kern_synch.c	/^rqinit()$/
rsp	../vaxuba/dmxreg.h	/^#define	rsp	rbuf		\/* receive silo parameter regis/
rtalloc	../net/route.c	/^rtalloc(ro)$/
rtentry	../net/route.h	/^struct rtentry {$/
rtfree	../net/route.c	/^rtfree(rt)$/
rtinit	../net/route.c	/^rtinit(dst, gateway, cmd, flags)$/
rtioctl	../net/route.c	/^rtioctl(cmd, data)$/
rtredirect	../net/route.c	/^rtredirect(dst, gateway, flags, src)$/
rtrequest	../net/route.c	/^rtrequest(req, entry)$/
rtstat	../net/route.h	/^struct	rtstat {$/
ru_first	../h/resource.h	/^#define	ru_first	ru_ixrss$/
ru_last	../h/resource.h	/^#define	ru_last		ru_nivcsw$/
ruadd	../sys/kern_resource.c	/^ruadd(ru, ru2)$/
rusage	../h/resource.h	/^struct	rusage {$/
rwip	../sys/sys_inode.c	/^rwip(ip, uio, rw)$/
rwuio	../sys/sys_generic.c	/^rwuio(uio, rw)$/
rx50close	../vax/conf.c	/^#define	rx50close	nodev$/
rx50device	../vax/rx50reg.h	/^struct rx50device {$/
rx50intr	../vax/rx50.c	/^rx50intr()$/
rx50open	../vax/conf.c	/^#define	rx50open	nodev$/
rx50operation	../vax/rx50.c	/^rx50operation(dev, rw, uio)$/
rx50read	../vax/conf.c	/^#define	rx50read	nodev$/
rx50state	../vax/rx50.c	/^struct rx50state {$/
rx50unit	../vax/rx50.c	/^#define	rx50unit(dev)	minor(dev)$/
rx50write	../vax/conf.c	/^#define	rx50write	nodev$/
rx_ctlr	../vaxuba/rx.c	/^struct	rx_ctlr {$/
rx_softc	../vaxuba/rx.c	/^struct rx_softc {$/
rxattach	../vaxuba/rx.c	/^rxattach(ui)$/
rxcdintr	../vax/ka820.c	/^rxcdintr()$/
rxclose	../vaxuba/rx.c	/^rxclose(dev, flag)$/
rxdeferr	../vaxuba/rxreg.h	/^struct rxdeferr {$/
rxdevice	../vaxuba/rxreg.h	/^struct rxdevice {$/
rxdgo	../vaxuba/rx.c	/^rxdgo(um)$/
rxerr	../vaxuba/rx.c	/^struct rxerr {$/
rxformat	../vaxuba/rx.c	/^rxformat(dev)$/
rxintr	../vaxuba/rx.c	/^rxintr(ctlr)$/
rxioctl	../vaxuba/rx.c	/^rxioctl(dev, cmd, data, flag)$/
rxmap	../vaxuba/rx.c	/^rxmap(bp, psector, ptrack)$/
rxopen	../vaxuba/rx.c	/^rxopen(dev, flag)$/
rxprobe	../vaxuba/rx.c	/^rxprobe (reg)$/
rxpurge	../vaxuba/rx.c	/^rxpurge(um)$/
rxread	../vaxuba/rx.c	/^rxread(dev, uio)$/
rxreset	../vaxuba/rx.c	/^rxreset(uban)$/
rxslave	../vaxuba/rx.c	/^rxslave(ui, reg)$/
rxstart	../vaxuba/rx.c	/^rxstart(um)$/
rxstrategy	../vaxuba/rx.c	/^rxstrategy(bp)$/
rxustart	../vaxuba/rx.c	/^rxustart(ui)$/
rxwatch	../vaxuba/rx.c	/^rxwatch()$/
rxwrite	../vaxuba/rx.c	/^rxwrite(dev, uio)$/
s_ack	../netns/spp_var.h	/^#define s_ack s_shdr.sp_ack		\/* acknowledge numbe/
s_alo	../netns/spp_var.h	/^#define s_alo s_shdr.sp_alo		\/* allocation number/
s_cc	../netns/spp_var.h	/^#define s_cc s_shdr.sp_cc		\/* connection control /
s_did	../netns/spp_var.h	/^#define s_did s_shdr.sp_did		\/* destination conne/
s_dport	../netns/spp_var.h	/^#define s_dport s_idp->idp_dna.x_port	\/* where we/
s_dt	../netns/spp_var.h	/^#define s_dt s_shdr.sp_dt		\/* datastream type *\//
s_seq	../netns/spp_var.h	/^#define s_seq s_shdr.sp_seq		\/* sequence number */
s_sid	../netns/spp_var.h	/^#define s_sid s_shdr.sp_sid		\/* source connection/
saccess	../sys/ufs_syscalls.c	/^saccess()$/
saerr	../vaxuba/uda.c	/^static struct saerr {$/
satons_addr	../netns/ns.h	/^#define satons_addr(sa)	(((struct sockaddr_ns *)&(/
satosin	../netinet/in.c	/^#define	satosin(sa)	((struct sockaddr_in *)(sa))$/
save_rte	../netinet/ip_input.c	/^save_rte(option, dst)$/
savectx	../vax/Locore.c	/^savectx(lp) label_t *lp; { return (0); }$/
savectx ../vax/locore.s /^ENTRY(savectx, 0)$/
savevar	../vax/kdb_opset.c	/^static savevar(val)$/
sballoc	../h/socketvar.h	/^#define	sballoc(sb, m) { \\$/
sbappend	../sys/uipc_socket2.c	/^sbappend(sb, m)$/
sbappendaddr	../sys/uipc_socket2.c	/^sbappendaddr(sb, asa, m0, rights0)$/
sbappendrecord	../sys/uipc_socket2.c	/^sbappendrecord(sb, m0)$/
sbappendrights	../sys/uipc_socket2.c	/^sbappendrights(sb, m0, rights)$/
sbcompress	../sys/uipc_socket2.c	/^sbcompress(sb, m, n)$/
sbdrop	../sys/uipc_socket2.c	/^sbdrop(sb, len)$/
sbdroprecord	../sys/uipc_socket2.c	/^sbdroprecord(sb)$/
sbflush	../sys/uipc_socket2.c	/^sbflush(sb)$/
sbfree	../h/socketvar.h	/^#define	sbfree(sb, m) { \\$/
sbia_regs	../vax/ioa.h	/^struct	sbia_regs$/
sblock	../h/socketvar.h	/^#define sblock(sb) { \\$/
sbrelease	../sys/uipc_socket2.c	/^sbrelease(sb)$/
sbreserve	../sys/uipc_socket2.c	/^sbreserve(sb, cc)$/
sbrk	../sys/kern_mman.c	/^sbrk()$/
sbselqueue	../sys/uipc_socket2.c	/^sbselqueue(sb)$/
sbspace	../h/socketvar.h	/^#define	sbspace(sb) \\$/
sbunlock	../h/socketvar.h	/^#define	sbunlock(sb) { \\$/
sbupdate	../sys/ufs_mount.c	/^sbupdate(mp)$/
sbwait	../sys/uipc_socket2.c	/^sbwait(sb)$/
sbwakeup	../sys/uipc_socket2.c	/^sbwakeup(sb)$/
sc	../netimp/if_imp.c	/^#define sc	((struct imp_softc *)ifp)$/
sc_cyl	../vaxuba/idc.c	/^#define	sc_cyl		sc_un.dar_cyl$/
sc_dar	../vaxuba/idc.c	/^#define	sc_dar		sc_un.dar_dar$/
sc_datck	../vaxif/if_dmc.c	/^#define sc_datck sc_errors[0]$/
sc_disc	../vaxif/if_dmc.c	/^#define sc_disc  sc_errors[3]$/
sc_nobuf	../vaxif/if_dmc.c	/^#define sc_nobuf sc_errors[2]$/
sc_sect	../vaxuba/idc.c	/^#define	sc_sect		sc_un.dar_sect$/
sc_timeo	../vaxif/if_dmc.c	/^#define sc_timeo sc_errors[1]$/
sc_trk	../vaxuba/idc.c	/^#define	sc_trk		sc_un.dar_trk$/
scale60	../sys/kern_xxx.c	/^scale60(tvp)$/
scanc	../sys/ufs_subr.c	/^scanc(size, cp, table, mask)$/
scb	../vax/scb.h	/^struct scb {$/
scb_bierr	../vax/scb.h	/^#define	scb_bierr scb_sbisilo		\/*=BI error (8200)/
scb_sbierr	../vax/scb.h	/^#define scb_sbierr scb_wtime		\/*=SBI error (8600)/
scbentry	../vax/scb.h	/^#define	scbentry(f, how)		((int (*)())(((int)f)+ho/
sched	../sys/vm_sched.c	/^sched()$/
schedcpu	../sys/kern_synch.c	/^schedcpu()$/
schednetisr	../net/netisr.h	/^#define	schednetisr(anisr)	{ netisr |= 1<<(anisr);/
schedpaging	../sys/vm_sched.c	/^schedpaging()$/
select	../sys/sys_generic.c	/^select()$/
selscan	../sys/sys_generic.c	/^selscan(ibits, obits, nfd)$/
seltrue	../sys/sys_generic.c	/^seltrue(dev, flag)$/
selwakeup	../sys/sys_generic.c	/^selwakeup(p, coll)$/
send	../sys/uipc_syscalls.c	/^send()$/
send_restart	../vaxif/if_ddn.c	/^static void send_restart(ds)$/
send_supr	../vaxif/if_ddn.c	/^static void send_supr(ds, cmd, p1, p2)$/
sendit	../sys/uipc_syscalls.c	/^sendit(s, mp, flags)$/
sendmsg	../sys/uipc_syscalls.c	/^sendmsg()$/
sendsig	../vax/machdep.c	/^sendsig(p, sig, mask)$/
sendto	../sys/uipc_syscalls.c	/^sendto()$/
seq_outref	../vax/mscp.h	/^#define	seq_outref	seq_bytecount	\/* aka outref (a/
seq_rbn	../vax/mscp.h	/^#define	seq_rbn		seq_bytecount	\/* aka RBN (replac/
setbit	../h/param.h	/^#define	setbit(a,i)	((a)[(i)\/NBBY] |= 1<<((i)%NBB/
setblock	../sys/ufs_subr.c	/^setblock(fs, cp, h)$/
setconf	../vax/swapgeneric.c	/^setconf()$/
setdisklabel	../sys/ufs_disksubr.c	/^setdisklabel(olp, nlp, openmask)$/
setdlim	../sys/quota_sys.c	/^setdlim(q, dev, addr)$/
setdopt	../sys/kern_descrip.c	/^setdopt()$/
setduse	../sys/quota_sys.c	/^setduse(q, dev, addr)$/
setexit ../vax/locore.s /^ENTRY(setexit, 0)$/
setgroups	../sys/kern_prot.c	/^setgroups()$/
sethostid	../sys/kern_xxx.c	/^sethostid()$/
sethostname	../sys/kern_xxx.c	/^sethostname()$/
setitimer	../sys/kern_time.c	/^setitimer()$/
setjmp	../vax/Locore.c	/^setjmp(lp) label_t *lp; { return (0); }$/
setp0br	../h/vmmac.h	/^#define	setp0br(x)	(u.u_pcb.pcb_p0br = (x), mtpr(P/
setp0lr	../h/vmmac.h	/^#define	setp0lr(x)	(u.u_pcb.pcb_p0lr = \\$/
setp1br	../h/vmmac.h	/^#define	setp1br(x)	(u.u_pcb.pcb_p1br = (x), mtpr(P/
setp1lr	../h/vmmac.h	/^#define	setp1lr(x)	(u.u_pcb.pcb_p1lr = (x), mtpr(P/
setp2br	../h/vmmac.h	/^#define	setp2br(x)	(u.u_pcb.pcb_p2br = (x), mtpr(P/
setp2lr	../h/vmmac.h	/^#define	setp2lr(x)	(u.u_pcb.pcb_p2lr = (x), mtpr(P/
setpcb	../vax/kdb_machdep.c	/^setpcb(locr0)$/
setpgrp	../sys/kern_prot.c	/^setpgrp()$/
setpri	../sys/kern_synch.c	/^setpri(pp)$/
setpriority	../sys/kern_resource.c	/^setpriority()$/
setquota	../sys/quota_sys.c	/^setquota()$/
setredzone	../vax/vm_machdep.c	/^setredzone(pte, vaddr)$/
setregid	../sys/kern_prot.c	/^setregid()$/
setregs	../vax/machdep.c	/^setregs(entry)$/
setreuid	../sys/kern_prot.c	/^setreuid()$/
setrlimit	../sys/kern_resource.c	/^setrlimit()$/
setroot	../vax/autoconf.c	/^setroot()$/
setrq	../vax/Locore.c	/^setrq(p) struct proc *p; { }$/
setrun	../sys/kern_synch.c	/^setrun(p)$/
setscbnex	../vax/autoconf.c	/^setscbnex(fn)$/
setsigvec	../sys/kern_sig.c	/^setsigvec(sig, sv)$/
setsockopt	../sys/uipc_syscalls.c	/^setsockopt()$/
setsoftkdb	../vax/kdbparam.h	/^#define	setsoftkdb()	mtpr(SIRR, KDB_IPL)$/
setsoftnet	../net/netisr.h	/^#define	setsoftnet()	mtpr(SIRR, 12)$/
setsstep	../vax/kdbparam.h	/^#define	setsstep()	(pcb.pcb_psl |= TBIT)$/
setthetime	../sys/kern_time.c	/^setthetime(tv)$/
settimeofday	../sys/kern_time.c	/^settimeofday()$/
settprot	../vax/vm_machdep.c	/^settprot(tprot)$/
setwarn	../sys/quota_sys.c	/^setwarn(q, dev, addr)$/
sgttyb	../h/ioctl.h	/^struct sgttyb {$/
shorten	../vax/kdbparam.h	/^#define shorten(a)	((short)(a))$/
shortliteral	../vax/kdb_opset.c	/^shortliteral(mode, optype)$/
showme	../vaxif/if_ix.c	/^static showme() {$/
shutdown	../sys/uipc_syscalls.c	/^shutdown()$/
si_ack	../netns/spidp.h	/^#define si_ack	si_s.sp_ack$/
si_alo	../netns/spidp.h	/^#define si_alo	si_s.sp_alo$/
si_cc	../netns/spidp.h	/^#define si_cc	si_s.sp_cc$/
si_did	../netns/spidp.h	/^#define si_did	si_s.sp_did$/
si_dna	../netns/spidp.h	/^#define si_dna	si_i.idp_dna$/
si_dt	../netns/spidp.h	/^#define si_dt	si_s.sp_dt$/
si_len	../netns/spidp.h	/^#define si_len	si_i.idp_len$/
si_pt	../netns/spidp.h	/^#define si_pt	si_i.idp_pt$/
si_seq	../netns/spidp.h	/^#define si_seq	si_s.sp_seq$/
si_sid	../netns/spidp.h	/^#define si_sid	si_s.sp_sid$/
si_sna	../netns/spidp.h	/^#define si_sna	si_i.idp_sna$/
si_sport	../netns/spidp.h	/^#define si_sport	si_i.idp_sna.x_port$/
si_sum	../netns/spidp.h	/^#define si_sum	si_i.idp_sum$/
si_tc	../netns/spidp.h	/^#define si_tc	si_i.idp_tc$/
sigblock	../sys/kern_sig.c	/^sigblock()$/
sigcontext	../h/signal.h	/^struct	sigcontext {$/
sigframe	../vax/machdep.c	/^	register struct sigframe {$/
sigmask	../h/signal.h	/^#define sigmask(m)	(1 << ((m)-1))$/
sign16	../vaxuba/npreg.h	/^typedef short	sign16;			\/* 16 bit signed value */
sigpause	../sys/kern_sig.c	/^sigpause()$/
sigreturn	../vax/machdep.c	/^sigreturn()$/
sigsetmask	../sys/kern_sig.c	/^sigsetmask()$/
sigstack	../sys/kern_sig.c	/^sigstack()$/
sigvec	../sys/kern_sig.c	/^sigvec()$/
size	../vaxmba/hp.c	/^struct	size {$/
size_t	../h/types.h	/^typedef	long	size_t;$/
skpc	../sys/ufs_subr.c	/^skpc(mask, size, cp)$/
sl_btom	../net/if_sl.c	/^sl_btom(sc, len, ifp)$/
sl_softc	../net/if_sl.c	/^struct sl_softc {$/
slattach	../net/if_sl.c	/^slattach()$/
slclose	../net/if_sl.c	/^slclose(tp)$/
sleep	../sys/kern_synch.c	/^sleep(chan, pri)$/
slinit	../net/if_sl.c	/^slinit(sc)$/
slinput	../net/if_sl.c	/^slinput(c, tp)$/
slioctl	../net/if_sl.c	/^slioctl(ifp, cmd, data)$/
slopen	../net/if_sl.c	/^slopen(dev, tp)$/
sloutput	../net/if_sl.c	/^sloutput(ifp, m, dst)$/
slpque	../sys/kern_synch.c	/^struct slpque {$/
slstart	../net/if_sl.c	/^slstart(tp)$/
sltioctl	../net/if_sl.c	/^sltioctl(tp, cmd, data, flag)$/
smmap	../sys/kern_mman.c	/^smmap()$/
smount	../sys/ufs_mount.c	/^smount()$/
snarf	../vax/kdb_opset.c	/^static numberp snarf(nbytes)$/
snarfreloc	../vax/kdb_opset.c	/^static numberp snarfreloc(nbytes)$/
snarfuchar	../vax/kdb_opset.c	/^snarfuchar()$/
snd	../sys/uipc_usrreq.c	/^#define snd (&so2->so_snd)$/
snd_supr	../vaxif/if_hdh.c	/^snd_supr(unit, msg, len)$/
snderr	../sys/uipc_socket.c	/^#define	snderr(errno)	{ error = errno; splx(s); go/
sns_port	../netns/ns.h	/^#define sns_port sns_addr.x_port$/
soabort	../sys/uipc_socket.c	/^soabort(so)$/
soaccept	../sys/uipc_socket.c	/^soaccept(so, nam)$/
sobind	../sys/uipc_socket.c	/^sobind(so, nam)$/
socantrcvmore	../sys/uipc_socket2.c	/^socantrcvmore(so)$/
socantsendmore	../sys/uipc_socket2.c	/^socantsendmore(so)$/
sockaddr	../h/socket.h	/^struct sockaddr {$/
sockaddr_in	../netinet/in.h	/^struct sockaddr_in {$/
sockaddr_ns	../netns/ns.h	/^struct sockaddr_ns {$/
sockaddr_un	../h/un.h	/^struct	sockaddr_un {$/
sockargs	../sys/uipc_syscalls.c	/^sockargs(aname, name, namelen, type)$/
sockbuf	../h/socketvar.h	/^	struct	sockbuf {$/
socket	../sys/uipc_syscalls.c	/^socket()$/
socketpair	../sys/uipc_syscalls.c	/^socketpair()$/
sockproto	../h/socket.h	/^struct sockproto {$/
soclose	../sys/uipc_socket.c	/^soclose(so)$/
soconnect	../sys/uipc_socket.c	/^soconnect(so, nam)$/
soconnect2	../sys/uipc_socket.c	/^soconnect2(so1, so2)$/
socreate	../sys/uipc_socket.c	/^socreate(dom, aso, type, proto)$/
sodisconnect	../sys/uipc_socket.c	/^sodisconnect(so)$/
sofree	../sys/uipc_socket.c	/^sofree(so)$/
softclock	../sys/kern_clock.c	/^softclock(pc, ps)$/
sogetopt	../sys/uipc_socket.c	/^sogetopt(so, level, optname, mp)$/
sohasoutofband	../sys/uipc_socket.c	/^sohasoutofband(so)$/
soisconnected	../sys/uipc_socket2.c	/^soisconnected(so)$/
soisconnecting	../sys/uipc_socket2.c	/^soisconnecting(so)$/
soisdisconnected	../sys/uipc_socket2.c	/^soisdisconnected(so)$/
soisdisconnecting	../sys/uipc_socket2.c	/^soisdisconnecting(so)$/
solisten	../sys/uipc_socket.c	/^solisten(so, backlog)$/
sonewconn	../sys/uipc_socket2.c	/^sonewconn(head)$/
soo_close	../sys/sys_socket.c	/^soo_close(fp)$/
soo_ioctl	../sys/sys_socket.c	/^soo_ioctl(fp, cmd, data)$/
soo_rw	../sys/sys_socket.c	/^soo_rw(fp, rw, uio)$/
soo_select	../sys/sys_socket.c	/^soo_select(fp, which)$/
soo_stat	../sys/sys_socket.c	/^soo_stat(so, ub)$/
soqinsque	../sys/uipc_socket2.c	/^soqinsque(head, so, q)$/
soqremque	../sys/uipc_socket2.c	/^soqremque(so, q)$/
soreadable	../h/socketvar.h	/^#define	soreadable(so) \\$/
soreceive	../sys/uipc_socket.c	/^soreceive(so, aname, uio, flags, rightsp)$/
soreserve	../sys/uipc_socket2.c	/^soreserve(so, sndcc, rcvcc)$/
sorflush	../sys/uipc_socket.c	/^sorflush(so)$/
sorwakeup	../h/socketvar.h	/^#define	sorwakeup(so)	sowakeup((so), &(so)->so_rcv/
sosend	../sys/uipc_socket.c	/^sosend(so, nam, uio, flags, rights)$/
sosendallatonce	../h/socketvar.h	/^#define	sosendallatonce(so) \\$/
sosetopt	../sys/uipc_socket.c	/^sosetopt(so, level, optname, m0)$/
soshutdown	../sys/uipc_socket.c	/^soshutdown(so, how)$/
sotoinpcb	../netinet/in_pcb.h	/^#define	sotoinpcb(so)	((struct inpcb *)(so)->so_pc/
sotonspcb	../netns/ns_pcb.h	/^#define	sotonspcb(so)		((struct nspcb *)((so)->so_/
sotorawcb	../net/raw_cb.h	/^#define	sotorawcb(so)		((struct rawcb *)(so)->so_p/
sotosppcb	../netns/spp_var.h	/^#define	sotosppcb(so)	(nstosppcb(sotonspcb(so)))$/
sototcpcb	../netinet/tcp_var.h	/^#define	sototcpcb(so)	(intotcpcb(sotoinpcb(so)))$/
sotounpcb	../h/unpcb.h	/^#define	sotounpcb(so)	((struct unpcb *)((so)->so_p/
sowakeup	../sys/uipc_socket2.c	/^sowakeup(so, sb)$/
sowriteable	../h/socketvar.h	/^#define	sowriteable(so) \\$/
sowwakeup	../h/socketvar.h	/^#define	sowwakeup(so)	sowakeup((so), &(so)->so_snd/
spgrp	../sys/kern_proc.c	/^spgrp(top)$/
sphdr	../netns/sp.h	/^struct sphdr {$/
spidp	../netns/spidp.h	/^struct spidp {$/
spidp_q	../netns/spidp.h	/^struct spidp_q {$/
spl0	../vax/Locore.c	/^spl0() { }$/
spl4	../vax/Locore.c	/^spl4() { return (0); }$/
spl5	../vax/Locore.c	/^spl5() { return (0); }$/
spl6	../vax/Locore.c	/^spl6() { return (0); }		\/* not currently used *\//
spl7	../vax/Locore.c	/^spl7() { return (0); }$/
spl_enet	../vaxif/if_enreg.h	/^#define	spl_enet()	spl5()$/
splbio	../vax/Locore.c	/^splbio() { return (0); }$/
splclock	../vax/Locore.c	/^splclock() { return (0); }$/
splhigh	../vax/Locore.c	/^splhigh() { return (0); }$/
splnet	../vax/Locore.c	/^splnet() { return (0); }$/
splsoftclock	../vax/Locore.c	/^splsoftclock() { return (0); }$/
spltty	../vax/Locore.c	/^spltty() { return (0); }$/
spltu	../vax/tu.c	/^#define	spltu()	((cpu == VAX_750) ? spl7() : spl4(/
spluba	../vaxuba/uba.c	/^#define	spluba	spl7		\/* IPL 17 *\/$/
splx	../vax/Locore.c	/^splx(s) int s; { }$/
spp_abort	../netns/spp_usrreq.c	/^spp_abort(nsp)$/
spp_close	../netns/spp_usrreq.c	/^spp_close(cb)$/
spp_ctlinput	../netns/spp_usrreq.c	/^spp_ctlinput(cmd, arg)$/
spp_ctloutput	../netns/spp_usrreq.c	/^spp_ctloutput(req, so, level, name, value)$/
spp_debug	../netns/spp_debug.h	/^struct	spp_debug {$/
spp_disconnect	../netns/spp_usrreq.c	/^spp_disconnect(cb)$/
spp_drop	../netns/spp_usrreq.c	/^spp_drop(cb, errno)$/
spp_fasttimo	../netns/spp_usrreq.c	/^spp_fasttimo()$/
spp_fixmtu	../netns/spp_usrreq.c	/^spp_fixmtu(nsp)$/
spp_init	../netns/spp_usrreq.c	/^spp_init()$/
spp_input	../netns/spp_usrreq.c	/^spp_input(m, nsp, ifp)$/
spp_istat	../netns/spp_var.h	/^struct	spp_istat {$/
spp_output	../netns/spp_usrreq.c	/^spp_output(cb, m0)$/
spp_quench	../netns/spp_usrreq.c	/^spp_quench(nsp)$/
spp_reass	../netns/spp_usrreq.c	/^spp_reass(cb, si)$/
spp_setpersist	../netns/spp_usrreq.c	/^spp_setpersist(cb)$/
spp_slowtimo	../netns/spp_usrreq.c	/^spp_slowtimo()$/
spp_template	../netns/spp_usrreq.c	/^spp_template(cb)$/
spp_timers	../netns/spp_usrreq.c	/^spp_timers(cb, timer)$/
spp_trace	../netns/spp_debug.c	/^spp_trace(act, ostate, sp, si, req)$/
spp_usrclosed	../netns/spp_usrreq.c	/^spp_usrclosed(cb)$/
spp_usrreq	../netns/spp_usrreq.c	/^spp_usrreq(so, req, m, nam, rights)$/
spp_usrreq_sp	../netns/spp_usrreq.c	/^spp_usrreq_sp(so, req, m, nam, rights)$/
sppcb	../netns/spp_var.h	/^struct sppcb {$/
sppstat	../netns/spp_var.h	/^struct	sppstat {$/
sptopte	../h/vmmac.h	/^#define	sptopte(p, i)		((p)->p_addr - (1 + (i)))$/
sptov	../h/vmmac.h	/^#define	sptov(p, i)	((unsigned)(BTOPUSRSTACK - 1 -/
sstk	../sys/kern_mman.c	/^sstk()$/
start_chn	../vaxif/if_ddn.c	/^static void start_chn(ds)$/
startkgclock	../vaxuba/kgclock.c	/^startkgclock()$/
startrtclock	../vax/clock.c	/^startrtclock()$/
startup	../vax/machdep.c	/^startup(firstaddr)$/
stat	../sys/ufs_syscalls.c	/^stat()$/
stat1	../sys/ufs_syscalls.c	/^stat1(follow)$/
stat_array	../vaxif/if_exreg.h	/^struct	stat_array {$/
stoc	../vax/machparam.h	/^#define	stoc(x)	(x)$/
stop	../sys/kern_sig.c	/^stop(p)$/
stopsigmask	../sys/kern_sig.c	/^#define	stopsigmask	(sigmask(SIGSTOP)|sigmask(SIGT/
strlen	../sys/subr_xxx.c	/^strlen(s1)$/
subyte	../vax/Locore.c	/^subyte(base, i) caddr_t base; { return (0); }$/
suibyte	../vax/Locore.c	/^suibyte(base, i) caddr_t base; { return (0); }$/
suiword	../vax/Locore.c	/^suiword(base, i) caddr_t base; { return (0); }$/
supr_msg	../vaxif/if_ddn.c	/^static void supr_msg(ds, p)$/
suser	../sys/ufs_fio.c	/^suser()$/
suword	../vax/Locore.c	/^suword(base, i) caddr_t base; { return (0); }$/
sv_onstack	../h/signal.h	/^#define sv_onstack sv_flags	\/* isn't compatibilit/
swap	../sys/vm_swp.c	/^swap(p, dblkno, addr, nbytes, rdflg, flag, dev, pf/
swapconf	../vax/autoconf.c	/^swapconf()$/
swapin	../sys/vm_swap.c	/^swapin(p)$/
swapinit	../sys/init_main.c	/^swapinit()$/
swapon	../sys/vm_sw.c	/^swapon()$/
swapout	../sys/vm_swap.c	/^swapout(p, ds, ss)$/
swappable	../sys/vm_sched.c	/^#define	swappable(p) \\$/
swblk_t	../h/types.h	/^typedef	long	swblk_t;$/
swdevt	../h/conf.h	/^struct swdevt$/
swdone	../sys/vm_swp.c	/^swdone(bp)$/
swdspt	../sys/vm_swap.c	/^swdspt(p, utl, rdwri)$/
swfree	../sys/vm_sw.c	/^swfree(index)$/
swkill	../sys/vm_swp.c	/^swkill(p, rout)$/
swpexpand	../sys/vm_drum.c	/^swpexpand(ds, ss, dmp, smp)$/
swpt	../sys/vm_swap.c	/^swpt(rdwri, p, doff, a, n)$/
swptstat	../h/vmsystm.h	/^struct	swptstat$/
swstrategy	../sys/vm_sw.c	/^swstrategy(bp)$/
swtch	../vax/Locore.c	/^swtch() { if (whichqs) whichqs = 0; if (masterpadd/
syioctl	../sys/tty_tty.c	/^syioctl(dev, cmd, addr, flag)$/
symlink	../sys/ufs_syscalls.c	/^symlink()$/
symsize	../vax/kdb_machdep.c	/^#define	symsize	*(int *)&end$/
sync	../sys/ufs_syscalls.c	/^sync()$/
syncip	../sys/ufs_subr.c	/^syncip(ip)$/
syopen	../sys/tty_tty.c	/^syopen(dev, flag)$/
syread	../sys/tty_tty.c	/^syread(dev, uio)$/
sysacct	../sys/kern_acct.c	/^sysacct()$/
syscall	../vax/trap.c	/^syscall(sp, type, code, pc, psl)$/
syselect	../sys/tty_tty.c	/^syselect(dev, flag)$/
sysent	../h/systm.h	/^extern struct sysent$/
sywrite	../sys/tty_tty.c	/^sywrite(dev, uio)$/
t_brkc	../h/tty.h	/^#define	t_brkc		t_chars.tc_brkc$/
t_bufp	../h/tty.h	/^#define	t_bufp	t_nu.t_n.T_bufp		\/* buffer allocat/
t_canq	../h/tty.h	/^#define	t_canq	t_nu.t_t.T_canq		\/* raw characters/
t_cp	../h/tty.h	/^#define	t_cp	t_nu.t_n.T_cp		\/* pointer into the r/
t_dsuspc	../h/tty.h	/^#define	t_dsuspc	t_chars.tc_dsuspc$/
t_eofc	../h/tty.h	/^#define	t_eofc		t_chars.tc_eofc$/
t_erase	../h/tty.h	/^#define	t_erase		t_chars.tc_erase$/
t_flushc	../h/tty.h	/^#define	t_flushc	t_chars.tc_flushc$/
t_inbuf	../h/tty.h	/^#define	t_inbuf	t_nu.t_n.T_inbuf	\/* number chars /
t_intrc	../h/tty.h	/^#define	t_intrc		t_chars.tc_intrc$/
t_kill	../h/tty.h	/^#define	t_kill		t_chars.tc_kill$/
t_lnextc	../h/tty.h	/^#define	t_lnextc	t_chars.tc_lnextc$/
t_quitc	../h/tty.h	/^#define	t_quitc		t_chars.tc_quitc$/
t_rawq	../h/tty.h	/^#define	t_rawq	t_nu.t_t.T_rawq		\/* raw characters/
t_rec	../h/tty.h	/^#define	t_rec	t_nu.t_n.T_rec		\/* have a complete /
t_rprntc	../h/tty.h	/^#define	t_rprntc	t_chars.tc_rprntc$/
t_sc	../net/if_sl.c	/^#define t_sc T_LINEP$/
t_startc	../h/tty.h	/^#define	t_startc	t_chars.tc_startc$/
t_stopc	../h/tty.h	/^#define	t_stopc		t_chars.tc_stopc$/
t_suspc	../h/tty.h	/^#define	t_suspc		t_chars.tc_suspc$/
t_werasc	../h/tty.h	/^#define	t_werasc	t_chars.tc_werasc$/
tablefull	../sys/subr_prf.c	/^tablefull(tab)$/
tanyu	../sys/vm_page.c	/^tanyu(xp, tp)$/
tb	../sys/tty_tb.c	/^struct tb {$/
tba	../vaxuba/dmxreg.h	/^#define	tba	octun.irw	\/* transmit buffer address /
tbclose	../sys/tty_tb.c	/^tbclose(tp)$/
tbconf	../sys/tty_tb.c	/^struct	tbconf {$/
tbdecode	../sys/tty_tb.c	/^tbdecode(tc, cp, tbpos)$/
tbhresdecode	../sys/tty_tb.c	/^tbhresdecode(tc, cp, tbpos)$/
tbinput	../sys/tty_tb.c	/^tbinput(c, tp)$/
tbioctl	../sys/tty_tb.c	/^tbioctl(tp, cmd, data, flag)$/
tbiscl	../vax/machdep.c	/^tbiscl(v)$/
tblresdecode	../sys/tty_tb.c	/^tblresdecode(tc, cp, tbpos)$/
tbopen	../sys/tty_tb.c	/^tbopen(dev, tp)$/
tbpos	../h/tablet.h	/^struct	tbpos {$/
tbread	../sys/tty_tb.c	/^tbread(tp, uio)$/
tbuf	../vaxuba/dmxreg.h	/^#define	tbuf	octun.irc[0]	\/* transmit buffer *\/$/
tcc	../vaxuba/dmxreg.h	/^#define	tcc	octun.irw	\/* transmit character count/
tchars	../h/ioctl.h	/^struct tchars {$/
tcp_abort	../netinet/tcp_subr.c	/^tcp_abort(inp)$/
tcp_attach	../netinet/tcp_usrreq.c	/^tcp_attach(so)$/
tcp_canceltimers	../netinet/tcp_timer.c	/^tcp_canceltimers(tp)$/
tcp_close	../netinet/tcp_subr.c	/^tcp_close(tp)$/
tcp_ctlinput	../netinet/tcp_subr.c	/^tcp_ctlinput(cmd, sa)$/
tcp_ctloutput	../netinet/tcp_usrreq.c	/^tcp_ctloutput(op, so, level, optname, mp)$/
tcp_debug	../netinet/tcp_debug.h	/^struct	tcp_debug {$/
tcp_disconnect	../netinet/tcp_usrreq.c	/^tcp_disconnect(tp)$/
tcp_dooptions	../netinet/tcp_input.c	/^tcp_dooptions(tp, om, ti)$/
tcp_drain	../netinet/tcp_subr.c	/^tcp_drain()$/
tcp_drop	../netinet/tcp_subr.c	/^tcp_drop(tp, errno)$/
tcp_fasttimo	../netinet/tcp_timer.c	/^tcp_fasttimo()$/
tcp_init	../netinet/tcp_subr.c	/^tcp_init()$/
tcp_input	../netinet/tcp_input.c	/^tcp_input(m0)$/
tcp_mss	../netinet/tcp_input.c	/^tcp_mss(tp)$/
tcp_newtcpcb	../netinet/tcp_subr.c	/^tcp_newtcpcb(inp)$/
tcp_notify	../netinet/tcp_subr.c	/^tcp_notify(inp)$/
tcp_output	../netinet/tcp_output.c	/^tcp_output(tp)$/
tcp_pulloutofband	../netinet/tcp_input.c	/^tcp_pulloutofband(so, ti)$/
tcp_quench	../netinet/tcp_subr.c	/^tcp_quench(inp)$/
tcp_rcvseqinit	../netinet/tcp_seq.h	/^#define	tcp_rcvseqinit(tp) \\$/
tcp_reass	../netinet/tcp_input.c	/^tcp_reass(tp, ti)$/
tcp_respond	../netinet/tcp_subr.c	/^tcp_respond(tp, ti, ack, seq, flags)$/
tcp_sendseqinit	../netinet/tcp_seq.h	/^#define	tcp_sendseqinit(tp) \\$/
tcp_seq	../netinet/tcp.h	/^typedef	u_long	tcp_seq;$/
tcp_setpersist	../netinet/tcp_output.c	/^tcp_setpersist(tp)$/
tcp_slowtimo	../netinet/tcp_timer.c	/^tcp_slowtimo()$/
tcp_template	../netinet/tcp_subr.c	/^tcp_template(tp)$/
tcp_timers	../netinet/tcp_timer.c	/^tcp_timers(tp, timer)$/
tcp_trace	../netinet/tcp_debug.c	/^tcp_trace(act, ostate, tp, ti, req)$/
tcp_usrclosed	../netinet/tcp_usrreq.c	/^tcp_usrclosed(tp)$/
tcp_usrreq	../netinet/tcp_usrreq.c	/^tcp_usrreq(so, req, m, nam, rights)$/
tcpcb	../netinet/tcp_var.h	/^struct tcpcb {$/
tcphdr	../netinet/tcp.h	/^struct tcphdr {$/
tcpiphdr	../netinet/tcpip.h	/^struct tcpiphdr {$/
tcps_badoff	../netinet/tcp_var.h	/^#define	tcps_badoff	tcps_rcvbadoff$/
tcps_badsum	../netinet/tcp_var.h	/^#define	tcps_badsum	tcps_rcvbadsum$/
tcps_hdrops	../netinet/tcp_var.h	/^#define	tcps_hdrops	tcps_rcvshort$/
tcpstat	../netinet/tcp_var.h	/^struct	tcpstat {$/
te_softc	../vaxuba/tm.c	/^struct	te_softc {$/
text	../h/text.h	/^struct text$/
ti_ack	../netinet/tcpip.h	/^#define	ti_ack		ti_t.th_ack$/
ti_dport	../netinet/tcpip.h	/^#define	ti_dport	ti_t.th_dport$/
ti_dst	../netinet/tcpip.h	/^#define	ti_dst		ti_i.ih_dst$/
ti_flags	../netinet/tcpip.h	/^#define	ti_flags	ti_t.th_flags$/
ti_len	../netinet/tcpip.h	/^#define	ti_len		ti_i.ih_len$/
ti_next	../netinet/tcpip.h	/^#define	ti_next		ti_i.ih_next$/
ti_off	../netinet/tcpip.h	/^#define	ti_off		ti_t.th_off$/
ti_pr	../netinet/tcpip.h	/^#define	ti_pr		ti_i.ih_pr$/
ti_prev	../netinet/tcpip.h	/^#define	ti_prev		ti_i.ih_prev$/
ti_seq	../netinet/tcpip.h	/^#define	ti_seq		ti_t.th_seq$/
ti_sport	../netinet/tcpip.h	/^#define	ti_sport	ti_t.th_sport$/
ti_src	../netinet/tcpip.h	/^#define	ti_src		ti_i.ih_src$/
ti_sum	../netinet/tcpip.h	/^#define	ti_sum		ti_t.th_sum$/
ti_urp	../netinet/tcpip.h	/^#define	ti_urp		ti_t.th_urp$/
ti_win	../netinet/tcpip.h	/^#define	ti_win		ti_t.th_win$/
ti_x1	../netinet/tcpip.h	/^#define	ti_x1		ti_i.ih_x1$/
ti_x2	../netinet/tcpip.h	/^#define	ti_x2		ti_t.th_x2$/
time_t	../h/types.h	/^typedef	long	time_t;$/
timeb	../sys/kern_xxx.c	/^struct timeb {$/
timeout	../sys/kern_clock.c	/^timeout(fun, arg, t)$/
timerclear	../h/time.h	/^#define	timerclear(tvp)		(tvp)->tv_sec = (tvp)->tv/
timercmp	../h/time.h	/^#define	timercmp(tvp, uvp, cmp)	\\$/
timerisset	../h/time.h	/^#define	timerisset(tvp)		((tvp)->tv_sec || (tvp)->/
timetochip	../vax/clock.c	/^timetochip(c)$/
timeval	../h/time.h	/^struct timeval {$/
timevaladd	../sys/kern_time.c	/^timevaladd(t1, t2)$/
timevalfix	../sys/kern_time.c	/^timevalfix(t1)$/
timevalsub	../sys/kern_time.c	/^timevalsub(t1, t2)$/
timezone	../h/time.h	/^struct timezone {$/
tj_softc	../vaxuba/ut.c	/^struct	tj_softc {$/
tmattach	../vaxuba/tm.c	/^tmattach(ui)$/
tmclose	../vaxuba/tm.c	/^tmclose(dev, flag)$/
tmcommand	../vaxuba/tm.c	/^tmcommand(dev, com, count)$/
tmdevice	../vaxuba/tmreg.h	/^struct tmdevice {$/
tmdgo	../vaxuba/tm.c	/^tmdgo(um)$/
tmdump	../vaxuba/tm.c	/^tmdump()$/
tmdwrite	../vaxuba/tm.c	/^tmdwrite(dbuf, num, addr, up)$/
tmeof	../vaxuba/tm.c	/^tmeof(addr)$/
tmintr	../vaxuba/tm.c	/^tmintr(tm11)$/
tmioctl	../vaxuba/tm.c	/^tmioctl(dev, cmd, data, flag)$/
tmopen	../vaxuba/tm.c	/^tmopen(dev, flag)$/
tmprobe	../vaxuba/tm.c	/^tmprobe(reg)$/
tmreset	../vaxuba/tm.c	/^tmreset(uban)$/
tmreverseop	../vaxuba/tmreg.h	/^#define	tmreverseop(cmd)		((cmd)==TM_SREV || (cmd)/
tms	../h/times.h	/^struct tms {$/
tms_info	../vaxuba/tmscp.c	/^struct tms_info {$/
tmscp	../vaxuba/tmscp.c	/^struct tmscp {$/
tmscp_Cmd	../vaxuba/tmscp.c	/^#define tmscp_Cmd       tmscp_cmd[0]$/
tmscp_Rsp	../vaxuba/tmscp.c	/^#define tmscp_Rsp       tmscp_rsp[0]$/
tmscp_softc	../vaxuba/tmscp.c	/^struct tmscp_softc {$/
tmscpattach	../vaxuba/tmscp.c	/^tmscpattach (ui)$/
tmscpca	../vaxuba/tmscpreg.h	/^struct tmscpca {$/
tmscpclose	../vaxuba/tmscp.c	/^tmscpclose(dev, flag)$/
tmscpcmd	../vaxuba/tmscp.c	/^tmscpcmd(op, tmscpp, tmscpaddr)$/
tmscpcommand	../vaxuba/tmscp.c	/^tmscpcommand (dev, com, count)$/
tmscpdevice	../vaxuba/tmscpreg.h	/^struct tmscpdevice {$/
tmscpdump	../vaxuba/tmscp.c	/^tmscpdump(dev)$/
tmscpgetcp	../vaxuba/tmscp.c	/^tmscpgetcp(um)$/
tmscpinit	../vaxuba/tmscp.c	/^tmscpinit (d)$/
tmscpintr	../vaxuba/tmscp.c	/^tmscpintr (d)$/
tmscpioctl	../vaxuba/tmscp.c	/^tmscpioctl(dev, cmd, data, flag)$/
tmscpopen	../vaxuba/tmscp.c	/^tmscpopen(dev, flag)$/
tmscpprobe	../vaxuba/tmscp.c	/^tmscpprobe(reg, ctlr)$/
tmscpreset	../vaxuba/tmscp.c	/^tmscpreset (uban)$/
tmscprsp	../vaxuba/tmscp.c	/^tmscprsp(um, tm, sc, i)$/
tmscpslave	../vaxuba/tmscp.c	/^tmscpslave (ui, reg)$/
tmscpstart	../vaxuba/tmscp.c	/^tmscpstart(um)$/
tmscpstrategy	../vaxuba/tmscp.c	/^tmscpstrategy (bp)$/
tmserror	../vaxuba/tmscp.c	/^tmserror(um, mp)$/
tmseteof	../vaxuba/tm.c	/^tmseteof(bp)$/
tmslave	../vaxuba/tm.c	/^tmslave(ui, reg)$/
tmstart	../vaxuba/tm.c	/^tmstart(um)$/
tmstrategy	../vaxuba/tm.c	/^tmstrategy(bp)$/
tmtimer	../vaxuba/tm.c	/^tmtimer(dev)$/
tmwait	../vaxuba/tm.c	/^tmwait(addr)$/
tocons	../vax/machdep.c	/^tocons(c)$/
todr	../vax/machdep.c	/^todr()$/
tostruct	../h/gprof.h	/^struct tostruct {$/
tprintf	../sys/subr_prf.c	/^tprintf(tp, fmt, x1)$/
tpte_clrref	../sys/kern_mman.c	/^#define	tpte_clrref(pte, c, rp, i) { \\$/
tptopte	../h/vmmac.h	/^#define	tptopte(p, i)		((p)->p_p0br + (i))$/
tptov	../h/vmmac.h	/^#define	tptov(p, i)	((unsigned)(i))$/
trace	../vaxuba/idc.c	/^#define	trace(a,b) {*trp++ = *(int*)a; *trp++ = (i/
trace1	../sys/vm_mon.c	/^trace1(args)$/
trap	../vax/trap.c	/^trap(sp, type, code, pc, psl)$/
truncate	../sys/ufs_syscalls.c	/^truncate()$/
ts_char	../vaxuba/tsreg.h	/^struct ts_char {$/
ts_cmd	../vaxuba/tsreg.h	/^struct ts_cmd {$/
ts_softc	../vaxuba/ts.c	/^struct	ts_softc {$/
ts_sts	../vaxuba/tsreg.h	/^struct	ts_sts {$/
ts_tsdata	../vaxuba/ts.c	/^struct	ts_tsdata {		\/* data shared with ts11 cont/
tsattach	../vaxuba/ts.c	/^tsattach(ui)$/
tsc	../vaxuba/dmxreg.h	/^#define	tsc	octun.irc[0]	\/* transmit silo count */
tsclose	../vaxuba/ts.c	/^tsclose(dev, flag)$/
tscommand	../vaxuba/ts.c	/^tscommand(dev, com, count)$/
tsdevice	../vaxuba/tsreg.h	/^struct	tsdevice {$/
tsdgo	../vaxuba/ts.c	/^tsdgo(um)$/
tsdump	../vaxuba/ts.c	/^tsdump(dev)$/
tsinit	../vaxuba/ts.c	/^tsinit(ctlr)$/
tsintr	../vaxuba/ts.c	/^tsintr(tsunit)$/
tsioctl	../vaxuba/ts.c	/^tsioctl(dev, cmd, data, flag)$/
tsmap	../vaxuba/ts.c	/^tsmap(sc, uban, a)$/
tsopen	../vaxuba/ts.c	/^tsopen(dev, flag)$/
tsprobe	../vaxuba/ts.c	/^tsprobe(reg, ctlr, um)$/
tsreset	../vaxuba/ts.c	/^tsreset(uban)$/
tsseteof	../vaxuba/ts.c	/^tsseteof(bp)$/
tsslave	../vaxuba/ts.c	/^tsslave(ui, reg)$/
tsstart	../vaxuba/ts.c	/^tsstart(um)$/
tsstrategy	../vaxuba/ts.c	/^tsstrategy(bp)$/
tswait	../vaxuba/ts.c	/^tswait(addr)$/
ttbreakc	../sys/tty.c	/^ttbreakc(c, tp)$/
ttioctl	../sys/tty.c	/^ttioctl(tp, com, data, flag)$/
ttnread	../sys/tty.c	/^ttnread(tp)$/
ttread	../sys/tty.c	/^ttread(tp, uio)$/
ttrstrt	../sys/tty.c	/^ttrstrt(tp)$/
ttselect	../sys/tty.c	/^ttselect(dev, rw)$/
ttstart	../sys/tty.c	/^ttstart(tp)$/
ttwakeup	../sys/tty.c	/^ttwakeup(tp)$/
ttwrite	../sys/tty.c	/^ttwrite(tp, uio)$/
tty	../h/tty.h	/^struct tty {$/
ttyblock	../sys/tty.c	/^ttyblock(tp)$/
ttychars	../sys/tty.c	/^ttychars(tp)$/
ttycheckoutq	../sys/tty.c	/^ttycheckoutq(tp, wait)$/
ttyclose	../sys/tty.c	/^ttyclose(tp)$/
ttyecho	../sys/tty.c	/^ttyecho(c, tp)$/
ttyflush	../sys/tty.c	/^ttyflush(tp, rw)$/
ttyinput	../sys/tty.c	/^ttyinput(c, tp)$/
ttylclose	../sys/tty.c	/^ttylclose(tp)$/
ttymodem	../sys/tty.c	/^ttymodem(tp, flag)$/
ttyopen	../sys/tty.c	/^ttyopen(dev, tp)$/
ttyout	../sys/tty.c	/^ttyout(cp, tp)$/
ttyoutput	../sys/tty.c	/^ttyoutput(c, tp)$/
ttypend	../sys/tty.c	/^ttypend(tp)$/
ttyretype	../sys/tty.c	/^ttyretype(tp)$/
ttyrub	../sys/tty.c	/^ttyrub(c, tp)$/
ttyrubo	../sys/tty.c	/^ttyrubo(tp, cnt)$/
ttysize	../h/ioctl.h	/^struct ttysize {$/
ttywait	../sys/tty.c	/^ttywait(tp)$/
ttywflush	../sys/tty.c	/^ttywflush(tp)$/
tu	../vax/tu.c	/^struct tu {$/
tu_pee	../vaxuba/uu.c	/^tu_pee(cp)$/
tu_restart	../vax/tu.c	/^tu_restart()$/
tu_softc	../vaxmba/ht.c	/^struct	tu_softc {$/
tu_vee	../vaxuba/uu.c	/^tu_vee(cp)$/
tuchk	../vaxuba/uu.c	/^tuchk(word, cp, n)$/
tuclose	../vax/conf.c	/^#define	tuclose		nodev$/
tuopen	../vax/conf.c	/^#define	tuopen		nodev$/
tureset	../vax/tu.c	/^tureset()$/
turintr	../vax/tu.c	/^turintr()$/
tustart	../vax/tu.c	/^tustart()$/
tustrategy	../vax/conf.c	/^#define	tustrategy	nodev$/
tuwake	../vax/tu.c	/^tuwake(bp)$/
tuwatch	../vax/tu.c	/^tuwatch()$/
tuxintr	../vax/tu.c	/^tuxintr()$/
ty_bigdes	../vax/asnumber.h	/^struct ty_bigdesc{$/
u_char	../h/types.h	/^typedef	unsigned char	u_char;$/
u_int	../h/types.h	/^typedef	unsigned int	u_int;$/
u_long	../h/types.h	/^typedef	unsigned long	u_long;$/
u_onstack	../h/user.h	/^#define	u_onstack	u_sigstack.ss_onstack$/
u_short	../h/types.h	/^typedef	unsigned short	u_short;$/
u_sigsp	../h/user.h	/^#define	u_sigsp		u_sigstack.ss_sp$/
uaccess	../sys/vm_subr.c	/^uaccess(p, map, uarea)$/
uaddr	../h/vmmac.h	/^#define	uaddr(p)	(&((p)->p_p0br[(p)->p_szpt * NPTE/
uap	../sys/sys_generic.c	/^	register struct uap  {$/
uba_ctlr	../vaxuba/ubavar.h	/^struct uba_ctlr {$/
uba_device	../vaxuba/ubavar.h	/^struct uba_device {$/
uba_driver	../vaxuba/ubavar.h	/^struct uba_driver {$/
uba_hd	../vaxuba/ubavar.h	/^struct	uba_hd {$/
uba_regs	../vaxuba/ubareg.h	/^struct uba_regs {$/
ubaddr	../vax/autoconf.c	/^#define	ubaddr(uhp, off)    (u_short *)((int)(uhp)/
ubadone	../vaxuba/uba.c	/^ubadone(um)$/
ubaerror	../vaxuba/uba.c	/^ubaerror(uban, uh, ipl, uvec, uba)$/
ubago	../vaxuba/ubavar.h	/^#define	ubago(ui)	ubaqueue(ui, 0)$/
ubainit	../vaxuba/uba.c	/^ubainit(uba)$/
ubainitmaps	../vaxuba/uba.c	/^ubainitmaps(uhp)$/
uballoc	../vaxuba/uba.c	/^uballoc(uban, addr, bcnt, flags)$/
ubamem	../vaxuba/uba.c	/^ubamem(uban, addr, npg, doalloc)$/
ubameminit	../vaxuba/uba.c	/^ubameminit(uban)$/
ubaoff	../vaxuba/uba.c	/^#define	ubaoff(off)	((int)(off) & 0x1fff)$/
ubapurge	../vaxuba/uba.c	/^ubapurge(um)$/
ubaqueue	../vaxuba/uba.c	/^ubaqueue(ui, onq)$/
ubarelse	../vaxuba/uba.c	/^ubarelse(uban, amr)$/
ubareset	../vaxuba/uba.c	/^ubareset(uban)$/
ubasetup	../vaxuba/uba.c	/^ubasetup(uban, bp, flags)$/
ubdevreg	../vaxuba/ubareg.h	/^#define	ubdevreg(addr)	((addr) & 017777)$/
uda	../vaxuba/uda.c	/^struct	uda {$/
uda1	../vaxuba/uda.c	/^struct	uda1 {$/
uda1ca	../vaxuba/udareg.h	/^struct uda1ca {$/
uda_rainit	../vaxuba/uda.c	/^uda_rainit(ui, flags)$/
uda_rasave	../vaxuba/uda.c	/^uda_rasave(unit, mp, check)$/
uda_softc	../vaxuba/uda.c	/^struct	uda_softc {$/
udaattach	../vaxuba/uda.c	/^udaattach(ui)$/
udabb	../vaxuba/uda.c	/^udabb(ui, mp, bp)$/
udaca	../vaxuba/udareg.h	/^struct udaca {$/
udaclose	../vaxuba/uda.c	/^udaclose(dev, flags, fmt)$/
udactlrdone	../vaxuba/uda.c	/^udactlrdone(mi, mp)$/
udadevice	../vaxuba/udareg.h	/^struct udadevice {$/
udadgo	../vaxuba/uda.c	/^udadgo(um)$/
udadgram	../vaxuba/uda.c	/^udadgram(mi, mp)$/
udadump	../vaxuba/uda.c	/^udadump(dev)$/
udadumpcmd	../vaxuba/uda.c	/^udadumpcmd(op, ud, ui)$/
udadumpwait	../vaxuba/uda.c	/^udadumpwait(udaddr, bits)$/
udagotstatus	../vaxuba/uda.c	/^udagotstatus(ui, mp)$/
udainit	../vaxuba/uda.c	/^udainit(ctlr)$/
udainitds	../vaxuba/uda.c	/^udainitds(ctlr)$/
udaintr	../vaxuba/uda.c	/^udaintr(ctlr)$/
udaioctl	../vaxuba/uda.c	/^udaioctl(dev, cmd, data, flag)$/
udaiodone	../vaxuba/uda.c	/^udaiodone(mi, bp, info)$/
udaioerror	../vaxuba/uda.c	/^udaioerror(ui, mp, bp)$/
udamaptype	../vaxuba/uda.c	/^udamaptype(unit, lp)$/
udaminor	../vaxuba/uda.c	/^#define	udaminor(u, p)	(((u) << UNITSHIFT) | (p))$/
udaonline	../vaxuba/uda.c	/^udaonline(ui, mp)$/
udaopen	../vaxuba/uda.c	/^udaopen(dev, flag, fmt)$/
udapart	../vaxuba/uda.c	/^#define	udapart(dev)	(minor(dev) & UNITMASK)$/
udaprobe	../vaxuba/uda.c	/^udaprobe(reg, ctlr, um)$/
udareplace	../vaxuba/uda.c	/^udareplace(ui, mp)$/
udareset	../vaxuba/uda.c	/^udareset(uban)$/
udasaerror	../vaxuba/uda.c	/^udasaerror(um, doreset)$/
udasize	../vaxuba/uda.c	/^udasize(dev)$/
udaslave	../vaxuba/uda.c	/^udaslave(ui, reg)$/
udastart	../vaxuba/uda.c	/^udastart(um)$/
udastats	../vaxuba/uda.c	/^struct udastats {$/
udastrat1	../vaxuba/uda.c	/^udastrat1(bp)$/
udastrategy	../vaxuba/uda.c	/^udastrategy(bp)$/
udatypes	../vaxuba/uda.c	/^struct	udatypes {$/
udaunconf	../vaxuba/uda.c	/^udaunconf(mi, mp)$/
udaunit	../vaxuba/uda.c	/^#define	udaunit(dev)	(minor(dev) >> UNITSHIFT)$/
udawatch	../vaxuba/uda.c	/^udawatch()$/
udp_ctlinput	../netinet/udp_usrreq.c	/^udp_ctlinput(cmd, sa)$/
udp_init	../netinet/udp_usrreq.c	/^udp_init()$/
udp_input	../netinet/udp_usrreq.c	/^udp_input(m0, ifp)$/
udp_notify	../netinet/udp_usrreq.c	/^udp_notify(inp)$/
udp_output	../netinet/udp_usrreq.c	/^udp_output(inp, m0)$/
udp_usrreq	../netinet/udp_usrreq.c	/^udp_usrreq(so, req, m, nam, rights)$/
udphdr	../netinet/udp.h	/^struct udphdr {$/
udpiphdr	../netinet/udp_var.h	/^struct	udpiphdr {$/
udpstat	../netinet/udp_var.h	/^struct	udpstat {$/
ufalloc	../sys/kern_descrip.c	/^ufalloc(i)$/
ufavail	../sys/kern_descrip.c	/^ufavail()$/
ui_dport	../netinet/udp_var.h	/^#define	ui_dport	ui_u.uh_dport$/
ui_dst	../netinet/udp_var.h	/^#define	ui_dst		ui_i.ih_dst$/
ui_len	../netinet/udp_var.h	/^#define	ui_len		ui_i.ih_len$/
ui_next	../netinet/udp_var.h	/^#define	ui_next		ui_i.ih_next$/
ui_pr	../netinet/udp_var.h	/^#define	ui_pr		ui_i.ih_pr$/
ui_prev	../netinet/udp_var.h	/^#define	ui_prev		ui_i.ih_prev$/
ui_sport	../netinet/udp_var.h	/^#define	ui_sport	ui_u.uh_sport$/
ui_src	../netinet/udp_var.h	/^#define	ui_src		ui_i.ih_src$/
ui_sum	../netinet/udp_var.h	/^#define	ui_sum		ui_u.uh_sum$/
ui_ulen	../netinet/udp_var.h	/^#define	ui_ulen		ui_u.uh_ulen$/
ui_x1	../netinet/udp_var.h	/^#define	ui_x1		ui_i.ih_x1$/
uid_t	../h/types.h	/^typedef	u_short	uid_t;$/
uio	../h/uio.h	/^struct uio {$/
uio_rw	../h/uio.h	/^enum	uio_rw { UIO_READ, UIO_WRITE };$/
uiomove	../sys/kern_subr.c	/^uiomove(cp, n, rw, uio)$/
uipc_usrreq	../sys/uipc_usrreq.c	/^uipc_usrreq(so, req, m, nam, rights)$/
umask	../sys/ufs_syscalls.c	/^umask()$/
umount	../sys/ufs_mount.c	/^umount()$/
uncachecl	../sys/vm_page.c	/^#define uncachecl(pte)	uncache(pte)$/
unifind	../vax/autoconf.c	/^unifind(uhp0, pumem)$/
unlink	../sys/ufs_syscalls.c	/^unlink()$/
unmaptouser	../vaxuba/uba.c	/^unmaptouser(vaddress)$/
unmount1	../sys/ufs_mount.c	/^unmount1(fname, forcibly)$/
unp_abort	../sys/uipc_usrreq.c	/^unp_abort(unp)$/
unp_attach	../sys/uipc_usrreq.c	/^unp_attach(so)$/
unp_bind	../sys/uipc_usrreq.c	/^unp_bind(unp, nam)$/
unp_connect	../sys/uipc_usrreq.c	/^unp_connect(so, nam)$/
unp_connect2	../sys/uipc_usrreq.c	/^unp_connect2(so, so2)$/
unp_detach	../sys/uipc_usrreq.c	/^unp_detach(unp)$/
unp_discard	../sys/uipc_usrreq.c	/^unp_discard(fp)$/
unp_disconnect	../sys/uipc_usrreq.c	/^unp_disconnect(unp)$/
unp_dispose	../sys/uipc_usrreq.c	/^unp_dispose(m)$/
unp_drain	../sys/uipc_usrreq.c	/^unp_drain()$/
unp_drop	../sys/uipc_usrreq.c	/^unp_drop(unp, errno)$/
unp_externalize	../sys/uipc_usrreq.c	/^unp_externalize(rights)$/
unp_gc	../sys/uipc_usrreq.c	/^unp_gc()$/
unp_internalize	../sys/uipc_usrreq.c	/^unp_internalize(rights)$/
unp_mark	../sys/uipc_usrreq.c	/^unp_mark(fp)$/
unp_scan	../sys/uipc_usrreq.c	/^unp_scan(m0, op)$/
unp_usrclosed	../sys/uipc_usrreq.c	/^unp_usrclosed(unp)$/
unpcb	../h/unpcb.h	/^struct	unpcb {$/
unputc	../sys/tty_subr.c	/^unputc(p)$/
unselect	../sys/sys_generic.c	/^unselect(p)$/
unsign16	../vaxuba/npreg.h	/^typedef unsigned short unsign16;	\/* 16 bit unsign/
unsign32	../vaxuba/npreg.h	/^typedef unsigned unsign32;		\/* 32 bit unsigned va/
unsleep	../sys/kern_synch.c	/^unsleep(p)$/
untimeout	../sys/kern_clock.c	/^untimeout(fun, arg)$/
up_softc	../vaxuba/up.c	/^struct	up_softc {$/
upattach	../vaxuba/up.c	/^upattach(ui)$/
update	../sys/ufs_subr.c	/^update()$/
updatepri	../sys/kern_synch.c	/^updatepri(p)$/
updevice	../vaxuba/upreg.h	/^struct updevice$/
updgo	../vaxuba/up.c	/^updgo(um)$/
updump	../vaxuba/up.c	/^updump(dev)$/
upecc	../vaxuba/up.c	/^upecc(ui, flag)$/
upintr	../vaxuba/up.c	/^upintr(sc21)$/
upmaptype	../vaxuba/up.c	/^upmaptype(ui)$/
upopen	../vaxuba/up.c	/^upopen(dev)$/
upprobe	../vaxuba/up.c	/^upprobe(reg)$/
upreset	../vaxuba/up.c	/^upreset(uban)$/
uprintf	../sys/subr_prf.c	/^uprintf(fmt, x1)$/
uprof	../h/user.h	/^	struct uprof {			\/* profile arguments *\/$/
upsize	../vaxuba/up.c	/^upsize(dev)$/
upslave	../vaxuba/up.c	/^upslave(ui, reg)$/
upst	../vaxuba/up.c	/^struct	upst {$/
upstart	../vaxuba/up.c	/^upstart(um)$/
upstrategy	../vaxuba/up.c	/^upstrategy(bp)$/
upunit	../vaxuba/up.c	/^#define upunit(dev)	(minor(dev) >> 3)$/
upustart	../vaxuba/up.c	/^upustart(ui)$/
upwatch	../vaxuba/up.c	/^upwatch()$/
ureadc	../sys/kern_subr.c	/^ureadc(c, uio)$/
user	../h/user.h	/^struct	user {$/
useracc	../vax/Locore.c	/^useracc(udaddr, bcnt, rw) caddr_t udaddr; unsigned/
useracc ../vax/locore.s /^ENTRY(useracc, 0)$/
ushort	../h/types.h	/^typedef	unsigned short	ushort;		\/* sys III compat/
utattach	../vaxuba/ut.c	/^utattach(ui)$/
utclose	../vaxuba/ut.c	/^utclose(dev, flag)$/
utcommand	../vaxuba/ut.c	/^utcommand(dev, com, count)$/
utdevice	../vaxuba/utreg.h	/^struct utdevice {$/
utdgo	../vaxuba/ut.c	/^utdgo(um)$/
utdump	../vaxuba/ut.c	/^utdump()$/
utdwrite	../vaxuba/ut.c	/^utdwrite(dbuf, num, addr, up)$/
uteof	../vaxuba/ut.c	/^uteof(addr)$/
utimes	../sys/ufs_syscalls.c	/^utimes()$/
utintr	../vaxuba/ut.c	/^utintr(ut11)$/
utioctl	../vaxuba/ut.c	/^utioctl(dev, cmd, data, flag)$/
utopen	../vaxuba/ut.c	/^utopen(dev, flag)$/
utprobe	../vaxuba/ut.c	/^utprobe(reg)$/
utreset	../vaxuba/ut.c	/^utreset(uban)$/
utslave	../vaxuba/ut.c	/^utslave(ui, reg)$/
utstart	../vaxuba/ut.c	/^utstart(um)$/
utstrategy	../vaxuba/ut.c	/^utstrategy(bp)$/
uttimer	../vaxuba/ut.c	/^uttimer(dev)$/
utwait	../vaxuba/ut.c	/^utwait(addr)$/
uu_restart	../vaxuba/uu.c	/^uu_restart(ctlr, ui)$/
uu_softc	../vaxuba/uu.c	/^struct uu_softc {$/
uuattach	../vaxuba/uu.c	/^uuattach(ui)$/
uuclose	../vaxuba/uu.c	/^uuclose(dev, flag)$/
uudevice	../vaxuba/uureg.h	/^struct uudevice {$/
uuioctl	../vaxuba/uu.c	/^uuioctl(dev, cmd, data, flag)$/
uuopen	../vaxuba/uu.c	/^uuopen(dev, flag)$/
uuprobe	../vaxuba/uu.c	/^uuprobe(reg)$/
uureset	../vaxuba/uu.c	/^uureset(ctlr)$/
uurintr	../vaxuba/uu.c	/^uurintr(ctlr)$/
uustart	../vaxuba/uu.c	/^uustart(ui)$/
uustrategy	../vaxuba/uu.c	/^uustrategy(bp)$/
uuwake	../vaxuba/uu.c	/^uuwake(bp)$/
uuwatch	../vaxuba/uu.c	/^uuwatch()$/
uuxintr	../vaxuba/uu.c	/^uuxintr(ctlr)$/
uwritec	../sys/kern_subr.c	/^uwritec(uio)$/
v_first	../h/vmmeter.h	/^#define	v_first	v_swtch$/
v_last	../h/vmmeter.h	/^#define	v_last v_fastpgrec$/
va_softc	../vaxuba/va.c	/^struct va_softc {$/
vaattach	../vaxuba/va.c	/^vaattach(ui)$/
vaclose	../vaxuba/va.c	/^vaclose(dev)$/
vacmd	../vaxuba/va.c	/^vacmd(dev, vcmd)$/
vacsh	../vaxuba/va.c	/^#define	vacsh	vacs.vacsr.Vacsh$/
vacsl	../vaxuba/va.c	/^#define	vacsl	vacs.vacsr.Vacsl$/
vacsw	../vaxuba/va.c	/^#define	vacsw	vacs.Vacsw$/
vadevice	../vaxuba/va.c	/^struct	vadevice {$/
vadgo	../vaxuba/va.c	/^vadgo(um)$/
vadopio	../vaxuba/va.c	/^vadopio(dev, cmd)$/
vaintr	../vaxuba/va.c	/^vaintr(dev)$/
vaioctl	../vaxuba/va.c	/^vaioctl(dev, cmd, data, flag)$/
valloc	../vax/machdep.c	/^#define	valloc(name, type, num) \\$/
valloclim	../vax/machdep.c	/^#define	valloclim(name, type, num, lim) \\$/
vaopen	../vaxuba/va.c	/^vaopen(dev)$/
vaprobe	../vaxuba/va.c	/^vaprobe(reg)$/
vareset	../vaxuba/va.c	/^vareset(uban)$/
vaselect	../vaxuba/va.c	/^vaselect()$/
vaslave	../vaxuba/va.c	/^vaslave(ui, reg)$/
vastart	../vaxuba/va.c	/^vastart(um)$/
vastrategy	../vaxuba/va.c	/^vastrategy(bp)$/
vatimo	../vaxuba/va.c	/^vatimo(dev)$/
vawrite	../vaxuba/va.c	/^vawrite(dev, uio)$/
vaxboot	../vax/machdep.c	/^vaxboot()$/
vaxstd_clkread	../vax/clock.c	/^vaxstd_clkread(base)$/
vaxstd_clkstartrt	../vax/clock.c	/^vaxstd_clkstartrt()$/
vaxstd_clkwrite	../vax/clock.c	/^vaxstd_clkwrite()$/
vdoualarm	../vax/sys_machdep.c	/^vdoualarm(arg)$/
vfork	../sys/kern_fork.c	/^vfork()$/
vgetpt	../sys/vm_pt.c	/^vgetpt(p, pmemall)$/
vgetswu	../sys/vm_pt.c	/^vgetswu(p, utl)$/
vgetu	../sys/vm_pt.c	/^vgetu(p, palloc, map, newu, oldu)$/
vgetvm	../sys/vm_proc.c	/^vgetvm(ts, ds, ss)$/
vhangup	../sys/sys_inode.c	/^vhangup()$/
vinifod	../sys/vm_subr.c	/^vinifod(pte, fileno, ip, bfirst, count)$/
vinitpt	../sys/vm_pt.c	/^vinitpt(p)$/
vmaccess	../sys/vm_subr.c	/^vmaccess(ppte0, vaddr, size0)$/
vmdup	../sys/vm_proc.c	/^vmdup(p, pte, v, count, type)$/
vmemall	../sys/vm_mem.c	/^vmemall(pte, size, p, type)$/
vmemfree	../sys/vm_mem.c	/^vmemfree(pte, count)$/
vmfltmon	../sys/vm_mon.c	/^vmfltmon(hist, atime, amin, res, nmax)$/
vminit	../sys/vm_page.c	/^vminit()$/
vmmeter	../sys/vm_sched.c	/^vmmeter()$/
vmsizmon	../sys/vm_mon.c	/^vmsizmon()$/
vmtime	../vax/machdep.c	/^vmtime(otime, olbolt, oicr)$/
vmtotal	../sys/vm_sched.c	/^vmtotal()$/
vp_softc	../vaxuba/vp.c	/^struct vp_softc {$/
vpasspt	../sys/vm_pt.c	/^vpasspt(p, q, up, uq, umap)$/
vpassvm	../sys/vm_proc.c	/^vpassvm(p, q, up, uq, umap)$/
vpattach	../vaxuba/vp.c	/^vpattach(ui)$/
vpclose	../vaxuba/vp.c	/^vpclose(dev)$/
vpdevice	../vaxuba/vp.c	/^struct	vpdevice {$/
vpintr	../vaxuba/vp.c	/^vpintr(dev)$/
vpioctl	../vaxuba/vp.c	/^vpioctl(dev, cmd, data, flag)$/
vpopen	../vaxuba/vp.c	/^vpopen(dev)$/
vpprobe	../vaxuba/vp.c	/^vpprobe(reg)$/
vpreset	../vaxuba/vp.c	/^vpreset(uban)$/
vpselect	../vaxuba/vp.c	/^vpselect()$/
vpstart	../vaxuba/vp.c	/^vpstart(dev)$/
vpstrategy	../vaxuba/vp.c	/^vpstrategy(bp)$/
vptimo	../vaxuba/vp.c	/^vptimo(dev)$/
vpwait	../vaxuba/vp.c	/^vpwait(dev)$/
vpwrite	../vaxuba/vp.c	/^vpwrite(dev, uio)$/
vrelpt	../sys/vm_pt.c	/^vrelpt(p)$/
vrelswu	../sys/vm_pt.c	/^vrelswu(p, utl)$/
vrelu	../sys/vm_pt.c	/^vrelu(p, swapu)$/
vrelvm	../sys/vm_proc.c	/^vrelvm()$/
vsBox	../h/vsio.h	/^}vsBox;$/
vsBuffArea	../vaxuba/vs.c	/^struct vsBuffArea {$/
vsCursor	../h/vsio.h	/^}vsCursor;$/
vsError	../vaxuba/vs.c	/^vsError(vsp)$/
vsEvent	../h/vsio.h	/^}vsEvent;$/
vsFiberNudge	../vaxuba/vs.c	/^vsFiberNudge(dev)$/
vsInitDev	../vaxuba/vs.c	/^vsInitDev(dev, retry)$/
vsInitFiber	../vaxuba/vs.c	/^vsInitFiber(dev)$/
vsInitNudge	../vaxuba/vs.c	/^vsInitNudge(dev)$/
vsIoAddr	../h/vsio.h	/^} vsIoAddr;$/
vsIoAddrAddr	../h/vsio.h	/^typedef vsIoAddr *vsIoAddrAddr;$/
vsStats	../h/vsio.h	/^}vsStats;$/
vs_cs	../vaxuba/vsreg.h	/^struct vs_csr{$/
vs_cxr	../vaxuba/vsreg.h	/^#define	vs_cxr		vs_csr5$/
vs_cyr	../vaxuba/vsreg.h	/^#define	vs_cyr		vs_csr6$/
vs_fpar	../vaxuba/vsreg.h	/^struct vs_fparm{$/
vs_int	../vaxuba/vsreg.h	/^struct vs_intr{$/
vs_irr	../vaxuba/vsreg.h	/^#define	vs_irr		vs_csr1$/
vs_ivr	../vaxuba/vsreg.h	/^#define	vs_ivr		vs_csr7$/
vs_ivr2	../vaxuba/vsreg.h	/^#define	vs_ivr2		vs_csrf$/
vs_kb	../vaxuba/vsreg.h	/^struct vs_kbd{$/
vs_krr	../vaxuba/vsreg.h	/^#define	vs_krr		vs_csr2$/
vs_pr1	../vaxuba/vsreg.h	/^#define	vs_pr1		vs_csr3$/
vs_pr2	../vaxuba/vsreg.h	/^#define	vs_pr2		vs_csr4$/
vs_softc	../vaxuba/vs.c	/^struct vs_softc {$/
vs_spr2	../vaxuba/vsreg.h	/^#define	vs_spr2		vs_csr8$/
vs_spr3	../vaxuba/vsreg.h	/^#define	vs_spr3		vs_csr9$/
vs_spr4	../vaxuba/vsreg.h	/^#define	vs_spr4		vs_csra$/
vs_spr5	../vaxuba/vsreg.h	/^#define	vs_spr5		vs_csrb$/
vs_spr6	../vaxuba/vsreg.h	/^#define	vs_spr6		vs_csrc$/
vs_spr7	../vaxuba/vsreg.h	/^#define	vs_spr7		vs_csrd$/
vs_spr8	../vaxuba/vsreg.h	/^#define	vs_spr8		vs_csre$/
vsattach	../vaxuba/vs.c	/^vsattach(uip)$/
vschunk	../sys/vm_drum.c	/^vschunk(p, base, size, type, dmp)$/
vsclose	../vaxuba/vs.c	/^vsclose(dev)$/
vsdevic	../vaxuba/vsreg.h	/^struct vsdevice{$/
vsexpand	../sys/vm_drum.c	/^vsexpand(vssize, dmp, canshrink)$/
vsintr	../vaxuba/vs.c	/^vsintr(dev)$/
vsioctl	../vaxuba/vs.c	/^vsioctl(dev, cmd, addr, flag)$/
vslock	../sys/vm_mem.c	/^vslock(base, count)$/
vsopen	../vaxuba/vs.c	/^vsopen(dev, flag)$/
vsprobe	../vaxuba/vs.c	/^vsprobe(reg)$/
vsread	../vaxuba/vs.c	/^vsread(dev,uio)$/
vsreset	../vaxuba/vs.c	/^vsreset(uban)$/
vsselect	../vaxuba/vs.c	/^vsselect(dev, rw)$/
vsswap	../sys/vm_drum.c	/^vsswap(p, pte, type, vsbase, vscount, dmp)$/
vstodb	../sys/vm_drum.c	/^vstodb(vsbase, vssize, dmp, dbp, rev)$/
vsunlock	../sys/vm_mem.c	/^vsunlock(base, count, rw)$/
vswrite	../vaxuba/vs.c	/^vswrite(dev, uio)$/
vsxalloc	../sys/vm_drum.c	/^vsxalloc(xp)$/
vsxfree	../sys/vm_drum.c	/^vsxfree(xp, ts)$/
vtimes	../h/vtimes.h	/^struct vtimes {$/
vtod	../sys/vm_drum.c	/^vtod(p, v, dmap, smap)$/
vtodp	../h/vmmac.h	/^#define	vtodp(p, v)	((int)((v) - stoc(ctos((p)->p_/
vtopte	../h/vmmac.h	/^#define vtopte(p, v) \\$/
vtosp	../h/vmmac.h	/^#define	vtosp(p, v)	((int)(BTOPUSRSTACK - 1 - (v))/
vtotp	../h/vmmac.h	/^#define	vtotp(p, v)	((int)(v))$/
vtrace	../vax/sys_machdep.c	/^vtrace()$/
vusize	../sys/vm_pt.c	/^vusize(p, utl)$/
vv_header	../vaxif/if_vv.h	/^struct vv_header {$/
vv_softc	../vaxif/if_vv.c	/^struct	vv_softc {$/
vvattach	../vaxif/if_vv.c	/^vvattach(ui)$/
vvdataaddr	../vaxif/if_vv.c	/^#define	vvdataaddr(vv, off, type)	((type)(((caddr_/
vvidentify	../vaxif/if_vv.c	/^vvidentify(unit)$/
vvinit	../vaxif/if_vv.c	/^vvinit(unit)$/
vvioctl	../vaxif/if_vv.c	/^vvioctl(ifp, cmd, data)$/
vvoutput	../vaxif/if_vv.c	/^vvoutput(ifp, m0, dst)$/
vvprintf	../vaxif/if_vv.c	/^#define vvprintf    if (vs->vs_if.if_flags & IFF_D/
vvprobe	../vaxif/if_vv.c	/^vvprobe(reg)$/
vvprt_hdr	../vaxif/if_vv.c	/^vvprt_hdr(s, v)$/
vvreg	../vaxif/if_vv.h	/^struct vvreg {$/
vvreset	../vaxif/if_vv.c	/^vvreset(unit, uban)$/
vvrint	../vaxif/if_vv.c	/^vvrint(unit)$/
vvstart	../vaxif/if_vv.c	/^vvstart(dev)$/
vvtracehdr	../vaxif/if_vv.c	/^#define vvtracehdr  if (vv_tracehdr) vvprt_hdr$/
vvwatchdog	../vaxif/if_vv.c	/^vvwatchdog(unit)$/
vvxint	../vaxif/if_vv.c	/^vvxint(unit)$/
w_coredump	../h/wait.h	/^#define w_coredump	w_T.w_Coredump$/
w_retcode	../h/wait.h	/^#define w_retcode	w_T.w_Retcode$/
w_stopsig	../h/wait.h	/^#define w_stopsig	w_S.w_Stopsig$/
w_stopval	../h/wait.h	/^#define w_stopval	w_S.w_Stopval$/
w_termsig	../h/wait.h	/^#define	w_termsig	w_T.w_Termsig$/
wait	../sys/kern_exit.c	/^wait()$/
wait1	../sys/kern_exit.c	/^wait1(options, ru)$/
wakeup	../sys/kern_synch.c	/^wakeup(chan)$/
winsize	../h/ioctl.h	/^struct winsize {$/
word_t	../sys/tty_subr.c	/^typedef	u_short word_t;$/
write	../sys/sys_generic.c	/^write()$/
writedisklabel	../sys/ufs_disksubr.c	/^writedisklabel(dev, strat, lp)$/
writev	../sys/sys_generic.c	/^writev()$/
x25_init	../vaxif/if_ddn.c	/^static void x25_init(ds)$/
xalloc	../sys/vm_text.c	/^xalloc(ip, ep, pagi)$/
xccdec	../sys/vm_text.c	/^xccdec(xp, p)$/
xchg	../netinet/tcp_subr.c	/^#define xchg(a,b,type) { type t; t=a; a=b; b=t; }$/
xdetach	../sys/vm_text.c	/^xdetach(xp, p)$/
xfree	../sys/vm_text.c	/^xfree()$/
xinit	../sys/vm_text.c	/^xinit()$/
xlink	../sys/vm_text.c	/^xlink(p)$/
xlock	../sys/vm_text.c	/^xlock(xp)$/
xrele	../sys/vm_text.c	/^xrele(ip)$/
xrepl	../sys/vm_text.c	/^xrepl(p, q)$/
xs_addr	../vaxif/if_ex.c	/^#define	xs_addr	xs_ac.ac_enaddr		\/* hardware Ethe/
xs_if	../vaxif/if_ex.c	/^#define	xs_if	xs_ac.ac_if		\/* network-visible int/
xstats	../h/text.h	/^struct xstats {$/
xumount	../sys/vm_text.c	/^xumount(dev)$/
xunlink	../sys/vm_text.c	/^xunlink(p)$/
xunlock	../sys/vm_text.c	/^xunlock(xp)$/
xuntext	../sys/vm_text.c	/^xuntext(xp)$/
xwait	../sys/vm_text.c	/^xwait(xp)$/
zapcl	../h/vmmac.h	/^#define	zapcl(pte,fld)	(pte)->fld$/
